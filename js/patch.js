/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var CABLES;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/core/cgl/cgl_shader_default_glsl.vert":
/*!***************************************************!*\
  !*** ./src/core/cgl/cgl_shader_default_glsl.vert ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"{{MODULES_HEAD}}\\nIN vec3 vPosition;\\nIN vec2 attrTexCoord;\\nIN vec3 attrVertNormal;\\nIN vec3 attrTangent,attrBiTangent;\\n\\nIN float attrVertIndex;\\n\\nOUT vec2 texCoord;\\nOUT vec3 norm;\\nUNI mat4 projMatrix;\\nUNI mat4 viewMatrix;\\nUNI mat4 modelMatrix;\\n\\nvoid main()\\n{\\n    texCoord=attrTexCoord;\\n    norm=attrVertNormal;\\n    vec4 pos=vec4(vPosition,  1.0);\\n    vec3 tangent=attrTangent;\\n    vec3 bitangent=attrBiTangent;\\n    mat4 mMatrix=modelMatrix;\\n    gl_PointSize=10.0;\\n\\n    {{MODULE_VERTEX_POSITION}}\\n    gl_Position = projMatrix * (viewMatrix*mMatrix) * pos;\\n}\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ2wvY2dsX3NoYWRlcl9kZWZhdWx0X2dsc2wudmVydC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DQUJMRVMvLi9zcmMvY29yZS9jZ2wvY2dsX3NoYWRlcl9kZWZhdWx0X2dsc2wudmVydD9jNTJmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwie3tNT0RVTEVTX0hFQUR9fVxcbklOIHZlYzMgdlBvc2l0aW9uO1xcbklOIHZlYzIgYXR0clRleENvb3JkO1xcbklOIHZlYzMgYXR0clZlcnROb3JtYWw7XFxuSU4gdmVjMyBhdHRyVGFuZ2VudCxhdHRyQmlUYW5nZW50O1xcblxcbklOIGZsb2F0IGF0dHJWZXJ0SW5kZXg7XFxuXFxuT1VUIHZlYzIgdGV4Q29vcmQ7XFxuT1VUIHZlYzMgbm9ybTtcXG5VTkkgbWF0NCBwcm9qTWF0cml4O1xcblVOSSBtYXQ0IHZpZXdNYXRyaXg7XFxuVU5JIG1hdDQgbW9kZWxNYXRyaXg7XFxuXFxudm9pZCBtYWluKClcXG57XFxuICAgIHRleENvb3JkPWF0dHJUZXhDb29yZDtcXG4gICAgbm9ybT1hdHRyVmVydE5vcm1hbDtcXG4gICAgdmVjNCBwb3M9dmVjNCh2UG9zaXRpb24sICAxLjApO1xcbiAgICB2ZWMzIHRhbmdlbnQ9YXR0clRhbmdlbnQ7XFxuICAgIHZlYzMgYml0YW5nZW50PWF0dHJCaVRhbmdlbnQ7XFxuICAgIG1hdDQgbU1hdHJpeD1tb2RlbE1hdHJpeDtcXG4gICAgZ2xfUG9pbnRTaXplPTEwLjA7XFxuXFxuICAgIHt7TU9EVUxFX1ZFUlRFWF9QT1NJVElPTn19XFxuICAgIGdsX1Bvc2l0aW9uID0gcHJvak1hdHJpeCAqICh2aWV3TWF0cml4Km1NYXRyaXgpICogcG9zO1xcbn1cXG5cIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_shader_default_glsl.vert\n");

/***/ }),

/***/ "./src/core/cgp/cgl_shader_default.wgsl":
/*!**********************************************!*\
  !*** ./src/core/cgp/cgl_shader_default.wgsl ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"struct VSUniforms\\n{\\n    modelMatrix: mat4x4<f32>,\\n    viewMatrix: mat4x4<f32>,\\n    projMatrix: mat4x4<f32>,\\n};\\n\\nstruct FSUniforms\\n{\\n    color:vec4<f32>\\n};\\n\\n@group(0) @binding(0) var<uniform> vsUniforms: VSUniforms;\\n@group(0) @binding(1) var<uniform> fsUniforms: FSUniforms;\\n\\nstruct MyVSInput\\n{\\n    @location(0) position: vec3<f32>,\\n    @location(1) normal: vec3<f32>,\\n    @location(2) texcoord: vec2<f32>,\\n};\\n\\nstruct MyVSOutput\\n{\\n    @builtin(position) position: vec4<f32>,\\n    @location(0) normal: vec3<f32>,\\n    @location(1) texcoord: vec2<f32>,\\n};\\n\\n@vertex\\nfn myVSMain(v: MyVSInput) -> MyVSOutput\\n{\\n    var vsOut: MyVSOutput;\\n    var pos =vec4<f32>(v.position, 1.0);\\n\\n    var mvMatrix=vsUniforms.viewMatrix * vsUniforms.modelMatrix;\\n    vsOut.position = vsUniforms.projMatrix * mvMatrix * pos;\\n\\n    vsOut.normal = v.normal;\\n    vsOut.texcoord = v.texcoord;\\n    return vsOut;\\n}\\n\\n@fragment\\nfn myFSMain(v: MyVSOutput) -> @location(0) vec4<f32>\\n{\\n    return fsUniforms.color+vec4<f32>(.5,.5,.5,1.0);\\n}\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ3AvY2dsX3NoYWRlcl9kZWZhdWx0Lndnc2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ0FCTEVTLy4vc3JjL2NvcmUvY2dwL2NnbF9zaGFkZXJfZGVmYXVsdC53Z3NsPzZmYTkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJzdHJ1Y3QgVlNVbmlmb3Jtc1xcbntcXG4gICAgbW9kZWxNYXRyaXg6IG1hdDR4NDxmMzI+LFxcbiAgICB2aWV3TWF0cml4OiBtYXQ0eDQ8ZjMyPixcXG4gICAgcHJvak1hdHJpeDogbWF0NHg0PGYzMj4sXFxufTtcXG5cXG5zdHJ1Y3QgRlNVbmlmb3Jtc1xcbntcXG4gICAgY29sb3I6dmVjNDxmMzI+XFxufTtcXG5cXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMCkgdmFyPHVuaWZvcm0+IHZzVW5pZm9ybXM6IFZTVW5pZm9ybXM7XFxuQGdyb3VwKDApIEBiaW5kaW5nKDEpIHZhcjx1bmlmb3JtPiBmc1VuaWZvcm1zOiBGU1VuaWZvcm1zO1xcblxcbnN0cnVjdCBNeVZTSW5wdXRcXG57XFxuICAgIEBsb2NhdGlvbigwKSBwb3NpdGlvbjogdmVjMzxmMzI+LFxcbiAgICBAbG9jYXRpb24oMSkgbm9ybWFsOiB2ZWMzPGYzMj4sXFxuICAgIEBsb2NhdGlvbigyKSB0ZXhjb29yZDogdmVjMjxmMzI+LFxcbn07XFxuXFxuc3RydWN0IE15VlNPdXRwdXRcXG57XFxuICAgIEBidWlsdGluKHBvc2l0aW9uKSBwb3NpdGlvbjogdmVjNDxmMzI+LFxcbiAgICBAbG9jYXRpb24oMCkgbm9ybWFsOiB2ZWMzPGYzMj4sXFxuICAgIEBsb2NhdGlvbigxKSB0ZXhjb29yZDogdmVjMjxmMzI+LFxcbn07XFxuXFxuQHZlcnRleFxcbmZuIG15VlNNYWluKHY6IE15VlNJbnB1dCkgLT4gTXlWU091dHB1dFxcbntcXG4gICAgdmFyIHZzT3V0OiBNeVZTT3V0cHV0O1xcbiAgICB2YXIgcG9zID12ZWM0PGYzMj4odi5wb3NpdGlvbiwgMS4wKTtcXG5cXG4gICAgdmFyIG12TWF0cml4PXZzVW5pZm9ybXMudmlld01hdHJpeCAqIHZzVW5pZm9ybXMubW9kZWxNYXRyaXg7XFxuICAgIHZzT3V0LnBvc2l0aW9uID0gdnNVbmlmb3Jtcy5wcm9qTWF0cml4ICogbXZNYXRyaXggKiBwb3M7XFxuXFxuICAgIHZzT3V0Lm5vcm1hbCA9IHYubm9ybWFsO1xcbiAgICB2c091dC50ZXhjb29yZCA9IHYudGV4Y29vcmQ7XFxuICAgIHJldHVybiB2c091dDtcXG59XFxuXFxuQGZyYWdtZW50XFxuZm4gbXlGU01haW4odjogTXlWU091dHB1dCkgLT4gQGxvY2F0aW9uKDApIHZlYzQ8ZjMyPlxcbntcXG4gICAgcmV0dXJuIGZzVW5pZm9ybXMuY29sb3IrdmVjNDxmMzI+KC41LC41LC41LDEuMCk7XFxufVxcblxcblwiOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/cgp/cgl_shader_default.wgsl\n");

/***/ }),

/***/ "./src/core/anim.js":
/*!**************************!*\
  !*** ./src/core/anim.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ANIM\": () => (/* binding */ ANIM),\n/* harmony export */   \"Anim\": () => (/* binding */ Anim)\n/* harmony export */ });\n/* harmony import */ var _anim_key__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./anim_key */ \"./src/core/anim_key.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/core/constants.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core_logger */ \"./src/core/core_logger.js\");\n/* harmony import */ var _eventtarget__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventtarget */ \"./src/core/eventtarget.js\");\n\n\n\n\n\n/**\n * Keyframed interpolated animation.\n *\n * Available Easings:\n * <pre>\n * CONSTANTS.ANIM.EASING_LINEAR\n * CONSTANTS.ANIM.EASING_ABSOLUTE\n * CONSTANTS.ANIM.EASING_SMOOTHSTEP\n * CONSTANTS.ANIM.EASING_SMOOTHERSTEP\n * CONSTANTS.ANIM.EASING_CUBICSPLINE\n\n * CONSTANTS.ANIM.EASING_CUBIC_IN\n * CONSTANTS.ANIM.EASING_CUBIC_OUT\n * CONSTANTS.ANIM.EASING_CUBIC_INOUT\n\n * CONSTANTS.ANIM.EASING_EXPO_IN\n * CONSTANTS.ANIM.EASING_EXPO_OUT\n * CONSTANTS.ANIM.EASING_EXPO_INOUT\n\n * CONSTANTS.ANIM.EASING_SIN_IN\n * CONSTANTS.ANIM.EASING_SIN_OUT\n * CONSTANTS.ANIM.EASING_SIN_INOUT\n\n * CONSTANTS.ANIM.EASING_BACK_IN\n * CONSTANTS.ANIM.EASING_BACK_OUT\n * CONSTANTS.ANIM.EASING_BACK_INOUT\n\n * CONSTANTS.ANIM.EASING_ELASTIC_IN\n * CONSTANTS.ANIM.EASING_ELASTIC_OUT\n\n * CONSTANTS.ANIM.EASING_BOUNCE_IN\n * CONSTANTS.ANIM.EASING_BOUNCE_OUT\n\n * CONSTANTS.ANIM.EASING_QUART_IN\n * CONSTANTS.ANIM.EASING_QUART_OUT\n * CONSTANTS.ANIM.EASING_QUART_INOUT\n\n * CONSTANTS.ANIM.EASING_QUINT_IN\n * CONSTANTS.ANIM.EASING_QUINT_OUT\n * CONSTANTS.ANIM.EASING_QUINT_INOUT\n * </pre>\n * @hideconstructor\n * @external CABLES\n * @namespace Anim\n * @class\n * @example\n * var anim=new CABLES.Anim();\n * anim.setValue(0,0);  // set value 0 at 0 seconds\n * anim.setValue(10,1); // set value 1 at 10 seconds\n * anim.getValue(5);    // get value at 5 seconds - this returns 0.5\n */\n\nconst Anim = function (cfg)\n{\n    _eventtarget__WEBPACK_IMPORTED_MODULE_3__.EventTarget.apply(this);\n\n    cfg = cfg || {};\n    this.keys = [];\n    this.onChange = null;\n    this.stayInTimeline = false;\n    this.loop = false;\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\"Anim\");\n    this._lastKeyIndex = 0;\n    this._cachedIndex = 0;\n    this.name = cfg.name || null;\n\n    /**\n     * @member defaultEasing\n     * @memberof Anim\n     * @instance\n     * @type {Number}\n     */\n    this.defaultEasing = cfg.defaultEasing || _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_LINEAR;\n    this.onLooped = null;\n\n    this._timesLooped = 0;\n    this._needsSort = false;\n};\n\nAnim.prototype.forceChangeCallback = function ()\n{\n    if (this.onChange !== null) this.onChange();\n    this.emitEvent(\"onChange\", this);\n};\n\nAnim.prototype.getLoop = function ()\n{\n    return this.loop;\n};\n\nAnim.prototype.setLoop = function (target)\n{\n    this.loop = target;\n    this.emitEvent(\"onChange\", this);\n};\n\n/**\n * returns true if animation has ended at @time\n * checks if last key time is < time\n * @param {Number} time\n * @returns {Boolean}\n * @memberof Anim\n * @instance\n * @function\n */\nAnim.prototype.hasEnded = function (time)\n{\n    if (this.keys.length === 0) return true;\n    if (this.keys[this._lastKeyIndex].time <= time) return true;\n    return false;\n};\n\nAnim.prototype.isRising = function (time)\n{\n    if (this.hasEnded(time)) return false;\n    const ki = this.getKeyIndex(time);\n    if (this.keys[ki].value < this.keys[ki + 1].value) return true;\n    return false;\n};\n\n/**\n * remove all keys from animation before time\n * @param {Number} time\n * @memberof Anim\n * @instance\n * @function\n */\nAnim.prototype.clearBefore = function (time)\n{\n    const v = this.getValue(time);\n    const ki = this.getKeyIndex(time);\n\n    this.setValue(time, v);\n\n    if (ki > 1) this.keys.splice(0, ki);\n    this._updateLastIndex();\n};\n/**\n * remove all keys from animation\n * @param {Number} [time=0] set a new key at time with the old value at time\n * @memberof Anim\n * @instance\n * @function\n */\nAnim.prototype.clear = function (time)\n{\n    let v = 0;\n    if (time) v = this.getValue(time);\n    this.keys.length = 0;\n    this._updateLastIndex();\n    if (time) this.setValue(time, v);\n    if (this.onChange !== null) this.onChange();\n    this.emitEvent(\"onChange\", this);\n};\n\nAnim.prototype.sortKeys = function ()\n{\n    this.keys.sort((a, b) => { return parseFloat(a.time) - parseFloat(b.time); });\n    this._updateLastIndex();\n    this._needsSort = false;\n    if (this.keys.length % 1000 == 0)console.log(this.name, this.keys.length);\n};\n\nAnim.prototype.getLength = function ()\n{\n    if (this.keys.length === 0) return 0;\n    return this.keys[this.keys.length - 1].time;\n};\n\nAnim.prototype.getKeyIndex = function (time)\n{\n    let index = 0;\n    let start = 0;\n    if (this._cachedIndex && this.keys.length > this._cachedIndex && time >= this.keys[this._cachedIndex].time) start = this._cachedIndex;\n    for (let i = start; i < this.keys.length; i++)\n    {\n        if (time >= this.keys[i].time) index = i;\n        if (this.keys[i].time > time)\n        {\n            if (time != 0) this._cachedIndex = index;\n            return index;\n        }\n    }\n\n    return index;\n};\n\n/**\n * set value at time\n * @function setValue\n * @memberof Anim\n * @instance\n * @param {Number} time\n * @param {Number} value\n * @param {Function} [callback] callback\n */\nAnim.prototype.setValue = function (time, value, cb)\n{\n    let found = null;\n\n    if (this.keys.length == 0 || time <= this.keys[this.keys.length - 1].time)\n        for (let i = 0; i < this.keys.length; i++)\n            if (this.keys[i].time == time)\n            {\n                found = this.keys[i];\n                this.keys[i].setValue(value);\n                this.keys[i].cb = cb;\n                break;\n            }\n\n    if (!found)\n    {\n        found = new _anim_key__WEBPACK_IMPORTED_MODULE_0__.Key(\n            {\n                \"time\": time,\n                \"value\": value,\n                \"e\": this.defaultEasing,\n                \"cb\": cb,\n            });\n        this.keys.push(found);\n\n        if (this.keys.length % 1000 == 0)console.log(this.name, this.keys.length);\n        this._updateLastIndex();\n    }\n\n    if (this.onChange) this.onChange();\n    this.emitEvent(\"onChange\", this);\n    this._needsSort = true;\n    return found;\n};\n\nAnim.prototype.setKeyEasing = function (index, e)\n{\n    if (this.keys[index])\n    {\n        this.keys[index].setEasing(e);\n        this.emitEvent(\"onChange\", this);\n    }\n};\n\nAnim.prototype.getSerialized = function ()\n{\n    const obj = {};\n    obj.keys = [];\n    obj.loop = this.loop;\n\n    for (let i = 0; i < this.keys.length; i++)\n        obj.keys.push(this.keys[i].getSerialized());\n\n    return obj;\n};\n\nAnim.prototype.getKey = function (time)\n{\n    const index = this.getKeyIndex(time);\n    return this.keys[index];\n};\n\nAnim.prototype.getNextKey = function (time)\n{\n    let index = this.getKeyIndex(time) + 1;\n    if (index >= this.keys.length) index = this.keys.length - 1;\n\n    return this.keys[index];\n};\n\nAnim.prototype.isFinished = function (time)\n{\n    if (this.keys.length <= 0) return true;\n    return time > this.keys[this.keys.length - 1].time;\n};\n\nAnim.prototype.isStarted = function (time)\n{\n    if (this.keys.length <= 0) return false;\n    return time >= this.keys[0].time;\n};\n\n/**\n * get value at time\n * @function getValue\n * @memberof Anim\n * @instance\n * @param {Number} [time] time\n * @returns {Number} interpolated value at time\n */\nAnim.prototype.getValue = function (time)\n{\n    if (this.keys.length === 0)\n    {\n        return 0;\n    }\n    if (this._needsSort) this.sortKeys();\n\n    if (!this.loop && time > this.keys[this._lastKeyIndex].time)\n    {\n        // if (this.name)console.log(\"lastkey\", this.name, this._lastKeyIndex, this.keys.length, this.keys[this._lastKeyIndex].time);\n\n        return this.keys[this._lastKeyIndex].value;\n    }\n\n    if (time < this.keys[0].time)\n    {\n        // if (this.name)console.log(\"A\");\n\n        return this.keys[0].value;\n    }\n\n    if (this.loop && time > this.keys[this._lastKeyIndex].time)\n    {\n        const currentLoop = time / this.keys[this._lastKeyIndex].time;\n        if (currentLoop > this._timesLooped)\n        {\n            this._timesLooped++;\n            if (this.onLooped) this.onLooped();\n        }\n        time = (time - this.keys[0].time) % (this.keys[this._lastKeyIndex].time - this.keys[0].time);\n        time += this.keys[0].time;\n    }\n\n    const index = this.getKeyIndex(time);\n    if (index >= this._lastKeyIndex)\n    {\n        if (this.keys[this._lastKeyIndex].cb && !this.keys[this._lastKeyIndex].cbTriggered) this.keys[this._lastKeyIndex].trigger();\n\n        // if (this.name)console.log(\"B\");\n\n        return this.keys[this._lastKeyIndex].value;\n    }\n\n\n    const index2 = index + 1;\n    const key1 = this.keys[index];\n    const key2 = this.keys[index2];\n\n    if (key1.cb && !key1.cbTriggered) key1.trigger();\n\n    if (!key2) return -1;\n\n    const perc = (time - key1.time) / (key2.time - key1.time);\n\n    if (!key1.ease) this.log._warn(\"has no ease\", key1, key2);\n\n    return key1.ease(perc, key2);\n};\n\nAnim.prototype._updateLastIndex = function ()\n{\n    this._lastKeyIndex = this.keys.length - 1;\n};\n\nAnim.prototype.addKey = function (k)\n{\n    if (k.time === undefined)\n    {\n        this.log.warn(\"key time undefined, ignoring!\");\n    }\n    else\n    {\n        this.keys.push(k);\n        if (this.onChange !== null) this.onChange();\n        this.emitEvent(\"onChange\", this);\n    }\n    this._updateLastIndex();\n};\n\nAnim.prototype.easingFromString = function (str)\n{\n    if (str == \"linear\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_LINEAR;\n    if (str == \"absolute\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_ABSOLUTE;\n    if (str == \"smoothstep\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_SMOOTHSTEP;\n    if (str == \"smootherstep\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_SMOOTHERSTEP;\n\n    if (str == \"Cubic In\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_CUBIC_IN;\n    if (str == \"Cubic Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_CUBIC_OUT;\n    if (str == \"Cubic In Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_CUBIC_INOUT;\n\n    if (str == \"Expo In\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_EXPO_IN;\n    if (str == \"Expo Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_EXPO_OUT;\n    if (str == \"Expo In Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_EXPO_INOUT;\n\n    if (str == \"Sin In\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_SIN_IN;\n    if (str == \"Sin Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_SIN_OUT;\n    if (str == \"Sin In Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_SIN_INOUT;\n\n    if (str == \"Back In\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_BACK_IN;\n    if (str == \"Back Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_BACK_OUT;\n    if (str == \"Back In Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_BACK_INOUT;\n\n    if (str == \"Elastic In\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_ELASTIC_IN;\n    if (str == \"Elastic Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_ELASTIC_OUT;\n\n    if (str == \"Bounce In\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_BOUNCE_IN;\n    if (str == \"Bounce Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_BOUNCE_OUT;\n\n    if (str == \"Quart Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_QUART_OUT;\n    if (str == \"Quart In\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_QUART_IN;\n    if (str == \"Quart In Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_QUART_INOUT;\n\n    if (str == \"Quint Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_QUINT_OUT;\n    if (str == \"Quint In\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_QUINT_IN;\n    if (str == \"Quint In Out\") return _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASING_QUINT_INOUT;\n};\n\nAnim.prototype.createPort = function (op, title, cb)\n{\n    const port = op.inDropDown(title, _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.ANIM.EASINGS);\n\n    // const port = op.addInPort(\n    //     new Port(op, title, CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n    //         \"display\": \"dropdown\",\n    //         \"values\": CONSTANTS.ANIM.EASINGS,\n    //     }),\n    // );\n\n    port.set(\"linear\");\n    port.defaultValue = \"linear\";\n\n    port.onChange = function ()\n    {\n        this.defaultEasing = this.easingFromString(port.get());\n        this.emitEvent(\"onChangeDefaultEasing\", this);\n\n        if (cb) cb();\n    }.bind(this);\n\n    return port;\n};\n\n// ------------------------------\n\nAnim.slerpQuaternion = function (time, q, animx, animy, animz, animw)\n{\n    if (!Anim.slerpQuaternion.q1)\n    {\n        Anim.slerpQuaternion.q1 = quat.create();\n        Anim.slerpQuaternion.q2 = quat.create();\n    }\n\n    const i1 = animx.getKeyIndex(time);\n    let i2 = i1 + 1;\n    if (i2 >= animx.keys.length) i2 = animx.keys.length - 1;\n\n    if (i1 == i2)\n    {\n        quat.set(q, animx.keys[i1].value, animy.keys[i1].value, animz.keys[i1].value, animw.keys[i1].value);\n    }\n    else\n    {\n        const key1Time = animx.keys[i1].time;\n        const key2Time = animx.keys[i2].time;\n        const perc = (time - key1Time) / (key2Time - key1Time);\n\n        quat.set(Anim.slerpQuaternion.q1, animx.keys[i1].value, animy.keys[i1].value, animz.keys[i1].value, animw.keys[i1].value);\n\n        quat.set(Anim.slerpQuaternion.q2, animx.keys[i2].value, animy.keys[i2].value, animz.keys[i2].value, animw.keys[i2].value);\n\n        quat.slerp(q, Anim.slerpQuaternion.q1, Anim.slerpQuaternion.q2, perc);\n    }\n    return q;\n};\n\nconst ANIM = { \"Key\": _anim_key__WEBPACK_IMPORTED_MODULE_0__.Key };\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/anim.js\n");

/***/ }),

/***/ "./src/core/anim_key.js":
/*!******************************!*\
  !*** ./src/core/anim_key.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Key\": () => (/* binding */ Key),\n/* harmony export */   \"easeCubicIn\": () => (/* binding */ easeCubicIn),\n/* harmony export */   \"easeCubicInOut\": () => (/* binding */ easeCubicInOut),\n/* harmony export */   \"easeCubicOut\": () => (/* binding */ easeCubicOut),\n/* harmony export */   \"easeExpoIn\": () => (/* binding */ easeExpoIn),\n/* harmony export */   \"easeExpoInOut\": () => (/* binding */ easeExpoInOut),\n/* harmony export */   \"easeExpoOut\": () => (/* binding */ easeExpoOut)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/core/constants.js\");\n\n\nconst Key = function (obj)\n{\n    this.time = 0.0;\n    this.value = 0.0;\n    // this.ui = null;\n    this.onChange = null;\n    this._easing = 0;\n    // this.bezTangIn = 0;\n    // this.bezTangOut = 0;\n    // this.bezTime = 0.5;\n    // this.bezValue = 0;\n    // this.bezTimeIn = -0.5;\n    // this.bezValueIn = 0;\n\n    this.cb = null;\n    this.cbTriggered = false;\n\n    // const bezierAnim = null;\n    // this._updateBezier = false;\n\n    this.setEasing(_constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_LINEAR);\n    this.set(obj);\n};\n\nKey.cubicSpline = function (perc, key1, key2)\n{\n    let\n        previousPoint = key1.value,\n        previousTangent = key1.bezTangOut,\n        nextPoint = key2.value,\n        nextTangent = key2.bezTangIn;\n    let t = perc;\n    let t2 = t * t;\n    let t3 = t2 * t;\n\n    return (2 * t3 - 3 * t2 + 1) * previousPoint + (t3 - 2 * t2 + t) * previousTangent + (-2 * t3 + 3 * t2) * nextPoint + (t3 - t2) * nextTangent;\n};\n\nKey.easeCubicSpline = function (perc, key2)\n{\n    return Key.cubicSpline(perc, this, key2);\n};\n\n\nKey.linear = function (perc, key1, key2)\n{\n    return parseFloat(key1.value) + parseFloat(key2.value - key1.value) * perc;\n};\n\nKey.easeLinear = function (perc, key2)\n{\n    return Key.linear(perc, this, key2);\n};\n\nKey.easeAbsolute = function (perc, key2)\n{\n    return this.value;\n};\n\nconst easeExpoIn = function (t)\n{\n    return (t = 2 ** (10 * (t - 1)));\n};\n\nKey.easeExpoIn = function (t, key2)\n{\n    t = easeExpoIn(t);\n    return Key.linear(t, this, key2);\n};\n\nconst easeExpoOut = function (t)\n{\n    t = -(2 ** (-10 * t)) + 1;\n    return t;\n};\n\nKey.easeExpoOut = function (t, key2)\n{\n    t = easeExpoOut(t);\n    return Key.linear(t, this, key2);\n};\n\nconst easeExpoInOut = function (t)\n{\n    t *= 2;\n    if (t < 1)\n    {\n        t = 0.5 * 2 ** (10 * (t - 1));\n    }\n    else\n    {\n        t--;\n        t = 0.5 * (-(2 ** (-10 * t)) + 2);\n    }\n    return t;\n};\n\nKey.easeExpoInOut = function (t, key2)\n{\n    t = easeExpoInOut(t);\n    return Key.linear(t, this, key2);\n};\n\nKey.easeSinIn = function (t, key2)\n{\n    t = -1 * Math.cos((t * Math.PI) / 2) + 1;\n    return Key.linear(t, this, key2);\n};\n\nKey.easeSinOut = function (t, key2)\n{\n    t = Math.sin((t * Math.PI) / 2);\n    return Key.linear(t, this, key2);\n};\n\nKey.easeSinInOut = function (t, key2)\n{\n    t = -0.5 * (Math.cos(Math.PI * t) - 1.0);\n    return Key.linear(t, this, key2);\n};\n\nconst easeCubicIn = function (t)\n{\n    t = t * t * t;\n    return t;\n};\n\nKey.easeCubicIn = function (t, key2)\n{\n    t = easeCubicIn(t);\n    return Key.linear(t, this, key2);\n};\n\n\n// b 0\n// c 1/2 or 1\n// d always 1\n// easeOutCubic: function (x, t, b, c, d) {\n//     return c*((t=t/d-1)*t*t + 1) + b;\n\nKey.easeInQuint = function (t, key2)\n{\n    t = t * t * t * t * t;\n    return Key.linear(t, this, key2);\n};\nKey.easeOutQuint = function (t, key2)\n{\n    t = (t -= 1) * t * t * t * t + 1;\n    return Key.linear(t, this, key2);\n};\nKey.easeInOutQuint = function (t, key2)\n{\n    if ((t /= 0.5) < 1) t = 0.5 * t * t * t * t * t;\n    else t = 0.5 * ((t -= 2) * t * t * t * t + 2);\n    return Key.linear(t, this, key2);\n};\n\nKey.easeInQuart = function (t, key2)\n{\n    t = t * t * t * t;\n    return Key.linear(t, this, key2);\n};\n\nKey.easeOutQuart = function (t, key2)\n{\n    // return -c * ((t=t/d-1)*t*t*t - 1) + b;\n    t = -1 * ((t -= 1) * t * t * t - 1);\n    return Key.linear(t, this, key2);\n};\n\nKey.easeInOutQuart = function (t, key2)\n{\n    if ((t /= 0.5) < 1) t = 0.5 * t * t * t * t;\n    else t = -0.5 * ((t -= 2) * t * t * t - 2);\n    return Key.linear(t, this, key2);\n};\n\nKey.bounce = function (t)\n{\n    if ((t /= 1) < 1 / 2.75) t = 7.5625 * t * t;\n    else if (t < 2 / 2.75) t = 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    else if (t < 2.5 / 2.75) t = 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    else t = 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    return t;\n};\n\nKey.easeInBounce = function (t, key2)\n{\n    return Key.linear(Key.bounce(t), this, key2);\n    // return c - jQuery.easing.easeOutBounce (x, d-t, 0, c, d);\n};\n\nKey.easeOutBounce = function (t, key2)\n{\n    return Key.linear(Key.bounce(t), this, key2);\n};\n\nKey.easeInElastic = function (t, key2)\n{\n    let s = 1.70158;\n    let p = 0;\n    let a = 1;\n\n    const b = 0;\n    const d = 1;\n    const c = 1;\n\n    if (t === 0) t = b;\n    else if ((t /= d) == 1) t = b + c;\n    else\n    {\n        if (!p) p = d * 0.3;\n        if (a < Math.abs(c))\n        {\n            a = c;\n            s = p / 4;\n        }\n        else s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        t = -(a * 2 ** (10 * (t -= 1)) * Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b;\n    }\n\n    return Key.linear(t, this, key2);\n};\n\n\nKey.easeOutElastic = function (t, key2)\n{\n    let s = 1.70158;\n    let p = 0;\n    let a = 1;\n\n    const b = 0;\n    const d = 1;\n    const c = 1;\n\n    if (t === 0) t = b;\n    else if ((t /= d) == 1) t = b + c;\n    else\n    {\n        if (!p) p = d * 0.3;\n        if (a < Math.abs(c))\n        {\n            a = c;\n            s = p / 4;\n        }\n        else s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        t = a * 2 ** (-10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) + c + b;\n    }\n\n    return Key.linear(t, this, key2);\n};\n\nKey.easeInBack = function (t, key2)\n{\n    const s = 1.70158;\n    t = t * t * ((s + 1) * t - s);\n\n    return Key.linear(t, this, key2);\n};\n\nKey.easeOutBack = function (t, key2)\n{\n    const s = 1.70158;\n    t = (t = t / 1 - 1) * t * ((s + 1) * t + s) + 1;\n\n    return Key.linear(t, this, key2);\n};\n\nKey.easeInOutBack = function (t, key2)\n{\n    let s = 1.70158;\n    const c = 1 / 2;\n    if ((t /= 1 / 2) < 1) t = c * (t * t * (((s *= 1.525) + 1) * t - s));\n    else t = c * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n\n    return Key.linear(t, this, key2);\n};\n\nconst easeCubicOut = function (t)\n{\n    t--;\n    t = t * t * t + 1;\n    return t;\n};\n\nKey.easeCubicOut = function (t, key2)\n{\n    t = easeCubicOut(t);\n    return Key.linear(t, this, key2);\n};\n\nconst easeCubicInOut = function (t)\n{\n    t *= 2;\n    if (t < 1) t = 0.5 * t * t * t;\n    else\n    {\n        t -= 2;\n        t = 0.5 * (t * t * t + 2);\n    }\n    return t;\n};\n\nKey.easeCubicInOut = function (t, key2)\n{\n    t = easeCubicInOut(t);\n    return Key.linear(t, this, key2);\n};\n\nKey.easeSmoothStep = function (perc, key2)\n{\n    // var x = Math.max(0, Math.min(1, (perc-0)/(1-0)));\n    const x = Math.max(0, Math.min(1, perc));\n    perc = x * x * (3 - 2 * x); // smoothstep\n    return Key.linear(perc, this, key2);\n};\n\nKey.easeSmootherStep = function (perc, key2)\n{\n    const x = Math.max(0, Math.min(1, (perc - 0) / (1 - 0)));\n    perc = x * x * x * (x * (x * 6 - 15) + 10); // smootherstep\n    return Key.linear(perc, this, key2);\n};\n\nKey.prototype.setEasing = function (e)\n{\n    this._easing = e;\n\n    if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_LINEAR) this.ease = Key.easeLinear;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_ABSOLUTE) this.ease = Key.easeAbsolute;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_SMOOTHSTEP) this.ease = Key.easeSmoothStep;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_SMOOTHERSTEP) this.ease = Key.easeSmootherStep;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_CUBIC_IN) this.ease = Key.easeCubicIn;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_CUBIC_OUT) this.ease = Key.easeCubicOut;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_CUBIC_INOUT) this.ease = Key.easeCubicInOut;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_EXPO_IN) this.ease = Key.easeExpoIn;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_EXPO_OUT) this.ease = Key.easeExpoOut;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_EXPO_INOUT) this.ease = Key.easeExpoInOut;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_SIN_IN) this.ease = Key.easeSinIn;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_SIN_OUT) this.ease = Key.easeSinOut;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_SIN_INOUT) this.ease = Key.easeSinInOut;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_BACK_OUT) this.ease = Key.easeOutBack;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_BACK_IN) this.ease = Key.easeInBack;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_BACK_INOUT) this.ease = Key.easeInOutBack;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_ELASTIC_IN) this.ease = Key.easeInElastic;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_ELASTIC_OUT) this.ease = Key.easeOutElastic;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_ELASTIC_INOUT) this.ease = Key.easeElasticInOut;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_BOUNCE_IN) this.ease = Key.easeInBounce;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_BOUNCE_OUT) this.ease = Key.easeOutBounce;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_QUART_OUT) this.ease = Key.easeOutQuart;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_QUART_IN) this.ease = Key.easeInQuart;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_QUART_INOUT) this.ease = Key.easeInOutQuart;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_QUINT_OUT) this.ease = Key.easeOutQuint;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_QUINT_IN) this.ease = Key.easeInQuint;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_QUINT_INOUT) this.ease = Key.easeInOutQuint;\n    else if (this._easing == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_CUBICSPLINE)\n    {\n        // this._updateBezier = true;\n        this.ease = Key.easeCubicSpline;\n    }\n    else\n    {\n        this._easing = _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.ANIM.EASING_LINEAR;\n        this.ease = Key.easeLinear;\n    }\n};\n\nKey.prototype.trigger = function ()\n{\n    this.cb();\n    this.cbTriggered = true;\n};\n\nKey.prototype.setValue = function (v)\n{\n    this.value = v;\n    // this._updateBezier = true;\n    if (this.onChange !== null) this.onChange();\n};\n\nKey.prototype.set = function (obj)\n{\n    if (obj)\n    {\n        if (obj.e) this.setEasing(obj.e);\n        if (obj.cb)\n        {\n            this.cb = obj.cb;\n            this.cbTriggered = false;\n        }\n\n        if (obj.b)\n        {\n            // this.bezTime = obj.b[0];\n            // this.bezValue = obj.b[1];\n            // this.bezTimeIn = obj.b[2];\n            // this.bezValueIn = obj.b[3];\n            // this._updateBezier = true;\n        }\n\n        if (obj.hasOwnProperty(\"t\")) this.time = obj.t;\n        if (obj.hasOwnProperty(\"time\")) this.time = obj.time;\n        if (obj.hasOwnProperty(\"v\")) this.value = obj.v;\n        else if (obj.hasOwnProperty(\"value\")) this.value = obj.value;\n    }\n    if (this.onChange !== null) this.onChange();\n};\n\nKey.prototype.getSerialized = function ()\n{\n    const obj = {};\n    obj.t = this.time;\n    obj.v = this.value;\n    obj.e = this._easing;\n    // if (this._easing == CONSTANTS.ANIM.EASING_CUBICSPLINE) obj.b = [this.bezTime, this.bezValue, this.bezTimeIn, this.bezValueIn];\n\n    return obj;\n};\n\nKey.prototype.getEasing = function ()\n{\n    return this._easing;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/anim_key.js\n");

/***/ }),

/***/ "./src/core/banchprofiler.js":
/*!***********************************!*\
  !*** ./src/core/banchprofiler.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Branch\": () => (/* binding */ Branch),\n/* harmony export */   \"BranchStack\": () => (/* binding */ BranchStack)\n/* harmony export */ });\nclass Branch\n{\n    constructor(name)\n    {\n        this.name = name;\n        this.dur = 0;\n        this._startTime = 0;\n        this.childs = [];\n    }\n\n    start()\n    {\n        this._startTime = performance.now();\n    }\n\n    end()\n    {\n        this.dur = performance.now() - this._startTime;\n    }\n\n    push(name)\n    {\n        const b = new Branch(name);\n        this.childs.push(b);\n        b.start();\n        return b;\n    }\n\n    print(level)\n    {\n        level = level || 0;\n\n        let str = \"\";\n        for (let i = 0; i < level; i++) str += \"  \";\n\n        for (let i = 0; i < this.childs.length; i++)\n        {\n            this.childs[i].print(level + 1);\n        }\n    }\n}\n\n// //////////////////////////////////////////\n\nclass BranchStack\n{\n    constructor()\n    {\n    }\n\n    start()\n    {\n        this.root = new Branch(\"Root\");\n        this.root.start();\n\n        this.current = this.root;\n    }\n\n    push(name)\n    {\n        if (!this.current) this.start();\n\n        const prev = this.current;\n        this.current = this.current.push(name);\n        this.current.prev = prev;\n        this.current.start();\n        return this.current;\n    }\n\n    pop()\n    {\n        if (!this.current) return;\n        this.current.end();\n        this.current = this.current.prev;\n    }\n\n    finish()\n    {\n        this.current.end();\n        this.root.print();\n        this.current = null;\n    }\n}\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9iYW5jaHByb2ZpbGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2JhbmNocHJvZmlsZXIuanM/ODgzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBCcmFuY2hcbntcbiAgICBjb25zdHJ1Y3RvcihuYW1lKVxuICAgIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5kdXIgPSAwO1xuICAgICAgICB0aGlzLl9zdGFydFRpbWUgPSAwO1xuICAgICAgICB0aGlzLmNoaWxkcyA9IFtdO1xuICAgIH1cblxuICAgIHN0YXJ0KClcbiAgICB7XG4gICAgICAgIHRoaXMuX3N0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgIH1cblxuICAgIGVuZCgpXG4gICAge1xuICAgICAgICB0aGlzLmR1ciA9IHBlcmZvcm1hbmNlLm5vdygpIC0gdGhpcy5fc3RhcnRUaW1lO1xuICAgIH1cblxuICAgIHB1c2gobmFtZSlcbiAgICB7XG4gICAgICAgIGNvbnN0IGIgPSBuZXcgQnJhbmNoKG5hbWUpO1xuICAgICAgICB0aGlzLmNoaWxkcy5wdXNoKGIpO1xuICAgICAgICBiLnN0YXJ0KCk7XG4gICAgICAgIHJldHVybiBiO1xuICAgIH1cblxuICAgIHByaW50KGxldmVsKVxuICAgIHtcbiAgICAgICAgbGV2ZWwgPSBsZXZlbCB8fCAwO1xuXG4gICAgICAgIGxldCBzdHIgPSBcIlwiO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxldmVsOyBpKyspIHN0ciArPSBcIiAgXCI7XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNoaWxkcy5sZW5ndGg7IGkrKylcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5jaGlsZHNbaV0ucHJpbnQobGV2ZWwgKyAxKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbmNsYXNzIEJyYW5jaFN0YWNrXG57XG4gICAgY29uc3RydWN0b3IoKVxuICAgIHtcbiAgICB9XG5cbiAgICBzdGFydCgpXG4gICAge1xuICAgICAgICB0aGlzLnJvb3QgPSBuZXcgQnJhbmNoKFwiUm9vdFwiKTtcbiAgICAgICAgdGhpcy5yb290LnN0YXJ0KCk7XG5cbiAgICAgICAgdGhpcy5jdXJyZW50ID0gdGhpcy5yb290O1xuICAgIH1cblxuICAgIHB1c2gobmFtZSlcbiAgICB7XG4gICAgICAgIGlmICghdGhpcy5jdXJyZW50KSB0aGlzLnN0YXJ0KCk7XG5cbiAgICAgICAgY29uc3QgcHJldiA9IHRoaXMuY3VycmVudDtcbiAgICAgICAgdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50LnB1c2gobmFtZSk7XG4gICAgICAgIHRoaXMuY3VycmVudC5wcmV2ID0gcHJldjtcbiAgICAgICAgdGhpcy5jdXJyZW50LnN0YXJ0KCk7XG4gICAgICAgIHJldHVybiB0aGlzLmN1cnJlbnQ7XG4gICAgfVxuXG4gICAgcG9wKClcbiAgICB7XG4gICAgICAgIGlmICghdGhpcy5jdXJyZW50KSByZXR1cm47XG4gICAgICAgIHRoaXMuY3VycmVudC5lbmQoKTtcbiAgICAgICAgdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50LnByZXY7XG4gICAgfVxuXG4gICAgZmluaXNoKClcbiAgICB7XG4gICAgICAgIHRoaXMuY3VycmVudC5lbmQoKTtcbiAgICAgICAgdGhpcy5yb290LnByaW50KCk7XG4gICAgICAgIHRoaXMuY3VycmVudCA9IG51bGw7XG4gICAgfVxufVxuXG5leHBvcnQgeyBCcmFuY2hTdGFjayB9O1xuZXhwb3J0IHsgQnJhbmNoIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/banchprofiler.js\n");

/***/ }),

/***/ "./src/core/base64.js":
/*!****************************!*\
  !*** ./src/core/base64.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"b64decTypedArray\": () => (/* binding */ b64decTypedArray),\n/* harmony export */   \"b64encTypesArray\": () => (/* binding */ b64encTypesArray),\n/* harmony export */   \"base64Chars\": () => (/* binding */ base64Chars),\n/* harmony export */   \"base64lookup\": () => (/* binding */ base64lookup)\n/* harmony export */ });\nconst base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n// Use a lookup table to find the index.\nconst _base64lookup = new Uint8Array(256);\nfor (let i = 0; i < base64Chars.length; i++) _base64lookup[base64Chars.charCodeAt(i)] = i;\n\nconst base64lookup = _base64lookup;\n\nconst b64encTypesArray = function (arraybuffer)\n{\n    if (arraybuffer.buffer) arraybuffer = arraybuffer.buffer;\n    let bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = \"\";\n\n    for (i = 0; i < len; i += 3)\n    {\n        base64 += base64Chars[bytes[i] >> 2];\n        base64 += base64Chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += base64Chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += base64Chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) base64 = base64.substring(0, base64.length - 1) + \"=\";\n    else if (len % 3 === 1) base64 = base64.substring(0, base64.length - 2) + \"==\";\n\n    return base64;\n};\n\nconst b64decTypedArray = function (base64)\n{\n    let bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === \"=\")\n    {\n        bufferLength--;\n        if (base64[base64.length - 2] === \"=\") bufferLength--;\n    }\n\n    let arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4)\n    {\n        encoded1 = base64lookup[base64.charCodeAt(i)];\n        encoded2 = base64lookup[base64.charCodeAt(i + 1)];\n        encoded3 = base64lookup[base64.charCodeAt(i + 2)];\n        encoded4 = base64lookup[base64.charCodeAt(i + 3)];\n\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9iYXNlNjQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ0FCTEVTLy4vc3JjL2NvcmUvYmFzZTY0LmpzPzlkNTAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGJhc2U2NENoYXJzID0gXCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCI7XG5cbi8vIFVzZSBhIGxvb2t1cCB0YWJsZSB0byBmaW5kIHRoZSBpbmRleC5cbmNvbnN0IF9iYXNlNjRsb29rdXAgPSBuZXcgVWludDhBcnJheSgyNTYpO1xuZm9yIChsZXQgaSA9IDA7IGkgPCBiYXNlNjRDaGFycy5sZW5ndGg7IGkrKykgX2Jhc2U2NGxvb2t1cFtiYXNlNjRDaGFycy5jaGFyQ29kZUF0KGkpXSA9IGk7XG5cbmV4cG9ydCBjb25zdCBiYXNlNjRsb29rdXAgPSBfYmFzZTY0bG9va3VwO1xuXG5leHBvcnQgY29uc3QgYjY0ZW5jVHlwZXNBcnJheSA9IGZ1bmN0aW9uIChhcnJheWJ1ZmZlcilcbntcbiAgICBpZiAoYXJyYXlidWZmZXIuYnVmZmVyKSBhcnJheWJ1ZmZlciA9IGFycmF5YnVmZmVyLmJ1ZmZlcjtcbiAgICBsZXQgYnl0ZXMgPSBuZXcgVWludDhBcnJheShhcnJheWJ1ZmZlciksXG4gICAgICAgIGksXG4gICAgICAgIGxlbiA9IGJ5dGVzLmxlbmd0aCxcbiAgICAgICAgYmFzZTY0ID0gXCJcIjtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkgKz0gMylcbiAgICB7XG4gICAgICAgIGJhc2U2NCArPSBiYXNlNjRDaGFyc1tieXRlc1tpXSA+PiAyXTtcbiAgICAgICAgYmFzZTY0ICs9IGJhc2U2NENoYXJzWygoYnl0ZXNbaV0gJiAzKSA8PCA0KSB8IChieXRlc1tpICsgMV0gPj4gNCldO1xuICAgICAgICBiYXNlNjQgKz0gYmFzZTY0Q2hhcnNbKChieXRlc1tpICsgMV0gJiAxNSkgPDwgMikgfCAoYnl0ZXNbaSArIDJdID4+IDYpXTtcbiAgICAgICAgYmFzZTY0ICs9IGJhc2U2NENoYXJzW2J5dGVzW2kgKyAyXSAmIDYzXTtcbiAgICB9XG5cbiAgICBpZiAobGVuICUgMyA9PT0gMikgYmFzZTY0ID0gYmFzZTY0LnN1YnN0cmluZygwLCBiYXNlNjQubGVuZ3RoIC0gMSkgKyBcIj1cIjtcbiAgICBlbHNlIGlmIChsZW4gJSAzID09PSAxKSBiYXNlNjQgPSBiYXNlNjQuc3Vic3RyaW5nKDAsIGJhc2U2NC5sZW5ndGggLSAyKSArIFwiPT1cIjtcblxuICAgIHJldHVybiBiYXNlNjQ7XG59O1xuXG5leHBvcnQgY29uc3QgYjY0ZGVjVHlwZWRBcnJheSA9IGZ1bmN0aW9uIChiYXNlNjQpXG57XG4gICAgbGV0IGJ1ZmZlckxlbmd0aCA9IGJhc2U2NC5sZW5ndGggKiAwLjc1LFxuICAgICAgICBsZW4gPSBiYXNlNjQubGVuZ3RoLFxuICAgICAgICBpLFxuICAgICAgICBwID0gMCxcbiAgICAgICAgZW5jb2RlZDEsXG4gICAgICAgIGVuY29kZWQyLFxuICAgICAgICBlbmNvZGVkMyxcbiAgICAgICAgZW5jb2RlZDQ7XG5cbiAgICBpZiAoYmFzZTY0W2Jhc2U2NC5sZW5ndGggLSAxXSA9PT0gXCI9XCIpXG4gICAge1xuICAgICAgICBidWZmZXJMZW5ndGgtLTtcbiAgICAgICAgaWYgKGJhc2U2NFtiYXNlNjQubGVuZ3RoIC0gMl0gPT09IFwiPVwiKSBidWZmZXJMZW5ndGgtLTtcbiAgICB9XG5cbiAgICBsZXQgYXJyYXlidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoYnVmZmVyTGVuZ3RoKSxcbiAgICAgICAgYnl0ZXMgPSBuZXcgVWludDhBcnJheShhcnJheWJ1ZmZlcik7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpXG4gICAge1xuICAgICAgICBlbmNvZGVkMSA9IGJhc2U2NGxvb2t1cFtiYXNlNjQuY2hhckNvZGVBdChpKV07XG4gICAgICAgIGVuY29kZWQyID0gYmFzZTY0bG9va3VwW2Jhc2U2NC5jaGFyQ29kZUF0KGkgKyAxKV07XG4gICAgICAgIGVuY29kZWQzID0gYmFzZTY0bG9va3VwW2Jhc2U2NC5jaGFyQ29kZUF0KGkgKyAyKV07XG4gICAgICAgIGVuY29kZWQ0ID0gYmFzZTY0bG9va3VwW2Jhc2U2NC5jaGFyQ29kZUF0KGkgKyAzKV07XG5cbiAgICAgICAgYnl0ZXNbcCsrXSA9IChlbmNvZGVkMSA8PCAyKSB8IChlbmNvZGVkMiA+PiA0KTtcbiAgICAgICAgYnl0ZXNbcCsrXSA9ICgoZW5jb2RlZDIgJiAxNSkgPDwgNCkgfCAoZW5jb2RlZDMgPj4gMik7XG4gICAgICAgIGJ5dGVzW3ArK10gPSAoKGVuY29kZWQzICYgMykgPDwgNikgfCAoZW5jb2RlZDQgJiA2Myk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFycmF5YnVmZmVyO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/base64.js\n");

/***/ }),

/***/ "./src/core/cg/cg_boundingbox.js":
/*!***************************************!*\
  !*** ./src/core/cg/cg_boundingbox.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BoundingBox\": () => (/* binding */ BoundingBox)\n/* harmony export */ });\n\n\n/**\n * bounding box\n * @class\n * @external CGL\n * @namespace BoundingBox\n * @param {Geometry} geometry or bounding box\n */\nclass BoundingBox\n{\n    constructor(geom)\n    {\n        this._init();\n        this._first = true;\n        this._wireMesh = null;\n\n        if (geom) this.apply(geom);\n    }\n\n    _init()\n    {\n        this._max = [-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE];\n        this._min = [Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE];\n        this._center = [0, 0, 0];\n        this._size = [0, 0, 0];\n        this._maxAxis = 0.0;\n        this._first = true;\n    }\n\n    /**\n     * get biggest number of maxX,maxY,maxZ\n     * @type {Number}\n     */\n    get maxAxis() { return this._maxAxis || 1; }\n\n    /**\n     * size of bounding box\n     * @type {vec3}\n     */\n    get size() { return this._size; }\n\n    /**\n     * center of bounding box\n     * @type {vec3}\n     */\n    get center() { return this._center; }\n\n    /**\n     * center x\n     * @type {Number}\n     */\n    get x() { return this._center[0]; }\n\n    /**\n     * center y\n     * @type {Number}\n     */\n    get y() { return this._center[1]; }\n\n    /**\n     * center z\n     * @type {Number}\n     */\n    get z() { return this._center[2]; }\n\n\n    /**\n     * minimum x\n     * @type {Number}\n     */\n    get minX() { return this._min[0]; }\n\n    /**\n     * minimum y\n     * @type {Number}\n     */\n    get minY() { return this._min[1]; }\n\n    /**\n     * minimum z\n     * @type {Number}\n     */\n    get minZ() { return this._min[2]; }\n\n    /**\n     * maximum x\n     * @type {Number}\n     */\n    get maxX() { return this._max[0]; }\n\n    /**\n     * maximum y\n     * @type {Number}\n     */\n    get maxY() { return this._max[1]; }\n\n    /**\n     * maximum z\n     * @type {Number}\n     */\n    get maxZ() { return this._max[2]; }\n\n\n    apply(geom, mat)\n    {\n        if (!geom)\n        {\n            // console.warn(\"[boundingbox] no geom/vertices\", geom);\n            return;\n        }\n\n        if (geom instanceof BoundingBox)\n        {\n            const bb = geom;\n\n            this.applyPos(bb.maxX, bb.maxY, bb.maxZ);\n            this.applyPos(bb.minX, bb.minY, bb.minZ);\n        }\n        else\n        {\n            for (let i = 0; i < geom.vertices.length; i += 3)\n                // if (geom.vertices[i] == geom.vertices[i] || geom.vertices[i] != null)\n                // {\n            // if(mat)\n            // {\n                this.applyPos(geom.vertices[i], geom.vertices[i + 1], geom.vertices[i + 2]);\n            // }\n            // else\n            // {\n            //     this.applyPos(geom.vertices[i + 0],geom.vertices[i + 1],geom.vertices[i + 2]);\n            // }\n                // }\n        }\n        this.calcCenterSize();\n    }\n\n    /**\n     * returns a copy of the bounding box\n     * @function copy\n     * @memberof BoundingBox\n     * @instance\n     */\n    copy()\n    {\n        return new BoundingBox(this);\n    }\n\n    get changed()\n    {\n        return !(this._max[0] == -Number.MAX_VALUE && this._max[1] == -Number.MAX_VALUE && this._max[2] == -Number.MAX_VALUE);\n    }\n\n    applyPos(x, y, z)\n    {\n        if (x == Number.MAX_VALUE || x == -Number.MAX_VALUE ||\n            y == Number.MAX_VALUE || y == -Number.MAX_VALUE ||\n            z == Number.MAX_VALUE || z == -Number.MAX_VALUE) return;\n\n        if (!CABLES.UTILS.isNumeric(x) || !CABLES.UTILS.isNumeric(y) || !CABLES.UTILS.isNumeric(z)) return;\n\n        if (this._first)\n        {\n            this._max[0] = x;\n            this._max[1] = y;\n            this._max[2] = z;\n\n            this._min[0] = x;\n            this._min[1] = y;\n            this._min[2] = z;\n            this._first = false;\n            return;\n        }\n\n        this._max[0] = Math.max(this._max[0], x);\n        this._max[1] = Math.max(this._max[1], y);\n        this._max[2] = Math.max(this._max[2], z);\n\n        this._min[0] = Math.min(this._min[0], x);\n        this._min[1] = Math.min(this._min[1], y);\n        this._min[2] = Math.min(this._min[2], z);\n    }\n\n    calcCenterSize()\n    {\n        if (this._first) return;\n        // this._size[0]=Math.abs(this._min[0])+Math.abs(this._max[0]);\n        // this._size[1]=Math.abs(this._min[1])+Math.abs(this._max[1]);\n        // this._size[2]=Math.abs(this._min[2])+Math.abs(this._max[2]);\n        this._size[0] = this._max[0] - this._min[0];\n        this._size[1] = this._max[1] - this._min[1];\n        this._size[2] = this._max[2] - this._min[2];\n\n        this._center[0] = (this._min[0] + this._max[0]) / 2;\n        this._center[1] = (this._min[1] + this._max[1]) / 2;\n        this._center[2] = (this._min[2] + this._max[2]) / 2;\n\n        this._maxAxis = Math.max(this._size[2], Math.max(this._size[0], this._size[1]));\n    }\n\n    mulMat4(m)\n    {\n        if (this._first)\n        {\n            this._max[0] = 0;\n            this._max[1] = 0;\n            this._max[2] = 0;\n\n            this._min[0] = 0;\n            this._min[1] = 0;\n            this._min[2] = 0;\n            this._first = false;\n        }\n        vec3.transformMat4(this._max, this._max, m);\n        vec3.transformMat4(this._min, this._min, m);\n        this.calcCenterSize();\n    }\n\n    render(cgl, shader)\n    {\n        if (!this._wireMesh) this._wireMesh = new CGL.WireCube(cgl);\n\n        cgl.pushModelMatrix();\n        mat4.translate(cgl.mMatrix, cgl.mMatrix, this._center);\n        this._wireMesh.render(cgl, this._size[0] / 2, this._size[1] / 2, this._size[2] / 2);\n        cgl.popModelMatrix();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cg/cg_boundingbox.js\n");

/***/ }),

/***/ "./src/core/cg/cg_canvas.js":
/*!**********************************!*\
  !*** ./src/core/cg/cg_canvas.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CgCanvas\": () => (/* binding */ CgCanvas)\n/* harmony export */ });\nclass CgCanvas\n{\n    constructor(options)\n    {\n        if (!options)\n        {\n            console.error(\"CgCanvas no options\");\n        }\n        else\n        {\n            this._canvasEle = options.canvasEle;\n        }\n\n        if (!options.cg)console.error(\"CgCanvas options has no cg\");\n        if (!options.canvasEle)console.error(\"CgCanvas options has no canvasEle\");\n\n        this._cg = options.cg;\n        this.pixelDensity = 1;\n        this.canvasWidth = this.canvasEle.clientWidth;\n        this.canvasHeight = this.canvasEle.clientHeight;\n\n        this._oldWidthRp = -1;\n        this._oldHeightRp = -1;\n\n        this.setSize(this.canvasWidth, this.canvasHeight);\n    }\n\n    get canvasEle() { return this._canvasEle; }\n\n\n    setSize(w, h, ignorestyle)\n    {\n        if (this._oldWidthRp != w * this.pixelDensity || this._oldHeightRp != h * this.pixelDensity)\n        {\n            this._oldWidthRp = this.canvasEle.width = w * this.pixelDensity;\n            this._oldHeightRp = this.canvasEle.height = h * this.pixelDensity;\n\n            if (!ignorestyle)\n            {\n                this.canvasEle.style.width = w + \"px\";\n                this.canvasEle.style.height = h + \"px\";\n            }\n\n            this.updateSize();\n\n            this._cg.emitEvent(\"resize\");\n        }\n    }\n\n    updateSize()\n    {\n        this.canvasEle.width = this.canvasWidth = this.canvasEle.clientWidth * this.pixelDensity;\n        this.canvasEle.height = this.canvasHeight = this.canvasEle.clientHeight * this.pixelDensity;\n    }\n\n    dispose()\n    {\n        this._canvasEle.remove();\n        this._canvasEle = null;\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZy9jZ19jYW52YXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NnL2NnX2NhbnZhcy5qcz9jNjkyIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIENnQ2FudmFzXG57XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucylcbiAgICB7XG4gICAgICAgIGlmICghb3B0aW9ucylcbiAgICAgICAge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkNnQ2FudmFzIG5vIG9wdGlvbnNcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9jYW52YXNFbGUgPSBvcHRpb25zLmNhbnZhc0VsZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghb3B0aW9ucy5jZyljb25zb2xlLmVycm9yKFwiQ2dDYW52YXMgb3B0aW9ucyBoYXMgbm8gY2dcIik7XG4gICAgICAgIGlmICghb3B0aW9ucy5jYW52YXNFbGUpY29uc29sZS5lcnJvcihcIkNnQ2FudmFzIG9wdGlvbnMgaGFzIG5vIGNhbnZhc0VsZVwiKTtcblxuICAgICAgICB0aGlzLl9jZyA9IG9wdGlvbnMuY2c7XG4gICAgICAgIHRoaXMucGl4ZWxEZW5zaXR5ID0gMTtcbiAgICAgICAgdGhpcy5jYW52YXNXaWR0aCA9IHRoaXMuY2FudmFzRWxlLmNsaWVudFdpZHRoO1xuICAgICAgICB0aGlzLmNhbnZhc0hlaWdodCA9IHRoaXMuY2FudmFzRWxlLmNsaWVudEhlaWdodDtcblxuICAgICAgICB0aGlzLl9vbGRXaWR0aFJwID0gLTE7XG4gICAgICAgIHRoaXMuX29sZEhlaWdodFJwID0gLTE7XG5cbiAgICAgICAgdGhpcy5zZXRTaXplKHRoaXMuY2FudmFzV2lkdGgsIHRoaXMuY2FudmFzSGVpZ2h0KTtcbiAgICB9XG5cbiAgICBnZXQgY2FudmFzRWxlKCkgeyByZXR1cm4gdGhpcy5fY2FudmFzRWxlOyB9XG5cblxuICAgIHNldFNpemUodywgaCwgaWdub3Jlc3R5bGUpXG4gICAge1xuICAgICAgICBpZiAodGhpcy5fb2xkV2lkdGhScCAhPSB3ICogdGhpcy5waXhlbERlbnNpdHkgfHwgdGhpcy5fb2xkSGVpZ2h0UnAgIT0gaCAqIHRoaXMucGl4ZWxEZW5zaXR5KVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9vbGRXaWR0aFJwID0gdGhpcy5jYW52YXNFbGUud2lkdGggPSB3ICogdGhpcy5waXhlbERlbnNpdHk7XG4gICAgICAgICAgICB0aGlzLl9vbGRIZWlnaHRScCA9IHRoaXMuY2FudmFzRWxlLmhlaWdodCA9IGggKiB0aGlzLnBpeGVsRGVuc2l0eTtcblxuICAgICAgICAgICAgaWYgKCFpZ25vcmVzdHlsZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNhbnZhc0VsZS5zdHlsZS53aWR0aCA9IHcgKyBcInB4XCI7XG4gICAgICAgICAgICAgICAgdGhpcy5jYW52YXNFbGUuc3R5bGUuaGVpZ2h0ID0gaCArIFwicHhcIjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy51cGRhdGVTaXplKCk7XG5cbiAgICAgICAgICAgIHRoaXMuX2NnLmVtaXRFdmVudChcInJlc2l6ZVwiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHVwZGF0ZVNpemUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5jYW52YXNFbGUud2lkdGggPSB0aGlzLmNhbnZhc1dpZHRoID0gdGhpcy5jYW52YXNFbGUuY2xpZW50V2lkdGggKiB0aGlzLnBpeGVsRGVuc2l0eTtcbiAgICAgICAgdGhpcy5jYW52YXNFbGUuaGVpZ2h0ID0gdGhpcy5jYW52YXNIZWlnaHQgPSB0aGlzLmNhbnZhc0VsZS5jbGllbnRIZWlnaHQgKiB0aGlzLnBpeGVsRGVuc2l0eTtcbiAgICB9XG5cbiAgICBkaXNwb3NlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX2NhbnZhc0VsZS5yZW1vdmUoKTtcbiAgICAgICAgdGhpcy5fY2FudmFzRWxlID0gbnVsbDtcbiAgICB9XG59XG5cbmV4cG9ydCB7IENnQ2FudmFzIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/cg/cg_canvas.js\n");

/***/ }),

/***/ "./src/core/cg/cg_constants.js":
/*!*************************************!*\
  !*** ./src/core/cg/cg_constants.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CG\": () => (/* binding */ CG)\n/* harmony export */ });\n/* harmony import */ var _cg_boundingbox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cg_boundingbox */ \"./src/core/cg/cg_boundingbox.js\");\n/* harmony import */ var _cg_canvas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cg_canvas */ \"./src/core/cg/cg_canvas.js\");\n/* harmony import */ var _cg_geom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cg_geom */ \"./src/core/cg/cg_geom.js\");\n/* harmony import */ var _sg_fpscounter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sg_fpscounter */ \"./src/core/cg/sg_fpscounter.js\");\n\n\n\n\n\nconst CG = {\n\n    \"GAPI_WEBGL\": 0,\n    \"GAPI_WEBGPU\": 1,\n\n    \"DEPTH_COMPARE_NEVER\": 0,\n    \"DEPTH_COMPARE_LESS\": 1,\n    \"DEPTH_COMPARE_EQUAL\": 2,\n    \"DEPTH_COMPARE_LESSEQUAL\": 3,\n    \"DEPTH_COMPARE_GREATER\": 4,\n    \"DEPTH_COMPARE_NOTEQUAL\": 5,\n    \"DEPTH_COMPARE_GREATEREQUAL\": 6,\n    \"DEPTH_COMPARE_ALWAYS\": 7,\n\n    \"CULL_NONE\": 0,\n    \"CULL_BACK\": 1,\n    \"CULL_FRONT\": 2,\n    \"CULL_BOTH\": 3,\n\n\n    \"Geometry\": _cg_geom__WEBPACK_IMPORTED_MODULE_2__.Geometry,\n    \"BoundingBox\": _cg_boundingbox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox,\n    \"FpsCounter\": _sg_fpscounter__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n\n    \"CgCanvas\": _cg_canvas__WEBPACK_IMPORTED_MODULE_1__.CgCanvas\n};\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZy9jZ19jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NnL2NnX2NvbnN0YW50cy5qcz8xOTJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvdW5kaW5nQm94IH0gZnJvbSBcIi4vY2dfYm91bmRpbmdib3hcIjtcbmltcG9ydCB7IENnQ2FudmFzIH0gZnJvbSBcIi4vY2dfY2FudmFzXCI7XG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuL2NnX2dlb21cIjtcbmltcG9ydCBGcHNDb3VudGVyIGZyb20gXCIuL3NnX2Zwc2NvdW50ZXJcIjtcblxuY29uc3QgQ0cgPSB7XG5cbiAgICBcIkdBUElfV0VCR0xcIjogMCxcbiAgICBcIkdBUElfV0VCR1BVXCI6IDEsXG5cbiAgICBcIkRFUFRIX0NPTVBBUkVfTkVWRVJcIjogMCxcbiAgICBcIkRFUFRIX0NPTVBBUkVfTEVTU1wiOiAxLFxuICAgIFwiREVQVEhfQ09NUEFSRV9FUVVBTFwiOiAyLFxuICAgIFwiREVQVEhfQ09NUEFSRV9MRVNTRVFVQUxcIjogMyxcbiAgICBcIkRFUFRIX0NPTVBBUkVfR1JFQVRFUlwiOiA0LFxuICAgIFwiREVQVEhfQ09NUEFSRV9OT1RFUVVBTFwiOiA1LFxuICAgIFwiREVQVEhfQ09NUEFSRV9HUkVBVEVSRVFVQUxcIjogNixcbiAgICBcIkRFUFRIX0NPTVBBUkVfQUxXQVlTXCI6IDcsXG5cbiAgICBcIkNVTExfTk9ORVwiOiAwLFxuICAgIFwiQ1VMTF9CQUNLXCI6IDEsXG4gICAgXCJDVUxMX0ZST05UXCI6IDIsXG4gICAgXCJDVUxMX0JPVEhcIjogMyxcblxuXG4gICAgXCJHZW9tZXRyeVwiOiBHZW9tZXRyeSxcbiAgICBcIkJvdW5kaW5nQm94XCI6IEJvdW5kaW5nQm94LFxuICAgIFwiRnBzQ291bnRlclwiOiBGcHNDb3VudGVyLFxuXG4gICAgXCJDZ0NhbnZhc1wiOiBDZ0NhbnZhc1xufTtcblxuXG5leHBvcnQgeyBDRyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/cg/cg_constants.js\n");

/***/ }),

/***/ "./src/core/cg/cg_geom.js":
/*!********************************!*\
  !*** ./src/core/cg/cg_geom.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Geometry\": () => (/* binding */ Geometry)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"./src/core/utils.js\");\n/* harmony import */ var _base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base64 */ \"./src/core/base64.js\");\n/* harmony import */ var _cg_boundingbox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cg_boundingbox */ \"./src/core/cg/cg_boundingbox.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core_logger */ \"./src/core/core_logger.js\");\n// import { vec2, vec3 } from \"gl-matrix\";\n\n\n\n\n\n/**\n * a geometry contains all information about a mesh, vertices, texturecoordinates etc. etc.\n * @external CGL\n * @namespace Geometry\n * @param {String} name\n * @class\n * @example\n * // create a triangle with all attributes\n * const geom=new Geometry(\"triangle\"),\n *\n * geom.vertices = [\n *      0.0,           sizeH.get(),  0.0,\n *     -sizeW.get(),  -sizeH.get(),  0.0,\n *      sizeW.get(),  -sizeH.get(),  0.0 ];\n *\n * geom.vertexNormals = [\n *      0.0,  0.0,  1.0,\n *      0.0,  0.0,  1.0,\n *      0.0,  0.0,  1.0 ];\n *\n * geom.tangents = [\n *     1,0,0,\n *     1,0,0,\n *     1,0,0 ];\n *\n * geom.biTangents = [\n *     0,1,0,\n *     0,1,0,\n *     0,1,0 ];\n *\n * geom.texCoords = [\n *      0.5,  0.0,\n *      1.0,  1.0,\n *      0.0,  1.0, ];\n *\n * geom.verticesIndices = [\n *     0, 1, 2 ];\n *\n */\nconst Geometry = function (name)\n{\n    this.name = name || \"unknown\";\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"cgl_geometry\");\n\n    this.faceVertCount = 3;\n    this.glPrimitive = null;\n    this._attributes = {};\n\n    this._vertices = [];\n    this.verticesIndices = [];\n\n    this.isGeometry = true;\n\n    this.morphTargets = [];\n\n    Object.defineProperty(this, \"vertices\", {\n        get()\n        {\n            return this._vertices;\n        },\n        set(v)\n        {\n            this.setVertices(v);\n        },\n    });\n\n    Object.defineProperty(this, \"texCoords\", {\n        get()\n        {\n            const att = this.getAttribute(\"texCoords\");\n            if (!att) return [];\n            return att.data;\n        },\n        set(v)\n        {\n            this.setAttribute(\"texCoords\", v, 2);\n        },\n    });\n\n    Object.defineProperty(this, \"vertexNormals\", {\n        get()\n        {\n            const att = this.getAttribute(\"vertexNormals\");\n            if (!att) return [];\n            return att.data;\n        },\n        set(v)\n        {\n            this.setAttribute(\"vertexNormals\", v, 3);\n        },\n    });\n\n    Object.defineProperty(this, \"tangents\", {\n        get()\n        {\n            const att = this.getAttribute(\"tangents\");\n            if (!att) return [];\n            return att.data;\n        },\n        set(v)\n        {\n            this.setAttribute(\"tangents\", v, 3);\n        },\n    });\n\n    Object.defineProperty(this, \"biTangents\", {\n        get()\n        {\n            const att = this.getAttribute(\"biTangents\");\n            if (!att) return [];\n            return att.data;\n        },\n        set(v)\n        {\n            this.setAttribute(\"biTangents\", v, 3);\n        },\n    });\n\n    Object.defineProperty(this, \"vertexColors\", {\n        get()\n        {\n            const att = this.getAttribute(\"vertexColors\");\n            if (!att) return [];\n            return att.data;\n        },\n        set(v)\n        {\n            this.setAttribute(\"vertexColors\", v, 4);\n        },\n    });\n};\n\n/**\n * @function clear\n * @memberof Geometry\n * @instance\n * @description clear all buffers/set them to length 0\n */\nGeometry.prototype.clear = function ()\n{\n    this._vertices = new Float32Array([]);\n    this.verticesIndices = [];\n    this.texCoords = new Float32Array([]);\n    this.vertexNormals = new Float32Array([]);\n    this.tangents = [];\n    this.biTangents = [];\n    this._attributes = {};\n};\n\n\n\n/**\n * @function getAttributes\n   @memberof Geometry\n * @instance\n * @return {Array<Object>} returns array of attribute objects\n */\nGeometry.prototype.getAttributes = function ()\n{\n    return this._attributes;\n};\n\n/**\n * @function getAttribute\n * @memberof Geometry\n * @instance\n * @param {String} name\n * @return {Object}\n */\nGeometry.prototype.getAttribute = function (name)\n{\n    for (const i in this._attributes)\n    {\n        if (this._attributes[i].name == name) return this._attributes[i];\n    }\n    return null;\n};\n\n/**\n * @function setAttribute\n * @description create an attribute\n * @memberof Geometry\n * @instance\n * @param {String} name\n * @param {Array} data\n * @param {Number} itemsize\n */\nGeometry.prototype.setAttribute = function (name, arr, itemSize)\n{\n    let attrType = \"\";\n    if (!itemSize || itemSize > 4)\n    {\n        console.log(\"itemsize wrong?\", itemSize, name);\n        this._log.stack(\"itemsize\");\n\n        itemSize = 3;\n    }\n\n    if (itemSize == 1) attrType = \"float\";\n    else if (itemSize == 2) attrType = \"vec2\";\n    else if (itemSize == 3) attrType = \"vec3\";\n    else if (itemSize == 4) attrType = \"vec4\";\n\n\n    const attr = {\n        \"name\": name,\n        \"data\": arr,\n        \"itemSize\": itemSize,\n        \"type\": attrType,\n    };\n\n    this._attributes[name] = attr;\n};\n\nGeometry.prototype.copyAttribute = function (name, newgeom)\n{\n    const attr = this.getAttribute(name);\n    newgeom.setAttribute(name, new Float32Array(attr.data), attr.itemSize);\n};\n\n\n/**\n * @function setVertices\n * @memberof Geometry\n * @instance\n * @description set vertices\n * @param {Array|Float32Array} data [x,y,z,x,y,z,...]\n */\nGeometry.prototype.setVertices = function (arr)\n{\n    if (arr instanceof Float32Array) this._vertices = arr;\n    else this._vertices = new Float32Array(arr);\n};\n\n/**\n * @function setTexCoords\n * @memberof Geometry\n * @instance\n * @description set texcoords\n * @param {Array|Float32Array} data [u,v,u,v,...]\n */\nGeometry.prototype.setTexCoords = function (arr)\n{\n    if (arr instanceof Float32Array) this.texCoords = arr;\n    else this.texCoords = new Float32Array(arr);\n};\n\n// Geometry.prototype.testIndices = function ()\n// {\n//     var foundError = false;\n//     for (var i = 0; i < this.verticesIndices.length; i++)\n//     {\n//         if (this.verticesIndices[i * 3 + 0] >= this._vertices.length / 3 || this.verticesIndices[i * 3 + 1] >= this._vertices.length / 3 || this.verticesIndices[i * 3 + 2] >= this._vertices.length / 3)\n//         {\n//             foundError = true;\n//             console.log(\"index error!\");\n//         }\n//     }\n// };\n\n// deprecated\nGeometry.prototype.calcNormals = function (smooth)\n{\n    const options = { \"smooth\": smooth };\n\n\n    this.calculateNormals(options);\n};\n\n/**\n * @function flipNormals\n * @memberof Geometry\n * @description flip normals\n */\nGeometry.prototype.flipNormals = function (x, y, z)\n{\n    let vec = vec3.create();\n\n    if (x == undefined)x = 1;\n    if (y == undefined)y = 1;\n    if (z == undefined)z = 1;\n\n\n    for (let i = 0; i < this.vertexNormals.length; i += 3)\n    {\n        vec3.set(vec,\n            this.vertexNormals[i + 0],\n            this.vertexNormals[i + 1],\n            this.vertexNormals[i + 2]);\n\n        vec[0] *= -x;\n        vec[1] *= -y;\n        vec[2] *= -z;\n\n        vec3.normalize(vec, vec);\n\n        this.vertexNormals[i + 0] = vec[0];\n        this.vertexNormals[i + 1] = vec[1];\n        this.vertexNormals[i + 2] = vec[2];\n    }\n};\n\nGeometry.prototype.getNumTriangles = function ()\n{\n    if (this.verticesIndices && this.verticesIndices.length) return this.verticesIndices.length / 3;\n    return this.vertices.length / 3;\n};\n\n\n/**\n * @function flipVertDir\n * @memberof Geometry\n * @description flip order of vertices in geom faces\n */\nGeometry.prototype.flipVertDir = function ()\n{\n    const newInd = [];\n    newInd.length = this.verticesIndices.length;\n    for (let i = 0; i < this.verticesIndices.length; i += 3)\n    {\n        newInd[i] = this.verticesIndices[i + 2];\n        newInd[i + 1] = this.verticesIndices[i + 1];\n        newInd[i + 2] = this.verticesIndices[i];\n    }\n    this.verticesIndices = newInd;\n};\n\n\nGeometry.prototype.setPointVertices = function (verts)\n{\n    if (verts.length % 3 !== 0)\n    {\n        this._log.error(\"SetPointVertices: Array must be multiple of three.\");\n        return;\n    }\n\n    if (!(verts instanceof Float32Array)) this.vertices = new Float32Array(verts);\n    else this.vertices = verts;\n\n    if (!(this.texCoords instanceof Float32Array)) this.texCoords = new Float32Array((verts.length / 3) * 2);\n\n    // this.texCoords.length=verts.length/3*2;\n    this.verticesIndices.length = verts.length / 3;\n    // this.verticesIndices=[];\n\n    for (let i = 0; i < verts.length / 3; i++)\n    {\n        this.verticesIndices[i] = i;\n        this.texCoords[i * 2] = 0;\n        this.texCoords[i * 2 + 1] = 0;\n    }\n};\n\n/**\n * merge a different geometry into the this geometry\n * @function merge\n * @param {Geometry} geom\n * @memberof Geometry\n * @instance\n */\nGeometry.prototype.merge = function (geom)\n{\n    if (!geom) return;\n\n    if (this.isIndexed() != geom.isIndexed())\n    {\n        if (this.isIndexed())\n        {\n            this.unIndex(false, true);\n        }\n        if (geom.isIndexed())\n        {\n            const g = geom.copy();\n            g.unIndex(false, true);\n            geom = g;\n        }\n    }\n\n    const oldIndizesLength = this.verticesIndices.length;\n    const vertLength = this._vertices.length / 3;\n\n    this.verticesIndices.length = this.verticesIndices.length + geom.verticesIndices.length;\n    for (let i = 0; i < geom.verticesIndices.length; i++)\n        this.verticesIndices[oldIndizesLength + i] = geom.verticesIndices[i] + vertLength;\n\n    this.vertices = _utils__WEBPACK_IMPORTED_MODULE_0__.UTILS.float32Concat(this._vertices, geom.vertices);\n    this.texCoords = _utils__WEBPACK_IMPORTED_MODULE_0__.UTILS.float32Concat(this.texCoords, geom.texCoords);\n    this.vertexNormals = _utils__WEBPACK_IMPORTED_MODULE_0__.UTILS.float32Concat(this.vertexNormals, geom.vertexNormals);\n    this.tangents = _utils__WEBPACK_IMPORTED_MODULE_0__.UTILS.float32Concat(this.tangents, geom.tangents);\n    this.biTangents = _utils__WEBPACK_IMPORTED_MODULE_0__.UTILS.float32Concat(this.biTangents, geom.biTangents);\n};\n\n/**\n * create a copy of the geometry\n * @function copy\n * @memberof Geometry\n * @instance\n */\nGeometry.prototype.copy = function ()\n{\n    const geom = new Geometry(this.name + \" copy\");\n    geom.faceVertCount = this.faceVertCount;\n    geom.glPrimitive = this.glPrimitive;\n\n    geom.setVertices(this._vertices.slice(0));\n\n    if (this.verticesIndices)\n    {\n        geom.verticesIndices.length = this.verticesIndices.length;\n        for (let i = 0; i < this.verticesIndices.length; i++) geom.verticesIndices[i] = this.verticesIndices[i];\n    }\n\n    for (let i in this._attributes) this.copyAttribute(i, geom);\n\n    geom.morphTargets.length = this.morphTargets.length;\n    for (let i = 0; i < this.morphTargets.length; i++) geom.morphTargets[i] = this.morphTargets[i];\n\n    return geom;\n};\n\n/**\n * Calculaten normals\n * @function calculateNormals\n * @memberof Geometry\n * @instance\n */\nGeometry.prototype.calculateNormals = function (options)\n{\n    // todo: should check angle of normals to get edges    https://community.khronos.org/t/calculating-accurate-vertex-normals/28152\n    options = options || {};\n    if (options.smooth === false) this.unIndex();\n\n    const u = vec3.create();\n    const v = vec3.create();\n    const n = vec3.create();\n\n    function calcNormal(triangle)\n    {\n        vec3.subtract(u, triangle[0], triangle[1]);\n        vec3.subtract(v, triangle[0], triangle[2]);\n        vec3.cross(n, u, v);\n        vec3.normalize(n, n);\n\n        if (options && options.forceZUp)\n        {\n            if (n[2] < 0)\n            {\n                n[0] *= -1;\n                n[1] *= -1;\n                n[2] *= -1;\n            }\n        }\n        return n;\n    }\n\n    this.getVertexVec = function (which)\n    {\n        const vec = [0, 0, 0];\n        vec[0] = this.vertices[which * 3 + 0];\n        vec[1] = this.vertices[which * 3 + 1];\n        vec[2] = this.vertices[which * 3 + 2];\n        return vec;\n    };\n\n    if (!(this.vertexNormals instanceof Float32Array) || this.vertexNormals.length != this.vertices.length) this.vertexNormals = new Float32Array(this.vertices.length);\n\n    for (let i = 0; i < this.vertices.length; i++)\n    {\n        this.vertexNormals[i] = 0;\n    }\n\n    if (!this.isIndexed())\n    {\n        const norms = [];\n        for (let i = 0; i < this.vertices.length; i += 9)\n        {\n            const triangle = [[this.vertices[i + 0], this.vertices[i + 1], this.vertices[i + 2]], [this.vertices[i + 3], this.vertices[i + 4], this.vertices[i + 5]], [this.vertices[i + 6], this.vertices[i + 7], this.vertices[i + 8]]];\n            const nn = calcNormal(triangle);\n            norms.push(nn[0], nn[1], nn[2], nn[0], nn[1], nn[2], nn[0], nn[1], nn[2]);\n        }\n        this.vertexNormals = norms;\n    }\n    else\n    {\n        const faceNormals = [];\n\n        faceNormals.length = Math.floor(this.verticesIndices.length / 3);\n\n        for (let i = 0; i < this.verticesIndices.length; i += 3)\n        {\n            const triangle = [this.getVertexVec(this.verticesIndices[i + 0]), this.getVertexVec(this.verticesIndices[i + 1]), this.getVertexVec(this.verticesIndices[i + 2])];\n\n            faceNormals[i / 3] = calcNormal(triangle);\n\n            this.vertexNormals[this.verticesIndices[i + 0] * 3 + 0] += faceNormals[i / 3][0];\n            this.vertexNormals[this.verticesIndices[i + 0] * 3 + 1] += faceNormals[i / 3][1];\n            this.vertexNormals[this.verticesIndices[i + 0] * 3 + 2] += faceNormals[i / 3][2];\n\n            this.vertexNormals[this.verticesIndices[i + 1] * 3 + 0] += faceNormals[i / 3][0];\n            this.vertexNormals[this.verticesIndices[i + 1] * 3 + 1] += faceNormals[i / 3][1];\n            this.vertexNormals[this.verticesIndices[i + 1] * 3 + 2] += faceNormals[i / 3][2];\n\n            this.vertexNormals[this.verticesIndices[i + 2] * 3 + 0] += faceNormals[i / 3][0];\n            this.vertexNormals[this.verticesIndices[i + 2] * 3 + 1] += faceNormals[i / 3][1];\n            this.vertexNormals[this.verticesIndices[i + 2] * 3 + 2] += faceNormals[i / 3][2];\n        }\n\n\n        for (let i = 0; i < this.verticesIndices.length; i += 3) // faces\n        {\n            for (let k = 0; k < 3; k++) // triangles\n            {\n                const vv = [this.vertexNormals[this.verticesIndices[i + k] * 3 + 0], this.vertexNormals[this.verticesIndices[i + k] * 3 + 1], this.vertexNormals[this.verticesIndices[i + k] * 3 + 2]];\n                vec3.normalize(vv, vv);\n                this.vertexNormals[this.verticesIndices[i + k] * 3 + 0] = vv[0];\n                this.vertexNormals[this.verticesIndices[i + k] * 3 + 1] = vv[1];\n                this.vertexNormals[this.verticesIndices[i + k] * 3 + 2] = vv[2];\n            }\n        }\n    }\n};\n\n/**\n * Calculates tangents & bitangents with the help of uv-coordinates. Adapted from\n * Lengyel, Eric. “Computing Tangent Space Basis Vectors for an Arbitrary Mesh”.\n * Terathon Software 3D Graphics Library.\n * https://fenix.tecnico.ulisboa.pt/downloadFile/845043405449073/Tangent%20Space%20Calculation.pdf\n *\n * @function calcTangentsBitangents\n * @memberof Geometry\n * @instance\n */\nGeometry.prototype.calcTangentsBitangents = function ()\n{\n    if (!this.vertices.length)\n    {\n        // this._log.error(\"Cannot calculate tangents/bitangents without vertices.\");\n        return;\n    }\n    if (!this.vertexNormals.length)\n    {\n        // this._log.error(\"Cannot calculate tangents/bitangents without normals.\");\n        return;\n    }\n    if (!this.texCoords.length)\n    {\n        // console.warn(\"No texcoords. Replacing with default values [0, 0].\");\n        const texCoordLength = (this.vertices.length / 3) * 2;\n        this.texCoords = new Float32Array(texCoordLength);\n        for (let i = 0; i < texCoordLength; i += 1) this.texCoords[i] = 0;\n    }\n    if (!this.verticesIndices || !this.verticesIndices.length)\n    {\n        // this._log.error(\"Cannot calculate tangents/bitangents without vertex indices.\");\n        return;\n    }\n    // this code assumes that we have three indices per triangle\n    if (this.verticesIndices.length % 3 !== 0)\n    {\n        this._log.error(\"Vertex indices mismatch!\");\n        return;\n    }\n\n    const triangleCount = this.verticesIndices.length / 3;\n    const vertexCount = this.vertices.length / 3;\n\n    this.tangents = new Float32Array(this.vertexNormals.length);\n    this.biTangents = new Float32Array(this.vertexNormals.length);\n\n    // temporary buffers\n    const tempVertices = [];\n    tempVertices.length = vertexCount * 2;\n    const v1 = vec3.create();\n    const v2 = vec3.create();\n    const v3 = vec3.create();\n\n    const w1 = vec2.create();\n    const w2 = vec2.create();\n    const w3 = vec2.create();\n\n    const sdir = vec3.create();\n    const tdir = vec3.create();\n\n    // for details on calculation, see article referenced above\n    for (let tri = 0; tri < triangleCount; tri += 1)\n    {\n        // indices of the three vertices for a triangle\n        const i1 = this.verticesIndices[tri * 3];\n        const i2 = this.verticesIndices[tri * 3 + 1];\n        const i3 = this.verticesIndices[tri * 3 + 2];\n\n        // vertex position as vec3\n        vec3.set(v1, this.vertices[i1 * 3], this.vertices[i1 * 3 + 1], this.vertices[i1 * 3 + 2]);\n        vec3.set(v2, this.vertices[i2 * 3], this.vertices[i2 * 3 + 1], this.vertices[i2 * 3 + 2]);\n        vec3.set(v3, this.vertices[i3 * 3], this.vertices[i3 * 3 + 1], this.vertices[i3 * 3 + 2]);\n\n        // texture coordinate as vec2\n        vec2.set(w1, this.texCoords[i1 * 2], this.texCoords[i1 * 2 + 1]);\n        vec2.set(w2, this.texCoords[i2 * 2], this.texCoords[i2 * 2 + 1]);\n        vec2.set(w3, this.texCoords[i3 * 2], this.texCoords[i3 * 2 + 1]);\n\n        const x1 = v2[0] - v1[0];\n        const x2 = v3[0] - v1[0];\n        const y1 = v2[1] - v1[1];\n        const y2 = v3[1] - v1[1];\n        const z1 = v2[2] - v1[2];\n        const z2 = v3[2] - v1[2];\n\n        const s1 = w2[0] - w1[0];\n        const s2 = w3[0] - w1[0];\n        const t1 = w2[1] - w1[1];\n        const t2 = w3[1] - w1[1];\n\n        const r = 1.0 / (s1 * t2 - s2 * t1);\n\n        vec3.set(sdir, (t2 * x1 - t1 * x2) * r, (t2 * y1 - t1 * y2) * r, (t2 * z1 - t1 * z2) * r);\n        vec3.set(tdir, (s1 * x2 - s2 * x1) * r, (s1 * y2 - s2 * y1) * r, (s1 * z2 - s2 * z1) * r);\n\n        tempVertices[i1] = sdir;\n        tempVertices[i2] = sdir;\n        tempVertices[i3] = sdir;\n\n        tempVertices[i1 + vertexCount] = tdir;\n        tempVertices[i2 + vertexCount] = tdir;\n        tempVertices[i3 + vertexCount] = tdir;\n    }\n\n    const normal = vec3.create();\n    const tempVert = vec3.create();\n    const tan = vec3.create();\n    const bitan = vec3.create();\n    const temp1 = vec3.create();\n    const temp2 = vec3.create();\n    const crossPd = vec3.create();\n    const normalized = vec3.create();\n\n    for (let vert = 0; vert < vertexCount; vert += 1)\n    {\n        // NOTE: some meshes don't have index 0 - n in their indexbuffer, if this is the case, skip calculation of this vertex\n        if (!tempVertices[vert]) continue;\n\n        vec3.set(normal, this.vertexNormals[vert * 3], this.vertexNormals[vert * 3 + 1], this.vertexNormals[vert * 3 + 2]);\n        vec3.set(tempVert, tempVertices[vert][0], tempVertices[vert][1], tempVertices[vert][2]);\n\n        // Gram-Schmidt orthagonalize\n        const _dp = vec3.dot(normal, tempVert);\n        vec3.scale(temp1, normal, _dp);\n        vec3.subtract(temp2, tempVert, temp1);\n\n        vec3.normalize(normalized, temp2);\n        vec3.cross(crossPd, normal, tempVert);\n\n        const intermDot = vec3.dot(crossPd, tempVertices[vert + vertexCount]);\n        const w = 1.0;// intermDot < 0.0 ? -1.0 : 1.0;\n\n        vec3.scale(tan, normalized, 1 / w);\n        vec3.cross(bitan, normal, tan);\n\n        this.tangents[vert * 3 + 0] = tan[0];\n        this.tangents[vert * 3 + 1] = tan[1];\n        this.tangents[vert * 3 + 2] = tan[2];\n        this.biTangents[vert * 3 + 0] = bitan[0];\n        this.biTangents[vert * 3 + 1] = bitan[1];\n        this.biTangents[vert * 3 + 2] = bitan[2];\n    }\n};\n\nGeometry.prototype.isIndexed = function ()\n{\n    if (this._vertices.length == 0) return true;\n    return this.verticesIndices.length != 0;\n};\n\n/**\n * @function unIndex\n * @memberof Geometry\n * @instance\n * @param {Boolean}\n * @description remove all vertex indizes, vertices array will contain 3*XYZ for every triangle\n */\nGeometry.prototype.unIndex = function (reIndex, dontCalcNormals)\n{\n    const newVerts = [];\n    const newIndizes = [];\n    let count = 0;\n\n    for (let j in this._attributes)\n    {\n        const attr = this._attributes[j];\n        let na = [];\n\n        for (let i = 0; i < this.verticesIndices.length; i += 3)\n        {\n            for (let s = 0; s < 3; s++)\n            {\n                if (attr.itemSize == 3)\n                    na.push(\n                        attr.data[this.verticesIndices[i + s] * 3 + 0],\n                        attr.data[this.verticesIndices[i + s] * 3 + 1],\n                        attr.data[this.verticesIndices[i + s] * 3 + 2]);\n                else if (attr.itemSize == 4)\n                    na.push(\n                        attr.data[this.verticesIndices[i + s] * 4 + 0],\n                        attr.data[this.verticesIndices[i + s] * 4 + 1],\n                        attr.data[this.verticesIndices[i + s] * 4 + 2],\n                        attr.data[this.verticesIndices[i + s] * 4 + 3]);\n                else if (attr.itemSize == 2)\n                    na.push(\n                        attr.data[this.verticesIndices[i + s] * 2 + 0],\n                        attr.data[this.verticesIndices[i + s] * 2 + 1]);\n                else if (attr.itemSize == 1)\n                    na.push(\n                        attr.data[this.verticesIndices[i + s]]);\n                else console.log(\"unknown attr\", attr);\n            }\n        }\n        this.setAttribute(attr.name, na, attr.itemSize);\n    }\n\n    for (let i = 0; i < this.verticesIndices.length; i += 3)\n    {\n        newVerts.push(\n            this.vertices[this.verticesIndices[i + 0] * 3 + 0],\n            this.vertices[this.verticesIndices[i + 0] * 3 + 1],\n            this.vertices[this.verticesIndices[i + 0] * 3 + 2]);\n\n        newIndizes.push(count);\n        count++;\n\n        newVerts.push(\n            this.vertices[this.verticesIndices[i + 1] * 3 + 0],\n            this.vertices[this.verticesIndices[i + 1] * 3 + 1],\n            this.vertices[this.verticesIndices[i + 1] * 3 + 2]);\n\n        newIndizes.push(count);\n        count++;\n\n        newVerts.push(\n            this.vertices[this.verticesIndices[i + 2] * 3 + 0],\n            this.vertices[this.verticesIndices[i + 2] * 3 + 1],\n            this.vertices[this.verticesIndices[i + 2] * 3 + 2]);\n\n        newIndizes.push(count);\n        count++;\n    }\n\n    this.vertices = newVerts;\n\n    this.verticesIndices = [];\n    if (reIndex) this.verticesIndices = newIndizes;\n\n    if (!dontCalcNormals) this.calculateNormals();\n};\n\nGeometry.prototype.calcBarycentric = function ()\n{\n    let barycentrics = [];\n    barycentrics.length = this.vertices.length;\n    for (let i = 0; i < this.vertices.length; i++) barycentrics[i] = 0;\n\n    let count = 0;\n    for (let i = 0; i < this.vertices.length; i += 3)\n    {\n        barycentrics[i + count] = 1;\n        count++;\n        if (count == 3) count = 0;\n    }\n\n    this.setAttribute(\"attrBarycentric\", barycentrics, 3);\n};\n\nGeometry.prototype.getBounds = function ()\n{\n    return new _cg_boundingbox__WEBPACK_IMPORTED_MODULE_2__.BoundingBox(this);\n};\n\nGeometry.prototype.center = function (x, y, z)\n{\n    if (x === undefined)\n    {\n        x = true;\n        y = true;\n        z = true;\n    }\n\n    let i = 0;\n    const bounds = this.getBounds();\n    const offset = [bounds.minX + (bounds.maxX - bounds.minX) / 2, bounds.minY + (bounds.maxY - bounds.minY) / 2, bounds.minZ + (bounds.maxZ - bounds.minZ) / 2];\n\n    for (i = 0; i < this.vertices.length; i += 3)\n    {\n        if (this.vertices[i + 0] == this.vertices[i + 0])\n        {\n            if (x) this.vertices[i + 0] -= offset[0];\n            if (y) this.vertices[i + 1] -= offset[1];\n            if (z) this.vertices[i + 2] -= offset[2];\n        }\n    }\n\n    return offset;\n};\n\nGeometry.prototype.mapTexCoords2d = function ()\n{\n    const bounds = this.getBounds();\n    const num = this.vertices.length / 3;\n\n    this.texCoords = new Float32Array(num * 2);\n\n    for (let i = 0; i < num; i++)\n    {\n        const vertX = this.vertices[i * 3 + 0];\n        const vertY = this.vertices[i * 3 + 1];\n        this.texCoords[i * 2 + 0] = vertX / (bounds.maxX - bounds.minX) + 0.5;\n        this.texCoords[i * 2 + 1] = 1.0 - vertY / (bounds.maxY - bounds.minY) + 0.5;\n    }\n};\n\n\nGeometry.prototype.getInfoOneLine = function ()\n{\n    let txt = \"\";\n    if (this.faceVertCount == 3 && this.verticesIndices)txt += this.verticesIndices.length / 3;\n    else txt += 0;\n\n    txt += \" tris \";\n\n    if (this.vertices)txt += this.vertices.length / 3;\n    else txt += 0;\n\n    txt += \" verts\";\n\n    return txt;\n};\n\nGeometry.prototype.getInfo = function ()\n{\n    const info = {};\n\n    if (this.faceVertCount == 3 && this.verticesIndices)info.numFaces = this.verticesIndices.length / 3;\n    else info.numFaces = 0;\n\n    if (this.verticesIndices && this.verticesIndices.length)info.indices = this.verticesIndices.length;\n\n    if (this.vertices)info.numVerts = this.vertices.length / 3;\n    else info.numVerts = 0;\n\n    if (this.vertexNormals) info.numNormals = this.vertexNormals.length / 3;\n    else info.numNormals = 0;\n\n    if (this.texCoords) info.numTexCoords = this.texCoords.length / 2;\n    else info.numTexCoords = 0;\n\n    if (this.tangents) info.numTangents = this.tangents.length / 3;\n    else info.numTangents = 0;\n\n    if (this.biTangents) info.numBiTangents = this.biTangents.length / 3;\n    else info.numBiTangents = 0;\n\n    if (this.biTangents) info.numBiTangents = this.biTangents.length / 3;\n    else info.numBiTangents = 0;\n\n    if (this.vertexColors) info.numVertexColors = this.vertexColors.length / 4;\n    else info.numVertexColors = 0;\n\n    if (this.getAttributes()) info.numAttribs = Object.keys(this.getAttributes()).length;\n    else info.numAttribs = 0;\n\n    info.isIndexed = this.isIndexed();\n\n    return info;\n};\n\n// -----------------\n\n// TODO : move this into \"old\" circle op\nGeometry.buildFromFaces = function (arr, name, optimize)\n{\n    const vertices = [];\n    const verticesIndices = [];\n\n    for (let i = 0; i < arr.length; i += 3)\n    {\n        const a = arr[i + 0];\n        const b = arr[i + 1];\n        const c = arr[i + 2];\n        const face = [-1, -1, -1];\n\n        if (optimize)\n            for (let iv = 0; iv < vertices.length; iv += 3)\n            {\n                if (vertices[iv + 0] == a[0] && vertices[iv + 1] == a[1] && vertices[iv + 2] == a[2]) face[0] = iv / 3;\n                if (vertices[iv + 0] == b[0] && vertices[iv + 1] == b[1] && vertices[iv + 2] == b[2]) face[1] = iv / 3;\n                if (vertices[iv + 0] == c[0] && vertices[iv + 1] == c[1] && vertices[iv + 2] == c[2]) face[2] = iv / 3;\n            }\n\n        if (face[0] == -1)\n        {\n            vertices.push(a[0], a[1], a[2]);\n            face[0] = (vertices.length - 1) / 3;\n        }\n\n        if (face[1] == -1)\n        {\n            vertices.push(b[0], b[1], b[2]);\n            face[1] = (vertices.length - 1) / 3;\n        }\n\n        if (face[2] == -1)\n        {\n            vertices.push(c[0], c[1], c[2]);\n            face[2] = (vertices.length - 1) / 3;\n        }\n\n        verticesIndices.push(parseInt(face[0], 10));\n        verticesIndices.push(parseInt(face[1], 10));\n        verticesIndices.push(parseInt(face[2], 10));\n    }\n\n    const geom = new Geometry(name);\n    geom.name = name;\n    geom.vertices = vertices;\n    geom.verticesIndices = verticesIndices;\n\n    return geom;\n};\n\n// TODO: not needed anymore ?! move to deprecated ops?\nGeometry.json2geom = function (jsonMesh)\n{\n    const geom = new Geometry(\"jsonMeshGeom\");\n    geom.verticesIndices = [];\n\n    geom.vertices = jsonMesh.vertices || [];\n    geom.vertexNormals = jsonMesh.normals || [];\n    geom.vertexColors = jsonMesh.colors || [];\n    geom.tangents = jsonMesh.tangents || [];\n    geom.biTangents = jsonMesh.bitangents || [];\n    if (jsonMesh.texturecoords) geom.setTexCoords(jsonMesh.texturecoords[0]);\n\n    if (jsonMesh.vertices_b64)geom.vertices = new Float32Array((0,_base64__WEBPACK_IMPORTED_MODULE_1__.b64decTypedArray)(jsonMesh.vertices_b64));\n    if (jsonMesh.normals_b64) geom.vertexNormals = new Float32Array((0,_base64__WEBPACK_IMPORTED_MODULE_1__.b64decTypedArray)(jsonMesh.normals_b64));\n    if (jsonMesh.tangents_b64) geom.tangents = new Float32Array((0,_base64__WEBPACK_IMPORTED_MODULE_1__.b64decTypedArray)(jsonMesh.tangents_b64));\n    if (jsonMesh.bitangents_b64) geom.biTangents = new Float32Array((0,_base64__WEBPACK_IMPORTED_MODULE_1__.b64decTypedArray)(jsonMesh.bitangents_b64));\n    if (jsonMesh.texturecoords_b64) geom.setTexCoords(new Float32Array((0,_base64__WEBPACK_IMPORTED_MODULE_1__.b64decTypedArray)(jsonMesh.texturecoords_b64[0])));\n\n    if (jsonMesh.faces_b64)\n    {\n        geom.verticesIndices = new Uint32Array((0,_base64__WEBPACK_IMPORTED_MODULE_1__.b64decTypedArray)(jsonMesh.faces_b64));\n    }\n    else\n    {\n        geom.verticesIndices.length = jsonMesh.faces.length * 3;\n        for (let i = 0; i < jsonMesh.faces.length; i++)\n        {\n            geom.verticesIndices[i * 3] = jsonMesh.faces[i][0];\n            geom.verticesIndices[i * 3 + 1] = jsonMesh.faces[i][1];\n            geom.verticesIndices[i * 3 + 2] = jsonMesh.faces[i][2];\n        }\n    }\n\n    return geom;\n};\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cg/cg_geom.js\n");

/***/ }),

/***/ "./src/core/cg/cg_matrixstack.js":
/*!***************************************!*\
  !*** ./src/core/cg/cg_matrixstack.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MatrixStack\": () => (/* binding */ MatrixStack)\n/* harmony export */ });\n\nconst MatrixStack = function ()\n{\n    this._arr = [mat4.create()];\n    this._index = 0;\n    this.stateCounter = 0;\n};\n\nMatrixStack.prototype.push = function (m)\n{\n    this._index++;\n    this.stateCounter++;\n\n    if (this._index == this._arr.length)\n    {\n        const copy = mat4.create();\n        this._arr.push(copy);\n    }\n\n    mat4.copy(this._arr[this._index], m || this._arr[this._index - 1]);\n\n    return this._arr[this._index];\n};\n\nMatrixStack.prototype.pop = function ()\n{\n    this.stateCounter++;\n\n    this._index--;\n    if (this._index < 0) this._index = 0;\n\n    return this._arr[this._index];\n};\n\nMatrixStack.prototype.length = function ()\n{\n    return this._index;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZy9jZ19tYXRyaXhzdGFjay5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DQUJMRVMvLi9zcmMvY29yZS9jZy9jZ19tYXRyaXhzdGFjay5qcz84MDU5Il0sInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgTWF0cml4U3RhY2sgPSBmdW5jdGlvbiAoKVxue1xuICAgIHRoaXMuX2FyciA9IFttYXQ0LmNyZWF0ZSgpXTtcbiAgICB0aGlzLl9pbmRleCA9IDA7XG4gICAgdGhpcy5zdGF0ZUNvdW50ZXIgPSAwO1xufTtcblxuTWF0cml4U3RhY2sucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiAobSlcbntcbiAgICB0aGlzLl9pbmRleCsrO1xuICAgIHRoaXMuc3RhdGVDb3VudGVyKys7XG5cbiAgICBpZiAodGhpcy5faW5kZXggPT0gdGhpcy5fYXJyLmxlbmd0aClcbiAgICB7XG4gICAgICAgIGNvbnN0IGNvcHkgPSBtYXQ0LmNyZWF0ZSgpO1xuICAgICAgICB0aGlzLl9hcnIucHVzaChjb3B5KTtcbiAgICB9XG5cbiAgICBtYXQ0LmNvcHkodGhpcy5fYXJyW3RoaXMuX2luZGV4XSwgbSB8fCB0aGlzLl9hcnJbdGhpcy5faW5kZXggLSAxXSk7XG5cbiAgICByZXR1cm4gdGhpcy5fYXJyW3RoaXMuX2luZGV4XTtcbn07XG5cbk1hdHJpeFN0YWNrLnByb3RvdHlwZS5wb3AgPSBmdW5jdGlvbiAoKVxue1xuICAgIHRoaXMuc3RhdGVDb3VudGVyKys7XG5cbiAgICB0aGlzLl9pbmRleC0tO1xuICAgIGlmICh0aGlzLl9pbmRleCA8IDApIHRoaXMuX2luZGV4ID0gMDtcblxuICAgIHJldHVybiB0aGlzLl9hcnJbdGhpcy5faW5kZXhdO1xufTtcblxuTWF0cml4U3RhY2sucHJvdG90eXBlLmxlbmd0aCA9IGZ1bmN0aW9uICgpXG57XG4gICAgcmV0dXJuIHRoaXMuX2luZGV4O1xufTtcblxuZXhwb3J0IHsgTWF0cml4U3RhY2sgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/cg/cg_matrixstack.js\n");

/***/ }),

/***/ "./src/core/cg/cg_state.js":
/*!*********************************!*\
  !*** ./src/core/cg/cg_state.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CGState\": () => (/* binding */ CGState)\n/* harmony export */ });\n/* harmony import */ var _eventtarget__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../eventtarget */ \"./src/core/eventtarget.js\");\n/* harmony import */ var _cg_canvas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cg_canvas */ \"./src/core/cg/cg_canvas.js\");\n/* harmony import */ var _cg_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cg_constants */ \"./src/core/cg/cg_constants.js\");\n/* harmony import */ var _cg_matrixstack__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cg_matrixstack */ \"./src/core/cg/cg_matrixstack.js\");\n/* harmony import */ var _preproc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./preproc */ \"./src/core/cg/preproc.js\");\n\n\n\n\n\n\n\n// const CGState ()\nclass CGState extends _eventtarget__WEBPACK_IMPORTED_MODULE_0__.EventTarget\n{\n    constructor(_patch)\n    {\n        super();\n        // this.canvas = null;\n\n        this.fpsCounter = new CABLES.CG.FpsCounter();\n        this._identView = vec3.create();\n        this._ident = vec3.create();\n        vec3.set(this._identView, 0, 0, -2);\n        vec3.set(this._ident, 0, 0, 0);\n\n        this.patch = _patch;\n\n\n\n        this.DEPTH_COMPARE_FUNC_NEVER = 0;\n        this.DEPTH_COMPARE_FUNC_LESS = 1;\n        this.DEPTH_COMPARE_FUNC_EQUAL = 2;\n        this.DEPTH_COMPARE_FUNC_LESSEQUAL = 3;\n        this.DEPTH_COMPARE_FUNC_GREATER = 4;\n        this.DEPTH_COMPARE_FUNC_NOTEQUAL = 5;\n        this.DEPTH_COMPARE_FUNC_GREATEREQUAL = 6;\n        this.DEPTH_COMPARE_FUNC_ALWAYS = 7;\n\n\n        /**\n             * Current projection matrix\n             * @memberof Context\n             * @instance\n             * @type {mat4}\n             */\n        this.pMatrix = mat4.create();\n\n        /**\n             * Current model matrix\n             * @memberof Context\n             * @instance\n             * @type {mat4}\n             */\n        this.mMatrix = mat4.create();\n\n        /**\n             * Current view matrix\n             * @memberof Context\n             * @instance\n             * @type {mat4}\n             */\n        this.vMatrix = mat4.create();\n        this._textureslots = [];\n\n        this._pMatrixStack = new _cg_matrixstack__WEBPACK_IMPORTED_MODULE_3__.MatrixStack();\n        this._mMatrixStack = new _cg_matrixstack__WEBPACK_IMPORTED_MODULE_3__.MatrixStack();\n        this._vMatrixStack = new _cg_matrixstack__WEBPACK_IMPORTED_MODULE_3__.MatrixStack();\n\n        this.canvasScale = 1;\n\n        mat4.identity(this.mMatrix);\n        mat4.identity(this.vMatrix);\n\n\n        window.matchMedia(\"screen and (min-resolution: 2dppx)\")\n            .addEventListener(\"change\", (e) =>\n            {\n                this.emitEvent(\"resize\");\n            });\n    }\n\n    get canvasWidth()\n    {\n        return this.cgCanvas.canvasWidth;\n    }\n\n    get canvasHeight()\n    {\n        return this.cgCanvas.canvasHeight;\n    }\n\n    set pixelDensity(p)\n    {\n        if (this.cgCanvas.pixelDensity != p)\n        {\n            this.cgCanvas.pixelDensity = p;\n            this.cgCanvas.updateSize();\n            this.emitEvent(\"resize\");\n        }\n    }\n\n    get pixelDensity()\n    {\n        return this.cgCanvas.pixelDensity;\n    }\n\n\n    getGApiName()\n    {\n        return [\"WebGL\", \"WebGPU\"][this.gApi];\n    }\n\n    get canvas()\n    {\n        return this.cgCanvas.canvasEle;\n    }\n\n    setCanvas(canvEle)\n    {\n        if (this.cgCanvas && canvEle == this.cgCanvas.canvasEle) return;\n        if (typeof canvEle === \"string\") canvEle = document.getElementById(canvEle);\n\n        this.cgCanvas = new _cg_canvas__WEBPACK_IMPORTED_MODULE_1__.CgCanvas({ \"canvasEle\": canvEle, \"cg\": this });\n\n        if (this._setCanvas) this._setCanvas(canvEle);\n\n        this.updateSize();\n    }\n\n    updateSize()\n    {\n        this.cgCanvas.updateSize();\n    }\n\n    setSize(w, h, ignorestyle)\n    {\n        this.cgCanvas.setSize(w, h, ignorestyle);\n    }\n\n    _resizeToWindowSize()\n    {\n        this.setSize(window.innerWidth, window.innerHeight);\n        this.updateSize();\n    }\n\n    _resizeToParentSize()\n    {\n        const p = this.canvas.parentElement;\n        if (!p)\n        {\n            this._log.error(\"cables: can not resize to container element\");\n            return;\n        }\n        this.setSize(p.clientWidth, p.clientHeight);\n\n        this.updateSize();\n    }\n\n    setAutoResize(parent)\n    {\n        window.removeEventListener(\"resize\", this._resizeToWindowSize.bind(this));\n        window.removeEventListener(\"resize\", this._resizeToParentSize.bind(this));\n\n        if (parent == \"window\")\n        {\n            window.addEventListener(\"resize\", this._resizeToWindowSize.bind(this));\n            window.addEventListener(\"orientationchange\", this._resizeToWindowSize.bind(this));\n            this._resizeToWindowSize();\n        }\n        if (parent == \"parent\")\n        {\n            window.addEventListener(\"resize\", this._resizeToParentSize.bind(this));\n            this._resizeToParentSize();\n        }\n    }\n\n\n    /**\n * push a matrix to the projection matrix stack\n * @function pushPMatrix\n * @memberof Context\n * @instance\n * @param {mat4} projectionmatrix\n */\n    pushPMatrix()\n    {\n        this.pMatrix = this._pMatrixStack.push(this.pMatrix);\n    }\n\n    /**\n  * pop projection matrix stack\n  * @function popPMatrix\n  * @memberof Context\n  * @instance\n  * @returns {mat4} current projectionmatrix\n  */\n    popPMatrix()\n    {\n        this.pMatrix = this._pMatrixStack.pop();\n        return this.pMatrix;\n    }\n\n    getProjectionMatrixStateCount()\n    {\n        return this._pMatrixStack.stateCounter;\n    }\n\n    /**\n  * push a matrix to the model matrix stack\n  * @function pushModelMatrix\n  * @memberof Context\n  * @instance\n  * @param {mat4} modelmatrix\n  * @example\n  * // see source code of translate op:\n  * cgl.pushModelMatrix();\n  * mat4.translate(cgl.mMatrix,cgl.mMatrix, vec);\n  * trigger.trigger();\n  * cgl.popModelMatrix();\n  */\n    pushModelMatrix()\n    {\n        this.mMatrix = this._mMatrixStack.push(this.mMatrix);\n    }\n\n    /**\n  * pop model matrix stack\n  * @function popModelMatrix\n  * @memberof Context\n  * @instance\n  * @returns {mat4} current modelmatrix\n  */\n    popModelMatrix()\n    {\n        // todo: DEPRECATE\n        // if (this._mMatrixStack.length === 0) throw \"Invalid modelview popMatrix!\";\n        this.mMatrix = this._mMatrixStack.pop();\n        return this.mMatrix;\n    }\n\n    /**\n  * get model matrix\n  * @function modelMatrix\n  * @memberof Context\n  * @instance\n  * @returns {mat4} current modelmatrix\n  */\n    modelMatrix()\n    {\n        return this.mMatrix;\n    }\n\n\n    /**\n * push a matrix to the view matrix stack\n * @function pushviewMatrix\n * @memberof Context\n * @instance\n * @param {mat4} viewmatrix\n */\n    pushViewMatrix()\n    {\n        this.vMatrix = this._vMatrixStack.push(this.vMatrix);\n    }\n\n    /**\n  * pop view matrix stack\n  * @function popViewMatrix\n  * @memberof Context\n  * @instance\n  * @returns {mat4} current viewmatrix\n  * @function\n  */\n    popViewMatrix()\n    {\n        this.vMatrix = this._vMatrixStack.pop();\n    }\n\n    getViewMatrixStateCount()\n    {\n        return this._vMatrixStack.stateCounter;\n    }\n\n    _startMatrixStacks(identTranslate, identTranslateView)\n    {\n        identTranslate = identTranslate || this._ident;\n        identTranslateView = identTranslateView || this._identView;\n\n        mat4.perspective(this.pMatrix, 45, this.canvasWidth / this.canvasHeight, 0.1, 1000.0);\n\n        mat4.identity(this.mMatrix);\n        mat4.identity(this.vMatrix);\n        mat4.translate(this.mMatrix, this.mMatrix, identTranslate);\n        mat4.translate(this.vMatrix, this.vMatrix, identTranslateView);\n\n        this.pushPMatrix();\n        this.pushModelMatrix();\n        this.pushViewMatrix();\n    }\n\n    _endMatrixStacks()\n    {\n        this.popViewMatrix();\n        this.popModelMatrix();\n        this.popPMatrix();\n    }\n\n    dispose()\n    {\n        this.aborted = true;\n        if (this.cgCanvas) this.cgCanvas.dispose();\n        if (this._dispose) this._dispose();\n    }\n}\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cg/cg_state.js\n");

/***/ }),

/***/ "./src/core/cg/cg_uniform.js":
/*!***********************************!*\
  !*** ./src/core/cg/cg_uniform.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core_logger */ \"./src/core/core_logger.js\");\n/* harmony import */ var _core_port__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core_port */ \"./src/core/core_port.js\");\n\n\n\nclass CgUniform\n{\n    constructor(__shader, __type, __name, _value, _port2, _port3, _port4, _structUniformName, _structName, _propertyName)\n    {\n        this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"cg_uniform\");\n        this._type = __type;\n        this._name = __name;\n        this._shader = __shader;\n        this._value = 0.00001;\n        this._oldValue = null;\n        this._port = null;\n        this._structName = _structName;\n        this._structUniformName = _structUniformName;\n        this._propertyName = _propertyName;\n\n        this._shader._addUniform(this);\n        this.needsUpdate = true;\n        this.shaderType = null;\n        this.comment = null;\n\n        if (__type == \"f\")\n        {\n            this.set = this.setValue = this.setValueF.bind(this);\n            this.updateValue = this.updateValueF.bind(this);\n        }\n        else if (__type == \"f[]\")\n        {\n            this.set = this.setValue = this.setValueArrayF.bind(this);\n            this.updateValue = this.updateValueArrayF.bind(this);\n        }\n        else if (__type == \"2f[]\")\n        {\n            this.set = this.setValue = this.setValueArray2F.bind(this);\n            this.updateValue = this.updateValueArray2F.bind(this);\n        }\n        else if (__type == \"3f[]\")\n        {\n            this.set = this.setValue = this.setValueArray3F.bind(this);\n            this.updateValue = this.updateValueArray3F.bind(this);\n        }\n        else if (__type == \"4f[]\")\n        {\n            this.set = this.setValue = this.setValueArray4F.bind(this);\n            this.updateValue = this.updateValueArray4F.bind(this);\n        }\n        else if (__type == \"i\")\n        {\n            this.set = this.setValue = this.setValueI.bind(this);\n            this.updateValue = this.updateValueI.bind(this);\n        }\n        else if (__type == \"2i\")\n        {\n            this.set = this.setValue = this.setValue2I.bind(this);\n            this.updateValue = this.updateValue2I.bind(this);\n        }\n        else if (__type == \"3i\")\n        {\n            this.set = this.setValue = this.setValue3I.bind(this);\n            this.updateValue = this.updateValue3I.bind(this);\n        }\n        else if (__type == \"4i\")\n        {\n            this.set = this.setValue = this.setValue4I.bind(this);\n            this.updateValue = this.updateValue4I.bind(this);\n        }\n        else if (__type == \"b\")\n        {\n            this.set = this.setValue = this.setValueBool.bind(this);\n            this.updateValue = this.updateValueBool.bind(this);\n        }\n        else if (__type == \"4f\")\n        {\n            this.set = this.setValue = this.setValue4F.bind(this);\n            this.updateValue = this.updateValue4F.bind(this);\n        }\n        else if (__type == \"3f\")\n        {\n            this.set = this.setValue = this.setValue3F.bind(this);\n            this.updateValue = this.updateValue3F.bind(this);\n        }\n        else if (__type == \"2f\")\n        {\n            this.set = this.setValue = this.setValue2F.bind(this);\n            this.updateValue = this.updateValue2F.bind(this);\n        }\n        else if (__type == \"t\")\n        {\n            this.set = this.setValue = this.setValueT.bind(this);\n            this.updateValue = this.updateValueT.bind(this);\n        }\n        else if (__type == \"tc\")\n        {\n            this.set = this.setValue = this.setValueT.bind(this);\n            this.updateValue = this.updateValueT.bind(this);\n        }\n        else if (__type == \"t[]\")\n        {\n            this.set = this.setValue = this.setValueArrayT.bind(this);\n            this.updateValue = this.updateValueArrayT.bind(this);\n        }\n        else if (__type == \"m4\" || __type == \"m4[]\")\n        {\n            this.set = this.setValue = this.setValueM4.bind(this);\n            this.updateValue = this.updateValueM4.bind(this);\n        }\n        else throw new Error(\"Unknown uniform type\");\n\n        if (typeof _value == \"object\" && _value instanceof _core_port__WEBPACK_IMPORTED_MODULE_1__.Port)\n        {\n            this._port = _value;\n            this._value = this._port.get();\n\n\n            if (_port2 && _port3 && _port4)\n            {\n                if (!(_port2 instanceof _core_port__WEBPACK_IMPORTED_MODULE_1__.Port) || !(_port3 instanceof _core_port__WEBPACK_IMPORTED_MODULE_1__.Port) || !(_port4 instanceof _core_port__WEBPACK_IMPORTED_MODULE_1__.Port))\n                {\n                    this._log.error(\"[cgl_uniform] mixed port/value parameter for vec4 \", this._name);\n                }\n\n                this._value = [0, 0, 0, 0];\n                this._port2 = _port2;\n                this._port3 = _port3;\n                this._port4 = _port4;\n\n                this._port.on(\"change\", this.updateFromPort4f.bind(this));\n                this._port2.on(\"change\", this.updateFromPort4f.bind(this));\n                this._port3.on(\"change\", this.updateFromPort4f.bind(this));\n                this._port4.on(\"change\", this.updateFromPort4f.bind(this));\n\n                // this._port.onChange = this._port2.onChange = this._port3.onChange = this._port4.onChange = this.updateFromPort4f.bind(this);\n                this.updateFromPort4f();\n            }\n            else if (_port2 && _port3)\n            {\n                if (!(_port2 instanceof _core_port__WEBPACK_IMPORTED_MODULE_1__.Port) || !(_port3 instanceof _core_port__WEBPACK_IMPORTED_MODULE_1__.Port))\n                {\n                    this._log.error(\"[cgl_uniform] mixed port/value parameter for vec4 \", this._name);\n                }\n\n                this._value = [0, 0, 0];\n                this._port2 = _port2;\n                this._port3 = _port3;\n                // this._port.onChange = this._port2.onChange = this._port3.onChange = this.updateFromPort3f.bind(this);\n                this._port.on(\"change\", this.updateFromPort3f.bind(this));\n                this._port2.on(\"change\", this.updateFromPort3f.bind(this));\n                this._port3.on(\"change\", this.updateFromPort3f.bind(this));\n\n                this.updateFromPort3f();\n            }\n            else if (_port2)\n            {\n                if (!(_port2 instanceof _core_port__WEBPACK_IMPORTED_MODULE_1__.Port))\n                {\n                    this._log.error(\"[cgl_uniform] mixed port/value parameter for vec4 \", this._name);\n                }\n\n                this._value = [0, 0];\n                this._port2 = _port2;\n                // this._port.onChange = this._port2.onChange = this.updateFromPort2f.bind(this);\n                this._port.on(\"change\", this.updateFromPort2f.bind(this));\n                this._port2.on(\"change\", this.updateFromPort2f.bind(this));\n\n                this.updateFromPort2f();\n            }\n            else\n            {\n                // this._port.on = this.updateFromPort.bind(this);\n                this._port.on(\"change\", this.updateFromPort.bind(this));\n            }\n        }\n        else this._value = _value;\n\n        this.setValue(this._value);\n        this.needsUpdate = true;\n    }\n\n\n    getType()\n    {\n        return this._type;\n    }\n\n    getName()\n    {\n        return this._name;\n    }\n\n    getValue()\n    {\n        return this._value;\n    }\n\n    getShaderType()\n    {\n        return this.shaderType;\n    }\n\n    isStructMember()\n    {\n        return !!this._structName;\n    }\n\n\n    updateFromPort4f()\n    {\n        this._value[0] = this._port.get();\n        this._value[1] = this._port2.get();\n        this._value[2] = this._port3.get();\n        this._value[3] = this._port4.get();\n        this.setValue(this._value);\n    }\n\n    updateFromPort3f()\n    {\n        this._value[0] = this._port.get();\n        this._value[1] = this._port2.get();\n        this._value[2] = this._port3.get();\n        this.setValue(this._value);\n    }\n\n    updateFromPort2f()\n    {\n        this._value[0] = this._port.get();\n        this._value[1] = this._port2.get();\n        this.setValue(this._value);\n    }\n\n    updateFromPort()\n    {\n        this.setValue(this._port.get());\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CgUniform);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cg/cg_uniform.js\n");

/***/ }),

/***/ "./src/core/cg/preproc.js":
/*!********************************!*\
  !*** ./src/core/cg/preproc.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n   * @type {!RegExp}\n   * @inner\n   */\nlet GLOB_EXP = /(?:^|[^\\\\])\\*/;\n\n/**\n    * @type {!RegExp}\n    * @inner\n    */\nlet NOT_LINE_ENDING = /[^\\r\\n]/g;\n\n/**\n    * Constructs a new Preprocessor.\n    * @exports Preprocessor\n    * @class Provides pre-processing of JavaScript source files, e.g. to build different versions of a library.\n    * @param {string} source Source to process\n    * @param {string|Object.<string,string>=} baseDirOrIncludes Source base directory used for includes (node.js only)\n    *  or an object containing all the included sources by filename. Defaults to the current working directory.\n    * @param {boolean} preserveLineNumbers When removing blocks of code, replace the block with blank lines so that\n    *  line numbers are preserved, as long as #include is not used\n    * @constructor\n    */\nconst Preprocessor = function Preprocessor(source, baseDirOrIncludes, preserveLineNumbers)\n{\n    /**\n      * Source code to pre-process.\n      * @type {string}\n      * @expose\n      */\n    this.source = \"\" + source;\n\n    /**\n      * Source base directory.\n      * @type {string}\n      * @expose\n      */\n    this.baseDir = typeof baseDirOrIncludes === \"string\" ? baseDirOrIncludes : \".\";\n\n    /**\n      * Included sources by filename.\n      * @type {Object.<string, string>}\n      */\n    this.includes = typeof baseDirOrIncludes === \"object\" ? baseDirOrIncludes : {};\n\n    /**\n      * Preserve line numbers when removing blocks of code\n      * @type {boolean}\n      */\n    this.preserveLineNumbers = typeof preserveLineNumbers === \"boolean\" ? preserveLineNumbers : false;\n\n    /**\n      * Whether running inside of node.js or not.\n      * @type {boolean}\n      * @expose\n      */\n    this.isNode = (typeof window === \"undefined\" || !window.window) && \"function\" === \"function\";\n\n    /**\n      * Error reporting source ahead length.\n      * @type {number}\n      * @expose\n      */\n    this.errorSourceAhead = 50;\n\n    /**\n      * Runtime defines.\n      * @type {Array.<string>}\n      */\n    this.defines = [];\n};\n\n/**\n    * Definition expression\n    * @type {!RegExp}\n    */\nPreprocessor.EXPR = /([ ]*)\\/\\/[ ]+#(include_once|include|ifn?def|if|endif|else|elif|put|define)/g;\n\n/**\n    * #* EXPRESSION\n    * @type {!RegExp}\n    */\nPreprocessor.ALL = /([^\\r\\n]*)\\r?(?:\\n|$)/;\n\n/**\n    * #include \"path/to/file\". Requires node.js' \"fs\" module.\n    * @type {!RegExp}\n    */\nPreprocessor.INCLUDE = /(include_once|include)[ ]+\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"[ ]*\\r?(?:\\n|$)/g;\n\n/**\n    * #ifdef/#ifndef SOMEDEFINE, #if EXPRESSION\n    * @type {!RegExp}\n    */\nPreprocessor.IF = /(ifdef|ifndef|if)[ ]*([^\\r\\n]+)\\r?\\n/g;\n\n/**\n    * #endif/#else, #elif EXPRESSION\n    * @type {!RegExp}\n    */\nPreprocessor.ENDIF = /(endif|else|elif)([ ]+[^\\r\\n]+)?\\r?(?:\\n|$)/g;\n\n/**\n    * #put EXPRESSION\n    * @type {!RegExp}\n    */\nPreprocessor.PUT = /put[ ]+([^\\n]+)[ ]*/g;\n\n/**\n    * #define EXPRESSION\n    * @type {!RegExp}\n    */\nPreprocessor.DEFINE = /define[ ]+([^\\n\\r]+)\\r?(?:\\n|$)/g;\n\n/**\n    * #define EXPRESSION\n    * @type {!RegExp}\n    */\nPreprocessor.VAR = /define[ ]+var[ ]+([a-zA-Z_][a-zA-Z0-9_]*)[ ]*=[ ]*(.+)/g;\n\n/**\n    * #define EXPRESSION\n    * @type {!RegExp}\n    */\nPreprocessor.BOOLVAR = /define[ ]+([a-zA-Z_][a-zA-Z0-9_]*)[ ]*/g;\n\n/**\n    * #define EXPRESSION\n    * @type {!RegExp}\n    */\nPreprocessor.FUNCTION = /define[ ]+function[ ]+([a-zA-Z_][a-zA-Z0-9_]*)[ ]*(.+)/g;\n\n/**\n    * Strips slashes from an escaped string.\n    * @param {string} str Escaped string\n    * @return {string} Unescaped string\n    * @expose\n    */\nPreprocessor.stripSlashes = function (str)\n{\n    // ref: http://phpjs.org/functions/stripslashes/\n    return (str + \"\").replace(/\\\\(.?)/g, function (s, n1)\n    {\n        switch (n1)\n        {\n        case \"\\\\\": return \"\\\\\";\n        case \"0\": return \"\\u0000\";\n        case \"\": return \"\";\n        default: return n1;\n        }\n    });\n};\n\n/**\n    * Adds slashes to an unescaped string.\n    * @param {string} str Unescaped string\n    * @return {string} Escaped string\n    * @expose\n    */\nPreprocessor.addSlashes = function (str)\n{\n    return (str + \"\").replace(/([\\\\\"'])/g, \"\\\\$1\").replace(/\\0/g, \"\\\\0\");\n};\n\n/**\n    * Indents a multi-line string.\n    * @param {string} str Multi-line string to indent\n    * @param {string} indent Indent to use\n    * @return {string} Indented string\n    * @expose\n    */\nPreprocessor.indent = function (str, indent)\n{\n    let lines = str.split(\"\\n\");\n    for (let i = 0; i < lines.length; i++)\n    {\n        lines[i] = indent + lines[i];\n    }\n    return lines.join(\"\\n\");\n};\n\n/**\n    * Transforms a string for display in error messages.\n    * @param {string} str String to transform\n    * @return {string}\n    * @expose\n    */\nPreprocessor.nlToStr = function (str)\n{\n    return \"[\" + str.replace(/\\r/g, \"\").replace(/\\n/g, \"\\\\n\") + \"]\";\n};\n\n/**\n    * Evaluates an expression.\n    * @param {object.<string,string>} defines Defines\n    * @param {string=} expr Expression to evaluate\n    * @return {*} Expression result\n    * @throws {Error} If the expression cannot be evaluated\n    * @expose\n    */\nPreprocessor.evaluate = function (defines, expr)\n{\n    let evalFunction = function ()\n    {\n        for (let key in defines)\n        {\n            if (defines.hasOwnProperty(key))\n            {\n                if (defines[key].type === \"var\")\n                {\n                    eval(\"var \" + key + \" = \" + defines[key].value + \";\");\n                }\n                else\n                {\n                    eval(\"function \" + key + defines[key].value);\n                }\n            }\n        }\n\n        return eval(expr);\n    };\n    return evalFunction();\n};\n\n/**\n    * Preprocesses.\n    * @param {object.<string,string>} defines Defines\n    * @param {function(string)=} verbose Print verbose processing information to\n    *    the specified function as the first parameter. Defaults to not print debug information.\n    * @return {string} Processed source\n    * @throws {Error} If the source cannot be pre-processed\n    * @expose\n    */\nPreprocessor.prototype.process = function (defines, verbose)\n{\n    defines = defines || {};\n    verbose = typeof verbose === \"function\" ? verbose : function () {};\n    verbose(\"Defines: \" + JSON.stringify(defines));\n\n    let match, match2, match3, include, p, stack = [], before;\n    let isSkip = false;\n\n    while ((match = Preprocessor.EXPR.exec(this.source)) !== null)\n    {\n        verbose(match[2] + \" @ \" + match.index + \"-\" + Preprocessor.EXPR.lastIndex);\n        let indent = match[1];\n\n        if (isSkip && stack.length > 0 && match[2] !== \"endif\" && match[2] !== \"else\" && match[2] !== \"elif\")\n        {\n            before = stack.pop();\n            verbose(\"  pop (\" + stack.length + \"): \" + JSON.stringify(before));\n\n            Preprocessor.ALL.lastIndex = match.index;\n            if ((match2 = Preprocessor.ALL.exec(this.source)) === null)\n            {\n                throw (new Error(\"Illegal #\" + match[2] + \": \" +\n             this.source.substring(match.index, match.index + this.errorSourceAhead) + \"...\"));\n            }\n\n            stack.push(p = {\n                \"include\": before.include,\n                \"index\": before.index,\n                \"lastIndex\": Preprocessor.ALL.lastIndex\n            });\n            verbose(\"  push (\" + stack.length + \"): \" + JSON.stringify(p));\n            continue;\n        }\n\n        switch (match[2])\n        {\n        // case \"include_once\":\n        // case \"include\":\n        // Preprocessor.INCLUDE.lastIndex = match.index;\n        // if ((match2 = Preprocessor.INCLUDE.exec(this.source)) === null)\n        // {\n        //     throw (new Error(\"Illegal #\" + match[2] + \": \" +\n        //    this.source.substring(match.index, match.index + this.errorSourceAhead) + \"...\"));\n        // }\n        // include = Preprocessor.stripSlashes(match2[2]);\n        // if (typeof this.includes[include] !== \"undefined\")\n        // { // Do we already know it?\n        //     if (match2[1] === \"include_once\")\n        //     {\n        //         verbose(\"  skip incl: \" + include);\n        //         include = \"\";\n        //     }\n        //     else\n        //     {\n        //         verbose(\"  incl: \" + include);\n        //         include = this.includes[include];\n        //     }\n        // }\n        // else\n        // { // Load it if in node.js...\n        //     if (!this.isNode)\n        //     {\n        //         throw (new Error(\"Failed to resolve include: \" + this.baseDir + \"/\" + include));\n        //     }\n        //     try\n        //     {\n        //         let key = include,\n        //             fs = require(\"fs\");\n        //         if (GLOB_EXP.test(include))\n        //         {\n        //             let glob = require(\"glob\");\n        //             verbose(\"  glob incl: \" + this.baseDir + \"/\" + include);\n        //             let _this = this;\n        //             /* eslint no-loop-func: 0 */\n        //             let files = glob(this.baseDir + \"/\" + include, { \"sync\": true });\n        //             include = \"\";\n        //             for (let i = 0; i < files.length; i++)\n        //             {\n        //                 verbose(\"  incl: \" + files[i]);\n        //                 let contents = fs.readFileSync(files[i]) + \"\";\n        //                 _this.includes[key] = contents;\n        //                 include += contents;\n        //             }\n        //         }\n        //         else\n        //         {\n        //             verbose(\"  incl: \" + include);\n        //             include = fs.readFileSync(this.baseDir + \"/\" + include) + \"\";\n        //             this.includes[key] = include;\n        //         }\n        //     }\n        //     catch (e)\n        //     {\n        //         throw (new Error(\"Include failed: \" + include + \" (\" + e + \")\"));\n        //     }\n        // }\n        // this.source = this.source.substring(0, match.index) +\n        //  Preprocessor.indent(include, indent) + this.source.substring(Preprocessor.INCLUDE.lastIndex);\n        // Preprocessor.EXPR.lastIndex = stack.length > 0 ? stack[stack.length - 1].lastIndex : 0; // Start over again\n        // verbose(\"  continue at \" + Preprocessor.EXPR.lastIndex);\n        // break;\n        // case \"put\":\n        //     Preprocessor.PUT.lastIndex = match.index;\n        //     if ((match2 = Preprocessor.PUT.exec(this.source)) === null)\n        //     {\n        //         throw (new Error(\"Illegal #\" + match[2] + \": \" +\n        //        this.source.substring(match.index, match.index + this.errorSourceAhead) + \"...\"));\n        //     }\n        //     include = match2[1];\n        //     verbose(\"  expr: \" + include);\n        //     include = Preprocessor.evaluate(defines, include);\n        //     verbose(\"  value: \" + Preprocessor.nlToStr(include));\n        //     this.source = this.source.substring(0, match.index) + indent + include +\n        //      this.source.substring(Preprocessor.PUT.lastIndex);\n        //     Preprocessor.EXPR.lastIndex = match.index + include.length;\n        //     verbose(\"  continue at \" + Preprocessor.EXPR.lastIndex);\n        //     break;\n        case \"ifdef\":\n        case \"ifndef\":\n        case \"if\":\n            Preprocessor.IF.lastIndex = match.index;\n            if ((match2 = Preprocessor.IF.exec(this.source)) === null)\n            {\n                throw (new Error(\"Illegal #\" + match[2] + \": \" +\n               this.source.substring(match.index, match.index + this.errorSourceAhead) + \"...\"));\n            }\n            verbose(\"  test: \" + match2[2]);\n            verbose(\"  defines  \" + JSON.stringify(defines));\n            if (match2[1] === \"ifdef\")\n            {\n                include = defines[match2[2]] !== undefined;\n            }\n            else if (match2[1] === \"ifndef\")\n            {\n                include = defines[match2[2]] === undefined;\n            }\n            else\n            {\n                include = Preprocessor.evaluate(defines, match2[2]);\n            }\n            isSkip = !include;\n            verbose(\"  value: \" + include + \", isSkip: \" + isSkip);\n            stack.push(p = {\n                \"include\": include,\n                \"index\": match.index,\n                \"lastIndex\": Preprocessor.IF.lastIndex\n            });\n            verbose(\"  push (\" + stack.length + \"): \" + JSON.stringify(p));\n            break;\n        case \"endif\":\n        case \"else\":\n        case \"elif\":\n            Preprocessor.ENDIF.lastIndex = match.index;\n            if ((match2 = Preprocessor.ENDIF.exec(this.source)) === null)\n            {\n                throw (new Error(\"Illegal #\" + match[2] + \": \\\"\" +\n               this.source.substring(match.index, match.index + this.errorSourceAhead) + \"...\"));\n            }\n            if (stack.length === 0)\n            {\n                throw (new Error(\"Unexpected #\" + match2[1] + \": \\\"\" +\n               this.source.substring(match.index, match.index + this.errorSourceAhead) + \"...\"));\n            }\n            before = stack.pop();\n            verbose(\"  pop (\" + stack.length + \"): \" + JSON.stringify(before));\n\n            if (this.preserveLineNumbers)\n            {\n                include = this.source.substring(before.index, before.lastIndex).replace(NOT_LINE_ENDING, \"\") +\n               this.source.substring(before.lastIndex, match.index) +\n               this.source.substring(match.index, Preprocessor.ENDIF.lastIndex).replace(NOT_LINE_ENDING, \"\");\n            }\n            else\n            {\n                include = this.source.substring(before.lastIndex, match.index);\n            }\n\n            if (before.include)\n            {\n                verbose(\"  incl: \" + Preprocessor.nlToStr(include) + \", 0-\" + before.index +\n               \" + \" + include.length + \" bytes + \" + Preprocessor.ENDIF.lastIndex + \"-\" + this.source.length);\n                this.source = this.source.substring(0, before.index) + include +\n               this.source.substring(Preprocessor.ENDIF.lastIndex);\n            }\n            else if (this.preserveLineNumbers)\n            {\n                verbose(\"  excl(\\\\n): \" + Preprocessor.nlToStr(include) + \", 0-\" + before.index +\n               \" + \" + Preprocessor.ENDIF.lastIndex + \"-\" + this.source.length);\n                include = include.replace(NOT_LINE_ENDING, \"\");\n                this.source = this.source.substring(0, before.index) + include +\n               this.source.substring(Preprocessor.ENDIF.lastIndex);\n            }\n            else\n            {\n                verbose(\"  excl: \" + Preprocessor.nlToStr(include) + \", 0-\" + before.index +\n               \" + \" + Preprocessor.ENDIF.lastIndex + \"-\" + this.source.length);\n                include = \"\";\n                this.source = this.source.substring(0, before.index) +\n               this.source.substring(Preprocessor.ENDIF.lastIndex);\n            }\n            if (this.source === \"\")\n            {\n                verbose(\"  result empty\");\n            }\n            isSkip = false;\n            Preprocessor.EXPR.lastIndex = before.index + include.length;\n            verbose(\"  continue at \" + Preprocessor.EXPR.lastIndex);\n            if (match2[1] === \"else\" || match2[1] === \"elif\")\n            {\n                if (match2[1] === \"else\")\n                {\n                    include = !before.include;\n                }\n                else\n                {\n                    include = Preprocessor.evaluate(defines, match2[2]);\n                }\n                isSkip = !include;\n                verbose(\"  isSkip: \" + isSkip);\n                stack.push(p = {\n                    \"include\": include,\n                    \"index\": Preprocessor.EXPR.lastIndex,\n                    \"lastIndex\": Preprocessor.EXPR.lastIndex\n                });\n                verbose(\"  push (\" + stack.length + \"): \" + JSON.stringify(p));\n            }\n            break;\n        case \"define\":\n            Preprocessor.DEFINE.lastIndex = match.index;\n            Preprocessor.VAR.lastIndex = match.index;\n            Preprocessor.FUNCTION.lastIndex = match.index;\n            Preprocessor.BOOLVAR.lastIndex = match.index;\n\n            if ((match2 = Preprocessor.DEFINE.exec(this.source)) === null)\n            {\n                throw (new Error(\"Illegal #\" + match[2] + \": \" +\n               this.source.substring(match.index, match.index + this.errorSourceAhead) + \"...\"));\n            }\n            var define = match2[1];\n            verbose(\"  def: \\\"\" + define + \"\\\"\");\n\n            var identifier, value, type;\n            if ((match3 = Preprocessor.VAR.exec(this.source)) !== null)\n            {\n                type = \"var\";\n                identifier = match3[1];\n                value = match3[2];\n                verbose(\" match3(var): \" + JSON.stringify(match3));\n            }\n            else if ((match3 = Preprocessor.FUNCTION.exec(this.source)) !== null)\n            {\n                type = \"function\";\n                identifier = match3[1];\n                value = match3[2];\n                verbose(\" match3(function): \" + JSON.stringify(match3));\n            }\n            else if ((match3 = Preprocessor.BOOLVAR.exec(this.source)) !== null)\n            {\n                type = \"var\";\n                identifier = match3[1];\n                value = true;\n                verbose(\" match3(boolvar): \" + JSON.stringify(match3));\n            }\n            else\n            {\n                throw (new Error(\"Illegal #\" + match[2] + \": \" +\n               this.source.substring(match.index, match.index + this.errorSourceAhead) + \"...\"));\n            }\n\n            verbose(\"  type: \" + type);\n            verbose(\"  identifier: \" + identifier);\n            verbose(\"  value: \" + value);\n\n            defines[identifier] = {\n                \"type\": type,\n                \"value\": value\n            };\n\n            verbose(\"  defines  \" + JSON.stringify(defines));\n\n            var lineEnding = \"\";\n            if (this.preserveLineNumbers)\n            {\n                lineEnding = this.source.substring(match.index, Preprocessor.DEFINE.lastIndex).replace(NOT_LINE_ENDING, \"\");\n            }\n            this.source = this.source.substring(0, match.index) + indent +\n             lineEnding + this.source.substring(Preprocessor.DEFINE.lastIndex);\n            Preprocessor.EXPR.lastIndex = match.index;\n            verbose(\"  continue at \" + Preprocessor.EXPR.lastIndex);\n            break;\n        default:\n            break;\n        }\n    }\n    if (stack.length > 0)\n    {\n        verbose(\"Still on stack (\" + stack.length + \"): \" + JSON.stringify(stack.pop()));\n    }\n    return this.source;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Preprocessor);\n\n\n// const pp = new Preprocessor(\"// #define AAAA\\nhallo AAAA!\\n// #ifdef AAAA\\njaja is defined!\\n// #else\\n hurziburzi\\n// #endif\\nhuhu\", \".\", true);\n// // debugger;\n// const r = pp.process({ \"a\": 1 });\n// console.log(r);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cg/preproc.js\n");

/***/ }),

/***/ "./src/core/cg/sg_fpscounter.js":
/*!**************************************!*\
  !*** ./src/core/cg/sg_fpscounter.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FpsCounter)\n/* harmony export */ });\n/* harmony import */ var _eventtarget__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../eventtarget */ \"./src/core/eventtarget.js\");\n\n\nclass FpsCounter extends _eventtarget__WEBPACK_IMPORTED_MODULE_0__.EventTarget\n{\n    constructor()\n    {\n        super();\n        this._timeStartFrame = 0;\n        this._timeStartSecond = 0;\n        this._fpsCounter = 0;\n        this._msCounter = 0;\n        this._frameCount = 0;\n\n        this.stats = { \"ms\": 0, \"fps\": 0 };\n    }\n\n    get frameCount()\n    {\n        return this._frameCount;\n    }\n\n    startFrame()\n    {\n        this._timeStartFrame = CABLES.now();\n    }\n\n    endFrame()\n    {\n        this._frameCount++;\n        this._fpsCounter++;\n\n        const timeFrame = CABLES.now() - this._timeStartFrame;\n        this._msCounter += timeFrame;\n\n        if (CABLES.now() - this._timeStartSecond > 1000)\n        {\n            this.endSecond();\n        }\n    }\n\n    endSecond()\n    {\n        this.stats.fps = this._fpsCounter;\n        this.stats.ms = Math.round(this._msCounter / this._fpsCounter * 100) / 100;\n\n        this.emitEvent(\"performance\", this.stats);\n\n        // reset\n        this._fpsCounter = 0;\n        this._msCounter = 0;\n        this._timeStartSecond = CABLES.now();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZy9zZ19mcHNjb3VudGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NnL3NnX2Zwc2NvdW50ZXIuanM/YTBjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudFRhcmdldCB9IGZyb20gXCIuLi9ldmVudHRhcmdldFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGcHNDb3VudGVyIGV4dGVuZHMgRXZlbnRUYXJnZXRcbntcbiAgICBjb25zdHJ1Y3RvcigpXG4gICAge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLl90aW1lU3RhcnRGcmFtZSA9IDA7XG4gICAgICAgIHRoaXMuX3RpbWVTdGFydFNlY29uZCA9IDA7XG4gICAgICAgIHRoaXMuX2Zwc0NvdW50ZXIgPSAwO1xuICAgICAgICB0aGlzLl9tc0NvdW50ZXIgPSAwO1xuICAgICAgICB0aGlzLl9mcmFtZUNvdW50ID0gMDtcblxuICAgICAgICB0aGlzLnN0YXRzID0geyBcIm1zXCI6IDAsIFwiZnBzXCI6IDAgfTtcbiAgICB9XG5cbiAgICBnZXQgZnJhbWVDb3VudCgpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5fZnJhbWVDb3VudDtcbiAgICB9XG5cbiAgICBzdGFydEZyYW1lKClcbiAgICB7XG4gICAgICAgIHRoaXMuX3RpbWVTdGFydEZyYW1lID0gQ0FCTEVTLm5vdygpO1xuICAgIH1cblxuICAgIGVuZEZyYW1lKClcbiAgICB7XG4gICAgICAgIHRoaXMuX2ZyYW1lQ291bnQrKztcbiAgICAgICAgdGhpcy5fZnBzQ291bnRlcisrO1xuXG4gICAgICAgIGNvbnN0IHRpbWVGcmFtZSA9IENBQkxFUy5ub3coKSAtIHRoaXMuX3RpbWVTdGFydEZyYW1lO1xuICAgICAgICB0aGlzLl9tc0NvdW50ZXIgKz0gdGltZUZyYW1lO1xuXG4gICAgICAgIGlmIChDQUJMRVMubm93KCkgLSB0aGlzLl90aW1lU3RhcnRTZWNvbmQgPiAxMDAwKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLmVuZFNlY29uZCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZW5kU2Vjb25kKClcbiAgICB7XG4gICAgICAgIHRoaXMuc3RhdHMuZnBzID0gdGhpcy5fZnBzQ291bnRlcjtcbiAgICAgICAgdGhpcy5zdGF0cy5tcyA9IE1hdGgucm91bmQodGhpcy5fbXNDb3VudGVyIC8gdGhpcy5fZnBzQ291bnRlciAqIDEwMCkgLyAxMDA7XG5cbiAgICAgICAgdGhpcy5lbWl0RXZlbnQoXCJwZXJmb3JtYW5jZVwiLCB0aGlzLnN0YXRzKTtcblxuICAgICAgICAvLyByZXNldFxuICAgICAgICB0aGlzLl9mcHNDb3VudGVyID0gMDtcbiAgICAgICAgdGhpcy5fbXNDb3VudGVyID0gMDtcbiAgICAgICAgdGhpcy5fdGltZVN0YXJ0U2Vjb25kID0gQ0FCTEVTLm5vdygpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/cg/sg_fpscounter.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_framebuffer.js":
/*!*****************************************!*\
  !*** ./src/core/cgl/cgl_framebuffer.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Framebuffer\": () => (/* binding */ Framebuffer)\n/* harmony export */ });\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core_logger */ \"./src/core/core_logger.js\");\n/* harmony import */ var _cgl_texture__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cgl_texture */ \"./src/core/cgl/cgl_texture.js\");\n\n\n\n// todo: convert to prototyped...\n\n/**\n * a framebuffer\n * @external CGL\n * @namespace Framebuffer\n * @constructor\n * @param {Context} cgl\n * @param {Number} width\n * @param {Number} height\n * @param {Object} [options]\n */\nconst Framebuffer = function (_cgl, _w, _h, options)\n{\n    const cgl = _cgl;\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"Framebuffer\");\n    this.valid = true;\n\n    let depthTextureExt = cgl.gl.DEPTH_TEXTURE;\n    if (!depthTextureExt) depthTextureExt = cgl.enableExtension(\"WEBGL_depth_texture\");\n    if (!depthTextureExt) depthTextureExt = cgl.enableExtension(\"WEBKIT_WEBGL_depth_texture\");\n    if (!depthTextureExt) depthTextureExt = cgl.enableExtension(\"MOZ_WEBGL_depth_texture\");\n\n    if (!depthTextureExt)\n    {\n        cgl.exitError(\"NO_DEPTH_TEXTURE\", \"no depth texture support\");\n        // return;\n    }\n\n    let width = _w || 512;\n    let height = _h || 512;\n\n    options = options || {\n        \"isFloatingPointTexture\": false,\n    };\n\n    if (!options.hasOwnProperty(\"clear\")) options.clear = true;\n    if (!options.hasOwnProperty(\"filter\")) options.filter = _cgl_texture__WEBPACK_IMPORTED_MODULE_1__.Texture.FILTER_LINEAR;\n\n    const texture = new _cgl_texture__WEBPACK_IMPORTED_MODULE_1__.Texture(cgl, {\n        \"isFloatingPointTexture\": options.isFloatingPointTexture,\n        \"filter\": options.filter,\n        \"wrap\": options.wrap || _cgl_texture__WEBPACK_IMPORTED_MODULE_1__.Texture.CLAMP_TO_EDGE\n    });\n\n    let textureDepth = null;\n    if (depthTextureExt)\n    {\n        textureDepth = new _cgl_texture__WEBPACK_IMPORTED_MODULE_1__.Texture(cgl, {\n            \"isDepthTexture\": true,\n        });\n    }\n    this._options = options;\n\n    const frameBuf = cgl.gl.createFramebuffer();\n    const depthBuffer = cgl.gl.createRenderbuffer();\n\n    this.getWidth = function ()\n    {\n        return width;\n    };\n    this.getHeight = function ()\n    {\n        return height;\n    };\n\n    /**\n     * get native gl framebuffer\n     * @function getGlFrameBuffer\n     * @memberof Framebuffer\n     * @returns {Object} framebuffer\n     */\n    this.getGlFrameBuffer = function ()\n    {\n        return frameBuf;\n    };\n\n    /**\n     * get depth renderbuffer\n     * @function getDepthRenderBuffer\n     * @memberof Framebuffer\n     * @returns {Object} renderbuffer\n     */\n    this.getDepthRenderBuffer = function ()\n    {\n        return depthBuffer;\n    };\n\n    /**\n     * get color texture\n     * @function getTextureColor\n     * @memberof Framebuffer\n     * @returns {Texture} rgba texture\n     */\n    this.getTextureColor = function ()\n    {\n        return texture;\n    };\n\n    /**\n     * get depth texture\n     * @function getTextureDepth\n     * @memberof Framebuffer\n     * @returns {Texture} depth texture\n     */\n    this.getTextureDepth = function ()\n    {\n        return textureDepth;\n    };\n\n    this.setFilter = function (f)\n    {\n        texture.filter = f;\n        texture.setSize(width, height);\n    };\n\n    this.setSize = function (w, h)\n    {\n        if (w < 2) w = 2;\n        if (h < 2) h = 2;\n\n        width = Math.ceil(w);\n        height = Math.ceil(h);\n\n        cgl.profileData.profileFrameBuffercreate++;\n\n        cgl.gl.bindFramebuffer(cgl.gl.FRAMEBUFFER, frameBuf);\n        cgl.gl.bindRenderbuffer(cgl.gl.RENDERBUFFER, depthBuffer);\n\n        texture.setSize(width, height);\n        if (textureDepth) textureDepth.setSize(width, height);\n\n        // if(depthTextureExt) cgl.gl.renderbufferStorage(cgl.gl.RENDERBUFFER, cgl.gl.DEPTH_COMPONENT16, width,height);\n        if (depthTextureExt) cgl.gl.renderbufferStorage(cgl.gl.RENDERBUFFER, cgl.gl.DEPTH_COMPONENT16, width, height);\n\n        cgl.gl.framebufferTexture2D(cgl.gl.FRAMEBUFFER, cgl.gl.COLOR_ATTACHMENT0, cgl.gl.TEXTURE_2D, texture.tex, 0);\n\n        if (depthTextureExt)\n        {\n            cgl.gl.framebufferRenderbuffer(cgl.gl.FRAMEBUFFER, cgl.gl.DEPTH_ATTACHMENT, cgl.gl.RENDERBUFFER, depthBuffer);\n            cgl.gl.framebufferTexture2D(\n                cgl.gl.FRAMEBUFFER,\n                cgl.gl.DEPTH_ATTACHMENT, // safari needs DEPTH_ATTACHMENT NOT DEPTH_ATTACHMENT16\n                // cgl.gl.DEPTH_COMPONENT16,\n                cgl.gl.TEXTURE_2D,\n                textureDepth.tex,\n                0,\n            );\n        }\n\n        if (!cgl.gl.isFramebuffer(frameBuf)) throw new Error(\"Invalid framebuffer\");\n        const status = cgl.gl.checkFramebufferStatus(cgl.gl.FRAMEBUFFER);\n\n        switch (status)\n        {\n        case cgl.gl.FRAMEBUFFER_COMPLETE:\n            break;\n        case cgl.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            this._log.warn(\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT...\", width, height, texture.tex, depthBuffer);\n            this.valid = false;\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT\");\n        case cgl.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            this._log.warn(\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\");\n            this.valid = false;\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\");\n        case cgl.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            this._log.warn(\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\");\n            this.valid = false;\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS\");\n        case cgl.gl.FRAMEBUFFER_UNSUPPORTED:\n            this._log.warn(\"FRAMEBUFFER_UNSUPPORTED\");\n            this.valid = false;\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED\");\n        case 0x8CDB:\n            this._log.warn(\"Incomplete: FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER from ext. Or Safari/iOS undefined behaviour.\");\n            this.valid = false;\n            break;\n        default:\n            this._log.warn(\"incomplete framebuffer\", status);\n            this.valid = false;\n            throw new Error(\"Incomplete framebuffer: \" + status);\n            // throw(\"Incomplete framebuffer: \" + status);\n        }\n\n        cgl.gl.bindTexture(cgl.gl.TEXTURE_2D, null);\n        cgl.gl.bindRenderbuffer(cgl.gl.RENDERBUFFER, null);\n        cgl.gl.bindFramebuffer(cgl.gl.FRAMEBUFFER, null);\n    };\n\n    this.renderStart = function ()\n    {\n        cgl.pushModelMatrix();\n        cgl.gl.bindFramebuffer(cgl.gl.FRAMEBUFFER, frameBuf);\n        cgl.pushGlFrameBuffer(frameBuf);\n        cgl.pushFrameBuffer(this);\n\n        cgl.pushPMatrix();\n        cgl.gl.viewport(0, 0, width, height);\n\n        if (this._options.clear)\n        {\n            cgl.gl.clearColor(0, 0, 0, 0);\n            cgl.gl.clear(cgl.gl.COLOR_BUFFER_BIT | cgl.gl.DEPTH_BUFFER_BIT);\n        }\n    };\n\n    this.renderEnd = function ()\n    {\n        cgl.popPMatrix();\n        cgl.gl.bindFramebuffer(cgl.gl.FRAMEBUFFER, cgl.popGlFrameBuffer());\n        cgl.popFrameBuffer();\n\n        cgl.popModelMatrix();\n        cgl.resetViewPort();\n    };\n\n\n    this.delete = function ()\n    {\n        texture.delete();\n        this.valid = false;\n        if (textureDepth) textureDepth.delete();\n        cgl.gl.deleteRenderbuffer(depthBuffer);\n        cgl.gl.deleteFramebuffer(frameBuf);\n    };\n\n    this.dispose = this.delete;\n\n    this.setSize(width, height);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_framebuffer.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_framebuffer2.js":
/*!******************************************!*\
  !*** ./src/core/cgl/cgl_framebuffer2.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Framebuffer2\": () => (/* binding */ Framebuffer2)\n/* harmony export */ });\n/* harmony import */ var _cgl_texture__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cgl_texture */ \"./src/core/cgl/cgl_texture.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core_logger */ \"./src/core/core_logger.js\");\n// * see framebuffer1\n\n\n\n\n\n\nconst Framebuffer2 = function (cgl, w, h, options)\n{\n    if (cgl.glVersion == 1) return console.log(\"framebuffer2 used on webgl1\");\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"cgl_framebuffer2\");\n    this.Framebuffer2DrawTargetsDefault = null;\n    this.Framebuffer2BlittingFramebuffer = null;\n    this.Framebuffer2FinalFramebuffer = null;\n    this._cgl = cgl;\n\n    this._cgl.printError(\"before framebuffer2 constructor\");\n\n    this._width = 0;\n    this._height = 0;\n    this.valid = true;\n\n    this._depthRenderbuffer = null;\n    this._frameBuffer = null;\n    this._textureFrameBuffer = null;\n    this._colorRenderbuffers = [];\n    this._drawTargetArray = [];\n    this._disposed = false;\n\n    if (!this.Framebuffer2BlittingFramebuffer) this.Framebuffer2BlittingFramebuffer = cgl.gl.createFramebuffer();\n    if (!this.Framebuffer2FinalFramebuffer) this.Framebuffer2FinalFramebuffer = cgl.gl.createFramebuffer();\n\n    if (!this.Framebuffer2DrawTargetsDefault) this.Framebuffer2DrawTargetsDefault = [cgl.gl.COLOR_ATTACHMENT0];\n\n    this._options = options || {\n        \"isFloatingPointTexture\": false,\n    };\n\n    // this._cgl.printError(\"fb2 before\");\n\n    this.name = this._options.name || \"unknown\";\n\n    this._cgl.profileData.addHeavyEvent(\"framebuffer create\", this.name);\n\n    if (!this._options.hasOwnProperty(\"numRenderBuffers\")) this._options.numRenderBuffers = 1;\n    if (!this._options.hasOwnProperty(\"depth\")) this._options.depth = true;\n    if (!this._options.hasOwnProperty(\"clear\")) this._options.clear = true;\n    if (!this._options.hasOwnProperty(\"multisampling\"))\n    {\n        this._options.multisampling = false;\n        this._options.multisamplingSamples = 0;\n    }\n\n    if (this._options.multisamplingSamples)\n    {\n        if (this._cgl.glSlowRenderer) this._options.multisamplingSamples = 0;\n        if (!this._cgl.gl.MAX_SAMPLES) this._options.multisamplingSamples = 0;\n        else this._options.multisamplingSamples = Math.min(this._cgl.maxSamples, this._options.multisamplingSamples);\n    }\n\n    if (!this._options.hasOwnProperty(\"filter\")) this._options.filter = _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture.FILTER_LINEAR;\n    if (!this._options.hasOwnProperty(\"wrap\")) this._options.wrap = _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture.WRAP_REPEAT;\n\n    this._numRenderBuffers = this._options.numRenderBuffers;\n    this._colorTextures = [];\n\n    if (!options.pixelFormat)\n    {\n        if (options.isFloatingPointTexture) this._options.pixelFormat = _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture.PFORMATSTR_RGBA32F;\n        else this._options.pixelFormat = _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture.PFORMATSTR_RGBA8UB;\n    }\n\n\n    for (let i = 0; i < this._numRenderBuffers; i++)\n    {\n        this._colorTextures[i] = new _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture(cgl, {\n            \"name\": \"fb2 \" + this.name + \" \" + i,\n            \"isFloatingPointTexture\": this._options.isFloatingPointTexture,\n            \"pixelFormat\": this._options.pixelFormat,\n            \"filter\": this._options.filter,\n            \"wrap\": this._options.wrap,\n        });\n    }\n\n\n\n    let fil = _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture.FILTER_NEAREST;\n    if (this._options.shadowMap) fil = _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture.FILTER_LINEAR;\n\n    const defaultTexSize = 512;\n\n    if (this._options.depth)\n    {\n        this._textureDepth = new _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture(cgl,\n            {\n                \"name\": \"fb2 depth \" + this.name,\n                \"isDepthTexture\": true,\n                \"filter\": fil,\n                \"shadowMap\": this._options.shadowMap || false,\n                \"width\": w || defaultTexSize,\n                \"height\": h || defaultTexSize,\n            });\n    }\n\n    if (cgl.aborted) return;\n\n    this.setSize(w || defaultTexSize, h || defaultTexSize);\n\n    this._cgl.printError(\"framebuffer2 constructor\");\n};\n\nFramebuffer2.prototype.getWidth = function ()\n{\n    return this._width;\n};\nFramebuffer2.prototype.getHeight = function ()\n{\n    return this._height;\n};\n\nFramebuffer2.prototype.getGlFrameBuffer = function ()\n{\n    return this._frameBuffer;\n};\n\nFramebuffer2.prototype.getDepthRenderBuffer = function ()\n{\n    return this._depthRenderbuffer;\n};\n\nFramebuffer2.prototype.getTextureColor = function ()\n{\n    return this._colorTextures[0];\n};\n\nFramebuffer2.prototype.getTextureColorNum = function (i)\n{\n    return this._colorTextures[i];\n};\n\nFramebuffer2.prototype.getTextureDepth = function ()\n{\n    return this._textureDepth;\n};\n\nFramebuffer2.prototype.setFilter = function (f)\n{\n    for (let i = 0; i < this._numRenderBuffers; i++)\n    {\n        this._colorTextures[i].filter = f;\n        this._colorTextures[i].setSize(this._width, this._height);\n    }\n};\n\nFramebuffer2.prototype.delete = Framebuffer2.prototype.dispose = function ()\n{\n    this._disposed = true;\n    let i = 0;\n    for (i = 0; i < this._numRenderBuffers; i++) this._colorTextures[i].delete();\n    // this._texture.delete();\n    if (this._textureDepth) this._textureDepth.delete();\n    for (i = 0; i < this._numRenderBuffers; i++) this._cgl.gl.deleteRenderbuffer(this._colorRenderbuffers[i]);\n    this._cgl.gl.deleteRenderbuffer(this._depthRenderbuffer);\n    this._cgl.gl.deleteFramebuffer(this._frameBuffer);\n    this._cgl.gl.deleteFramebuffer(this._textureFrameBuffer);\n};\n\nFramebuffer2.prototype.setSize = function (w, h)\n{\n    if (this._disposed) return this._log.warn(\"disposed framebuffer setsize...\");\n    this._cgl.profileData.addHeavyEvent(\"framebuffer resize\", this.name);\n\n    let i = 0;\n    this._width = Math.floor(w);\n    this._height = Math.floor(h);\n    this._width = Math.min(this._width, this._cgl.maxTexSize);\n    this._height = Math.min(this._height, this._cgl.maxTexSize);\n\n    this._cgl.profileData.profileFrameBuffercreate++;\n\n    if (this._frameBuffer)\n    {\n        for (i = 0; i < this._numRenderBuffers; i++) this._cgl.gl.deleteRenderbuffer(this._colorRenderbuffers[i]);\n        // this._cgl.gl.deleteRenderbuffer(this._colorRenderbuffer);\n        this._cgl.gl.deleteRenderbuffer(this._depthRenderbuffer);\n        this._cgl.gl.deleteFramebuffer(this._frameBuffer);\n        this._cgl.gl.deleteFramebuffer(this._textureFrameBuffer);\n    }\n\n    this._frameBuffer = this._cgl.gl.createFramebuffer();\n    this._textureFrameBuffer = this._cgl.gl.createFramebuffer();\n\n    const depth = this._options.depth;\n\n    for (i = 0; i < this._numRenderBuffers; i++)\n    {\n        this._colorTextures[i].setSize(this._width, this._height);\n    }\n\n\n    for (i = 0; i < this._numRenderBuffers; i++)\n    {\n        const renderBuffer = this._cgl.gl.createRenderbuffer();\n\n        // color renderbuffer\n\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuffer);\n        this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, renderBuffer);\n\n        const info = _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture.setUpGlPixelFormat(this._cgl, this._options.pixelFormat);\n        let internFormat = info.glInternalFormat;\n\n        // if (this._options.isFloatingPointTexture)\n        // {\n        if (CGL.Texture.isPixelFormatHalfFloat(info.pixelFormat))\n        {\n            const extcb = this._cgl.enableExtension(\"EXT_color_buffer_half_float\");\n\n            if (!this._cgl.enableExtension(\"OES_texture_float_linear\"))\n            {\n                this._options.filter = _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture.FILTER_NEAREST;\n                this.setFilter(this._options.filter);\n            }\n        }\n        else if (CGL.Texture.isPixelFormatFloat(info.pixelFormat))\n        {\n            if (!this._cgl.enableExtension(\"OES_texture_float_linear\"))\n            {\n                console.log(\"no linear pixelformat,using nearest\");\n                this._options.filter = _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture.FILTER_NEAREST;\n                this.setFilter(this._options.filter);\n            }\n        }\n        // else if (info.pixelFormat == Texture.PFORMATSTR_RGBA32F || info.pixelFormat == Texture.PFORMATSTR_R11FG11FB10F\n        // else if (info.pixelFormat == Texture.PFORMATSTR_RGBA32F || info.pixelFormat == Texture.PFORMATSTR_R11FG11FB10F\n        // else if (info.pixelFormat == Texture.PFORMATSTR_RG16F)\n        // {\n        //     const extcb = this._cgl.enableExtension(\"EXT_color_buffer_float\");\n\n        //     if (!this._cgl.enableExtension(\"OES_texture_float_linear\"))\n        //     {\n        //         console.log(\"no linear pixelformat,switching to nearest\");\n        //         this._options.filter = Texture.FILTER_NEAREST;\n        //         this.setFilter(this._options.filter);\n        //     }\n        // }\n        // }\n\n        if (this._options.multisampling && this._options.multisamplingSamples)\n        {\n            this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER, this._options.multisamplingSamples, internFormat, this._width, this._height);\n        }\n        else\n        {\n            this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER, internFormat, this._width, this._height);\n        }\n\n        this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0 + i, this._cgl.gl.RENDERBUFFER, renderBuffer);\n        this._colorRenderbuffers[i] = renderBuffer;\n    }\n\n    // this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER, this._textureFrameBuffer);\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._textureFrameBuffer);\n\n    for (i = 0; i < this._numRenderBuffers; i++)\n    {\n        this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0 + i, this._cgl.gl.TEXTURE_2D, this._colorTextures[i].tex, 0);\n    }\n\n    if (this._options.depth)\n    {\n        this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.DEPTH_ATTACHMENT, this._cgl.gl.TEXTURE_2D, this._textureDepth.tex, 0);\n    }\n\n    // depth renderbuffer\n\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuffer);\n\n\n    let depthType = this._cgl.gl.DEPTH_COMPONENT32F;\n\n    if (this._cgl.glSlowRenderer) depthType = this._cgl.gl.DEPTH_COMPONENT16;\n    if (depth)\n    {\n        this._textureDepth.setSize(this._width, this._height);\n        this._depthRenderbuffer = this._cgl.gl.createRenderbuffer();\n\n        this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, this._depthRenderbuffer);\n        if (this._options.isFloatingPointTexture)\n        {\n            if (this._options.multisampling) this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER, this._options.multisamplingSamples, depthType, this._width, this._height);\n            else this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER, depthType, this._width, this._height);\n        }\n        else if (this._options.multisampling)\n        {\n            this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER, this._options.multisamplingSamples, depthType, this._width, this._height);\n            // this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,depthType, this._width, this._height);\n        }\n        else\n        {\n            this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER, depthType, this._width, this._height);\n        }\n\n        this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.DEPTH_ATTACHMENT, this._cgl.gl.RENDERBUFFER, this._depthRenderbuffer);\n    }\n\n    // this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n    // this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._textureFrameBuffer);\n\n    this._drawTargetArray.length = 0;\n    for (i = 0; i < this._numRenderBuffers; i++) this._drawTargetArray.push(this._cgl.gl.COLOR_ATTACHMENT0 + i);\n\n    // this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n\n\n    if (!this._cgl.gl.isFramebuffer(this._textureFrameBuffer)) this._log.warn(\"invalid framebuffer\");// throw new Error(\"Invalid framebuffer\");\n    const status = this._cgl.gl.checkFramebufferStatus(this._cgl.gl.FRAMEBUFFER);\n\n    if (status != this._cgl.gl.FRAMEBUFFER_COMPLETE)\n    {\n        this._log.error(\"framebuffer incomplete: \" + this.name, this);\n        switch (status)\n        {\n        case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            this._log.warn(\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT...\", this);\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT\");\n        case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            this._log.warn(\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\");\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\");\n        case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            this._log.warn(\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\");\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS\");\n        case this._cgl.gl.FRAMEBUFFER_UNSUPPORTED:\n            this._log.warn(\"FRAMEBUFFER_UNSUPPORTED\");\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED\");\n        default:\n            this.valid = false;\n            this._log.warn(\"incomplete framebuffer\", status, this._frameBuffer);\n            this._cgl.printError();\n            this._cgl.exitError(\"Framebuffer incomplete...\");\n\n            this._frameBuffer = null;\n            // debugger;\n            throw new Error(\"Incomplete framebuffer: \" + status);\n        // throw(\"Incomplete framebuffer: \" + status);\n        }\n    }\n\n\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n    this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, null);\n\n    // this._cgl.printError(\"fb setsize\");\n};\n\nFramebuffer2.prototype.renderStart = function ()\n{\n    if (this._disposed) return this._log.warn(\"disposed framebuffer renderStart...\");\n    this._cgl.checkFrameStarted(\"fb2 renderstart\");\n    this._cgl.pushModelMatrix(); // needed ??\n\n\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuffer);\n    this._cgl.pushGlFrameBuffer(this._frameBuffer);\n    this._cgl.pushFrameBuffer(this);\n\n    this._cgl.pushPMatrix();\n    // this._cgl.gl.viewport(0, 0, this._width, this._height);\n    this._cgl.pushViewPort(0, 0, this._width, this._height);\n\n    this._cgl.gl.drawBuffers(this._drawTargetArray);\n\n\n    // for (let i = 0; i <= this._numRenderBuffers; i++)\n    // {\n    //     this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0 + i, this._cgl.gl.RENDERBUFFER, this._colorRenderbuffers[i]);\n    //     this._cgl.gl.clearBufferfv(this._cgl.gl.COLOR, i, [1.0, 0.0, 0.0, 0.0]);\n    // }\n\n    // this.clear();\n    if (this._options.clear)\n    {\n        this._cgl.gl.clearColor(0, 0, 0, 0);\n        this._cgl.gl.clear(this._cgl.gl.COLOR_BUFFER_BIT | this._cgl.gl.DEPTH_BUFFER_BIT);\n    }\n};\n\nFramebuffer2.prototype.clear = function ()\n{\n    if (this._numRenderBuffers <= 1)\n    {\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER, this._frameBuffer);\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER, this._textureFrameBuffer);\n    }\n    else this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuffer);\n\n    this._cgl.gl.drawBuffers(this._drawTargetArray);\n\n    for (let i = 0; i < this._numRenderBuffers; i++)\n    {\n        this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0 + i, this._cgl.gl.TEXTURE_2D, this._colorTextures[i].tex, 0);\n        this._cgl.gl.clearBufferfv(this._cgl.gl.COLOR, i, [0.0, 0.0, 0.0, 0.0]);\n    }\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n};\n\nFramebuffer2.prototype.renderEnd = function ()\n{\n    if (this._disposed) return this._log.warn(\"disposed framebuffer renderEnd...\");\n    this._cgl.popPMatrix();\n\n    this._cgl.profileData.profileFramebuffer++;\n\n    if (this._numRenderBuffers <= 1)\n    {\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER, this._frameBuffer);\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER, this._textureFrameBuffer);\n\n        this._cgl.gl.clearBufferfv(this._cgl.gl.COLOR, 0, [0.0, 0.0, 0.0, 1.0]);\n        this._cgl.gl.blitFramebuffer(0, 0, this._width, this._height, 0, 0, this._width, this._height, this._cgl.gl.COLOR_BUFFER_BIT | this._cgl.gl.DEPTH_BUFFER_BIT, this._cgl.gl.NEAREST);\n    }\n    else\n    {\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this.Framebuffer2BlittingFramebuffer);\n        this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.DEPTH_ATTACHMENT, this._cgl.gl.RENDERBUFFER, this._depthRenderbuffer);\n\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this.Framebuffer2FinalFramebuffer);\n        this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.DEPTH_ATTACHMENT, this._cgl.gl.TEXTURE_2D, this._textureDepth.tex, 0);\n\n        // console.log(\"fb this._numRenderBuffers\", this._numRenderBuffers);\n        for (let i = 0; i < this._numRenderBuffers; i++)\n        {\n            this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this.Framebuffer2BlittingFramebuffer);\n            this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0, this._cgl.gl.RENDERBUFFER, this._colorRenderbuffers[i]);\n\n            this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this.Framebuffer2FinalFramebuffer);\n            this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0, this._cgl.gl.TEXTURE_2D, this._colorTextures[i].tex, 0);\n\n            this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n\n            this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER, this.Framebuffer2BlittingFramebuffer);\n            this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER, this.Framebuffer2FinalFramebuffer);\n\n            // this._cgl.gl.clearBufferfv(this._cgl.gl.COLOR, i, [0.0, 0.0, 0.0, 1.0]);\n\n            let flags = this._cgl.gl.COLOR_BUFFER_BIT;\n            if (i == 0) flags |= this._cgl.gl.DEPTH_BUFFER_BIT;\n\n            this._cgl.gl.blitFramebuffer(0, 0, this._width, this._height, 0, 0, this._width, this._height, flags, this._cgl.gl.NEAREST);\n        }\n    }\n\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.popGlFrameBuffer());\n    this._cgl.popFrameBuffer();\n\n    this._cgl.popModelMatrix();\n    // this._cgl.resetViewPort();\n    this._cgl.popViewPort();\n\n\n    if (this._colorTextures[0].filter == _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture.FILTER_MIPMAP)\n    {\n        for (let i = 0; i < this._numRenderBuffers; i++)\n        {\n            this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, this._colorTextures[i].tex);\n            this._colorTextures[i].updateMipMap();\n            this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, null);\n        }\n    }\n};\n\n\n\n/// ///////\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_framebuffer2.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_marker.js":
/*!************************************!*\
  !*** ./src/core/cgl/cgl_marker.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Marker\": () => (/* binding */ Marker),\n/* harmony export */   \"WireCube\": () => (/* binding */ WireCube),\n/* harmony export */   \"WirePoint\": () => (/* binding */ WirePoint)\n/* harmony export */ });\n/* harmony import */ var _cg_cg_geom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cg/cg_geom */ \"./src/core/cg/cg_geom.js\");\n/* harmony import */ var _cgl_mesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cgl_mesh */ \"./src/core/cgl/cgl_mesh.js\");\n/* harmony import */ var _cgl_shader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cgl_shader */ \"./src/core/cgl/cgl_shader.js\");\n/* harmony import */ var _cgl_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cgl_utils */ \"./src/core/cgl/cgl_utils.js\");\n// import { vec3, mat4 } from \"gl-matrix\";\n\n\n\n\n\n\nconst Marker = function (_cgl)\n{\n    const geom = new _cg_cg_geom__WEBPACK_IMPORTED_MODULE_0__.Geometry(\"marker\");\n    geom.setPointVertices(\n        [\n            0.00001, 0, 0, 1, 0, 0,\n            0, 0.00001, 0, 0, 1, 0,\n            0, 0, 0.00001, 0, 0, 1,\n        ]\n    );\n    const mesh = new _cgl_mesh__WEBPACK_IMPORTED_MODULE_1__.Mesh(_cgl, geom, _cgl.gl.LINES);\n    mesh.setGeom(geom);\n\n    const shader = new _cgl_shader__WEBPACK_IMPORTED_MODULE_2__.Shader(_cgl, \"markermaterial\");\n\n    const frag = \"\"\n        .endl() + \"precision highp float;\"\n        .endl() + \"IN vec3 axisColor;\"\n\n        .endl() + \"void main()\"\n        .endl() + \"{\"\n        .endl() + \"    vec4 col=vec4(axisColor,1.0);\"\n        .endl() + \"    outColor = col;\"\n        .endl() + \"}\";\n\n    const vert = \"\"\n        .endl() + \"IN vec3 vPosition;\"\n        .endl() + \"UNI mat4 projMatrix;\"\n        .endl() + \"UNI mat4 mvMatrix;\"\n        .endl() + \"OUT vec3 axisColor;\"\n\n        .endl() + \"void main()\"\n        .endl() + \"{\"\n        .endl() + \"   vec4 pos=vec4(vPosition, 1.0);\"\n        .endl() + \"   if(pos.x!=0.0)axisColor=vec3(1.0,0.3,0.0);\"\n        .endl() + \"   if(pos.y!=0.0)axisColor=vec3(0.0,1.0,0.2);\"\n        .endl() + \"   if(pos.z!=0.0)axisColor=vec3(0.0,0.5,1.0);\"\n\n        .endl() + \"   gl_Position = projMatrix * mvMatrix * pos;\"\n        .endl() + \"}\";\n\n    shader.setSource(vert, frag);\n\n    this._vScale = vec3.create();\n\n    this.draw = function (cgl, _size, depthTest)\n    {\n        const size = _size || 2;\n        cgl.pushModelMatrix();\n\n        cgl.pushShader(shader);\n\n        vec3.set(this._vScale, size, size, size);\n        mat4.scale(cgl.mvMatrix, cgl.mvMatrix, this._vScale);\n\n        // cgl.gl.disable(cgl.gl.DEPTH_TEST);\n        cgl.pushDepthTest(depthTest == true);\n\n        mesh.render(cgl.getShader());\n\n        // cgl.gl.enable(cgl.gl.DEPTH_TEST);\n        cgl.popDepthTest();\n        cgl.popShader();\n\n        cgl.popModelMatrix();\n    };\n};\n\n\nconst WirePoint = function (cgl)\n{\n    const buffer = cgl.gl.createBuffer();\n    const vScale = vec3.create();\n\n    function bufferData()\n    {\n        const points = [];\n        const segments = 24;\n        let i = 0, degInRad = 0;\n        const radius = 0.5;\n\n        for (i = 0; i <= Math.round(segments); i++)\n        {\n            degInRad = (360.0 / Math.round(segments)) * i * _cgl_utils__WEBPACK_IMPORTED_MODULE_3__.DEG2RAD;\n            points.push(Math.cos(degInRad) * radius);\n            points.push(0);\n            points.push(Math.sin(degInRad) * radius);\n        }\n\n        for (i = 0; i <= Math.round(segments); i++)\n        {\n            degInRad = (360.0 / Math.round(segments)) * i * _cgl_utils__WEBPACK_IMPORTED_MODULE_3__.DEG2RAD;\n            points.push(Math.cos(degInRad) * radius);\n            points.push(Math.sin(degInRad) * radius);\n            points.push(0);\n        }\n\n        for (i = 0; i <= Math.round(segments); i++)\n        {\n            degInRad = (360.0 / Math.round(segments)) * i * _cgl_utils__WEBPACK_IMPORTED_MODULE_3__.DEG2RAD;\n            points.push(0);\n            points.push(Math.cos(degInRad) * radius);\n            points.push(Math.sin(degInRad) * radius);\n        }\n\n        cgl.gl.bindBuffer(cgl.gl.ARRAY_BUFFER, buffer);\n        cgl.gl.bufferData(cgl.gl.ARRAY_BUFFER, new Float32Array(points), cgl.gl.STATIC_DRAW);\n        buffer.itemSize = 3;\n        buffer.numItems = points.length / buffer.itemSize;\n    }\n\n    this.render = function (_cgl, _size)\n    {\n        _cgl.pushModelMatrix();\n\n        vec3.set(vScale, _size, _size, _size);\n        mat4.scale(_cgl.mvMatrix, _cgl.mvMatrix, vScale);\n\n        const shader = _cgl.getShader();\n\n        if (shader)\n        {\n            shader.bind();\n            _cgl.gl.bindBuffer(_cgl.gl.ARRAY_BUFFER, buffer);\n\n            _cgl.gl.vertexAttribPointer(shader.getAttrVertexPos(), buffer.itemSize, _cgl.gl.FLOAT, false, 0, 0);\n            _cgl.gl.enableVertexAttribArray(shader.getAttrVertexPos());\n\n            _cgl.gl.bindBuffer(_cgl.gl.ARRAY_BUFFER, buffer);\n            _cgl.gl.drawArrays(_cgl.gl.LINE_STRIP, 0, buffer.numItems);\n        }\n\n        _cgl.popModelMatrix();\n    };\n\n    bufferData();\n};\n\n\nconst WireCube = function (cgl)\n{\n    const buffer = cgl.gl.createBuffer();\n    const vScale = vec3.create();\n\n    function bufferData()\n    {\n        const points = [];\n        const tc = [];\n        const norms = [];\n        const segments = 24;\n        const radius = 0.5;\n\n        points.push(-1, -1, 1);\n        points.push(1, -1, 1);\n        points.push(1, 1, 1);\n        points.push(-1, 1, 1);\n        points.push(-1, -1, 1);\n\n        points.push(-1, -1, -1);\n        points.push(1, -1, -1);\n        points.push(1, 1, -1);\n        points.push(-1, 1, -1);\n        points.push(-1, -1, -1);\n\n        points.push(-1, -1, -1);\n        points.push(-1, 1, -1);\n        points.push(-1, 1, 1);\n        points.push(-1, -1, 1);\n        points.push(-1, -1, -1);\n\n        points.push(1, -1, -1);\n        points.push(1, 1, -1);\n        points.push(1, 1, 1);\n        points.push(1, -1, 1);\n        points.push(1, -1, -1);\n\n        cgl.gl.bindBuffer(cgl.gl.ARRAY_BUFFER, buffer);\n        cgl.gl.bufferData(cgl.gl.ARRAY_BUFFER, new Float32Array(points), cgl.gl.STATIC_DRAW);\n        buffer.itemSize = 3;\n        buffer.numItems = points.length / buffer.itemSize;\n    }\n\n    this.render = function (_cgl, sizeX, sizeY, sizeZ)\n    {\n        _cgl.pushModelMatrix();\n\n        vec3.set(vScale, sizeX || 1, sizeY || 1, sizeZ || 1);\n        mat4.scale(_cgl.mvMatrix, _cgl.mvMatrix, vScale);\n\n        const shader = _cgl.getShader();\n        if (shader)\n        {\n            shader.bind();\n            _cgl.gl.bindBuffer(_cgl.gl.ARRAY_BUFFER, buffer);\n\n            _cgl.gl.vertexAttribPointer(shader.getAttrVertexPos(), buffer.itemSize, _cgl.gl.FLOAT, false, 0, 0);\n            _cgl.gl.enableVertexAttribArray(shader.getAttrVertexPos());\n\n            _cgl.gl.bindBuffer(_cgl.gl.ARRAY_BUFFER, buffer);\n            _cgl.gl.drawArrays(_cgl.gl.LINE_STRIP, 0, buffer.numItems);\n        }\n\n        _cgl.popModelMatrix();\n    };\n\n    bufferData();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_marker.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_mesh.js":
/*!**********************************!*\
  !*** ./src/core/cgl/cgl_mesh.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MESH\": () => (/* binding */ MESH),\n/* harmony export */   \"Mesh\": () => (/* binding */ Mesh)\n/* harmony export */ });\n/* harmony import */ var _cgl_shader_uniform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cgl_shader_uniform */ \"./src/core/cgl/cgl_shader_uniform.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/core/cgl/constants.js\");\n/* harmony import */ var _cgl_mesh_feedback__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cgl_mesh_feedback */ \"./src/core/cgl/cgl_mesh_feedback.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core_logger */ \"./src/core/core_logger.js\");\n\n\n\n\n\nconst MESH = {};\nMESH.lastMesh = null;\n\n/**\n * webgl renderable 3d object\n * @external CGL\n * @namespace Mesh\n * @hideconstructor\n * @param {Context} cgl\n * @param {Geometry} geometry\n * @param {Number} [glPrimitive]\n * @class\n * @example\n * const cgl=this._cgl\n * const mesh=new CGL.Mesh(cgl, geometry);\n *\n * function render()\n * {\n *   mesh.render(cgl.getShader());\n * }\n */\nconst Mesh = function (_cgl, __geom, glPrimitive)\n{\n    this._cgl = _cgl;\n\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"cgl_mesh\");\n    this._bufVertexAttrib = null;\n    this._bufVerticesIndizes = this._cgl.gl.createBuffer();\n    this._indexType = this._cgl.gl.UNSIGNED_SHORT;\n    this._attributes = [];\n    this._attribLocs = {};\n    this._geom = null;\n    this._lastShader = null;\n    this._numInstances = 0;\n    this._glPrimitive = glPrimitive;\n    this._preWireframeGeom = null;\n    this.addVertexNumbers = false;\n    this._name = \"unknown\";\n\n    this.feedBackAttributes = [];\n    this.setGeom(__geom);\n\n    this._feedBacks = [];\n    this._feedBacksChanged = false;\n    this._transformFeedBackLoc = -1;\n    this._lastAttrUpdate = 0;\n\n    this.memFreed = false;\n\n    this._cgl.profileData.addHeavyEvent(\"mesh constructed\", this._name);\n\n    this._queryExt = null;\n\n    Object.defineProperty(this, \"numInstances\", {\n        get()\n        {\n            return this._numInstances;\n        },\n        set(v)\n        {\n            this.setNumInstances(v);\n        },\n    });\n};\n\nMesh.prototype.freeMem = function ()\n{\n    this.memFreed = true;\n\n    for (let i = 0; i < this._attributes.length; i++)\n    {\n        this._attributes[i].floatArray = null;\n    }\n};\n\n/**\n * @function updateVertices\n * @memberof Mesh\n * @instance\n * @description update vertices only from a geometry\n * @param {Geometry} geometry\n */\nMesh.prototype.updateVertices = function (geom)\n{\n    this.setAttribute(_constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_VERTEX_POSITION, geom.vertices, 3);\n    this._numVerts = geom.vertices.length / 3;\n};\n\nMesh.prototype.setAttributePointer = function (attrName, name, stride, offset)\n{\n    for (let i = 0; i < this._attributes.length; i++)\n    {\n        if (this._attributes[i].name == attrName)\n        {\n            if (!this._attributes[i].pointer) this._attributes[i].pointer = [];\n\n            this._attributes[i].pointer.push(\n                {\n                    \"loc\": -1,\n                    \"name\": name,\n                    \"stride\": stride,\n                    \"offset\": offset,\n                    \"instanced\": attrName == _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_INSTANCE_MMATRIX,\n                }\n            );\n        }\n    }\n};\n\nMesh.prototype.getAttribute = function (name)\n{\n    for (let i = 0; i < this._attributes.length; i++) if (this._attributes[i].name == name) return this._attributes[i];\n};\n\nMesh.prototype.setAttributeRange = function (attr, array, start, end)\n{\n    if (!attr) return;\n    if (!start && !end) return;\n\n    if (!attr.name)\n    {\n        this._log.stack(\"no attrname?!\");\n    }\n\n    this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, attr.buffer);\n    this._cgl.profileData.profileMeshAttributes += (end - start) || 0;\n\n    this._cgl.profileData.profileSingleMeshAttribute[this._name] = this._cgl.profileData.profileSingleMeshAttribute[this._name] || 0;\n    this._cgl.profileData.profileSingleMeshAttribute[this._name] += (end - start) || 0;\n\n    if (attr.numItems < array.length / attr.itemSize)\n    {\n        this._resizeAttr(array, attr);\n    }\n\n    if (end >= array.length - 1)\n    {\n        this._log.log(this._cgl.canvas.id + \" \" + attr.name + \" buffersubdata out of bounds ?\", array.length, end, start, attr);\n    }\n\n    if (this._cgl.glVersion == 1) this._cgl.gl.bufferSubData(this._cgl.gl.ARRAY_BUFFER, 0, array); // probably slow/ maybe create and array with only changed size ??\n    else this._cgl.gl.bufferSubData(this._cgl.gl.ARRAY_BUFFER, start * 4, array, start, (end - start));\n};\n\nMesh.prototype._resizeAttr = function (array, attr)\n{\n    if (attr.buffer)\n        this._cgl.gl.deleteBuffer(attr.buffer);\n\n    attr.buffer = this._cgl.gl.createBuffer();\n    this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, attr.buffer);\n    this._bufferArray(array, attr);\n    attr.numItems = array.length / attr.itemSize;// numItems;\n};\n\n\nMesh.prototype._bufferArray = function (array, attr)\n{\n    let floatArray = attr.floatArray || null;\n    if (!array) return;\n\n\n    if (this._cgl.debugOneFrame)\n    {\n        console.log(\"_bufferArray\", array.length, attr.name); // eslint-disable-line\n    }\n\n    if (!(array instanceof Float32Array))\n    {\n        if (attr && floatArray && floatArray.length == array.length)\n        {\n            floatArray.set(array);\n            // floatArray = floatArray;\n        }\n        else\n        {\n            floatArray = new Float32Array(array);\n\n            if (this._cgl.debugOneFrame)\n            {\n                console.log(\"_bufferArray create new float32array\", array.length, attr.name); // eslint-disable-line\n            }\n\n            if (array.length > 10000)\n            {\n                this._cgl.profileData.profileNonTypedAttrib++;\n                this._cgl.profileData.profileNonTypedAttribNames = \"(\" + this._name + \":\" + attr.name + \")\";\n            }\n        }\n    }\n    else floatArray = array;\n\n    attr.arrayLength = floatArray.length;\n    attr.floatArray = null;// floatArray;\n\n    this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER, floatArray, this._cgl.gl.DYNAMIC_DRAW);\n};\n\n/**\n * @function setAttribute\n * @description update attribute\n * @memberof Mesh\n * @instance\n * @param {String} attribute name\n * @param {Array} data\n * @param {Number} itemSize\n * @param {Object} options\n */\nMesh.prototype.addAttribute = Mesh.prototype.updateAttribute = Mesh.prototype.setAttribute = function (name, array, itemSize, options)\n{\n    if (!array)\n    {\n        this._log.error(\"mesh addAttribute - no array given! \" + name);\n        throw new Error();\n    }\n    let cb = null;\n    let instanced = false;\n    let i = 0;\n    const numItems = array.length / itemSize;\n\n    this._cgl.profileData.profileMeshAttributes += numItems || 0;\n\n    if (typeof options == \"function\")\n    {\n        cb = options;\n    }\n\n    if (typeof options == \"object\")\n    {\n        if (options.cb) cb = options.cb;\n        if (options.instanced) instanced = options.instanced;\n    }\n\n    if (name == _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_INSTANCE_MMATRIX) instanced = true;\n\n\n    for (i = 0; i < this._attributes.length; i++)\n    {\n        const attr = this._attributes[i];\n        if (attr.name == name)\n        {\n            if (attr.numItems === numItems)\n            {\n            }\n            else\n            {\n                // this._log.log(\"wrong buffer size\", this._geom.name, attr.name, attr.numItems, numItems);\n                this._resizeAttr(array, attr);\n            }\n\n            this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, attr.buffer);\n            this._bufferArray(array, attr);\n\n            return attr;\n        }\n    }\n\n    // create new buffer...\n\n    const buffer = this._cgl.gl.createBuffer();\n\n    this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, buffer);\n    // this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER, floatArray, this._cgl.gl.DYNAMIC_DRAW);\n\n    let type = this._cgl.gl.FLOAT;\n    if (options && options.type) type = options.type;\n    const attr = {\n        \"buffer\": buffer,\n        \"name\": name,\n        \"cb\": cb,\n        \"itemSize\": itemSize,\n        \"numItems\": numItems,\n        \"startItem\": 0,\n        \"instanced\": instanced,\n        \"type\": type\n    };\n\n    this._bufferArray(array, attr);\n\n    if (name == _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_VERTEX_POSITION) this._bufVertexAttrib = attr;\n    this._attributes.push(attr);\n    this._attribLocs = {};\n\n    return attr;\n};\n\nMesh.prototype.getAttributes = function ()\n{\n    return this._attributes;\n};\n\n/**\n * @function updateTexCoords\n * @description update texture coordinates only from a geometry\n * @memberof Mesh\n * @instance\n * @param {Geometry} geometry\n */\nMesh.prototype.updateTexCoords = function (geom)\n{\n    if (geom.texCoords && geom.texCoords.length > 0)\n    {\n        this.setAttribute(_constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_VERTEX_TEXCOORD, geom.texCoords, 2);\n    }\n    else\n    {\n        const tcBuff = new Float32Array(Math.round((geom.vertices.length / 3) * 2));\n        this.setAttribute(_constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_VERTEX_TEXCOORD, tcBuff, 2);\n    }\n};\n\n\n/**\n * @function updateNormals\n * @description update normals only from a geometry\n * @memberof Mesh\n * @instance\n * @param {Geometry} geometry\n */\nMesh.prototype.updateNormals = function (geom)\n{\n    if (geom.vertexNormals && geom.vertexNormals.length > 0)\n    {\n        this.setAttribute(_constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_VERTEX_NORMAL, geom.vertexNormals, 3);\n    }\n    else\n    {\n        const tcBuff = new Float32Array(Math.round((geom.vertices.length)));\n        this.setAttribute(_constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_VERTEX_NORMAL, tcBuff, 3);\n    }\n};\n\n\nMesh.prototype._setVertexNumbers = function (arr)\n{\n    if (!this._verticesNumbers || this._verticesNumbers.length != this._numVerts || arr)\n    {\n        if (arr) this._verticesNumbers = arr;\n        else\n        {\n            this._verticesNumbers = new Float32Array(this._numVerts);\n            for (let i = 0; i < this._numVerts; i++) this._verticesNumbers[i] = i;\n        }\n\n        this.setAttribute(_constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_VERTEX_NUMBER, this._verticesNumbers, 1, (attr, geom, shader) =>\n        {\n            if (!shader.uniformNumVertices) shader.uniformNumVertices = new _cgl_shader_uniform__WEBPACK_IMPORTED_MODULE_0__.Uniform(shader, \"f\", \"numVertices\", this._numVerts);\n            shader.uniformNumVertices.setValue(this._numVerts);\n\n            // console.log(\"this._numVerts\", this._numVerts, attr, shader.uniformNumVertices);\n        });\n    }\n};\n\n/**\n * @function setVertexIndices\n * @description update vertex indices / faces\n * @memberof Mesh\n * @instance\n * @param {array} vertIndices\n */\nMesh.prototype.setVertexIndices = function (vertIndices)\n{\n    if (!this._bufVerticesIndizes)\n    {\n        this._log.warn(\"no bufVerticesIndizes: \" + this._name);\n        return;\n    }\n    if (vertIndices.length > 0)\n    {\n        if (vertIndices instanceof Float32Array) this._log.warn(\"vertIndices float32Array: \" + this._name);\n\n        for (let i = 0; i < vertIndices.length; i++)\n        {\n            if (vertIndices[i] >= this._numVerts)\n            {\n                this._log.warn(\"invalid index in \" + this._name, i, vertIndices[i]);\n                return;\n            }\n        }\n\n        this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER, this._bufVerticesIndizes);\n\n        // todo cache this ?\n        // if(!this.vertIndicesTyped || this.vertIndicesTyped.length!=this._geom.verticesIndices.length)\n\n        if (vertIndices.length > 65535)\n        {\n            this.vertIndicesTyped = new Uint32Array(vertIndices);\n            this._indexType = this._cgl.gl.UNSIGNED_INT;\n        }\n        else\n        if (vertIndices instanceof Uint32Array)\n        {\n            this.vertIndicesTyped = vertIndices;\n            this._indexType = this._cgl.gl.UNSIGNED_INT;\n        }\n        else\n        if (!(vertIndices instanceof Uint16Array))\n        {\n            this.vertIndicesTyped = new Uint16Array(vertIndices);\n            this._indexType = this._cgl.gl.UNSIGNED_SHORT;\n        }\n        else this.vertIndicesTyped = vertIndices;\n\n        this._cgl.gl.bufferData(this._cgl.gl.ELEMENT_ARRAY_BUFFER, this.vertIndicesTyped, this._cgl.gl.DYNAMIC_DRAW);\n        this._bufVerticesIndizes.itemSize = 1;\n        this._bufVerticesIndizes.numItems = vertIndices.length;\n    }\n    else this._bufVerticesIndizes.numItems = 0;\n};\n\n/**\n * @function setGeom\n * @memberof Mesh\n * @instance\n * @description set geometry for mesh\n * @param {Geometry} geometry\n */\nMesh.prototype.setGeom = function (geom, removeRef)\n{\n    this._geom = geom;\n    if (geom.glPrimitive != null) this._glPrimitive = geom.glPrimitive;\n    if (this._geom && this._geom.name) this._name = \"mesh \" + this._geom.name;\n\n    MESH.lastMesh = null;\n    this._cgl.profileData.profileMeshSetGeom++;\n\n    this._disposeAttributes();\n\n    this.updateVertices(this._geom);\n    this.setVertexIndices(this._geom.verticesIndices);\n\n    if (this.addVertexNumbers) this._setVertexNumbers();\n\n    const geomAttribs = this._geom.getAttributes();\n\n    const attribAssoc = {\n        \"texCoords\": _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_VERTEX_TEXCOORD,\n        \"vertexNormals\": _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_VERTEX_NORMAL,\n        \"vertexColors\": _constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_VERTEX_COLOR,\n        \"tangents\": \"attrTangent\",\n        \"biTangents\": \"attrBiTangent\",\n    };\n\n    for (const index in geomAttribs)\n        if (geomAttribs[index].data && geomAttribs[index].data.length)\n            this.setAttribute(attribAssoc[index] || index, geomAttribs[index].data, geomAttribs[index].itemSize);\n\n\n    if (removeRef)\n    {\n        this._geom = null;\n    }\n};\n\nMesh.prototype._preBind = function (shader)\n{\n    for (let i = 0; i < this._attributes.length; i++)\n        if (this._attributes[i].cb)\n            this._attributes[i].cb(this._attributes[i], this._geom, shader);\n};\n\nMesh.prototype._checkAttrLengths = function ()\n{\n    if (this.memFreed) return;\n    // check length\n    for (let i = 0; i < this._attributes.length; i++)\n    {\n        if (this._attributes[i].arrayLength / this._attributes[i].itemSize < this._attributes[0].arrayLength / this._attributes[0].itemSize)\n        {\n            let name = \"unknown\";\n            if (this._geom)name = this._geom.name;\n            // this._log.warn(\n            //     name + \": \" + this._attributes[i].name +\n            //     \" wrong attr length. is:\", this._attributes[i].arrayLength / this._attributes[i].itemSize,\n            //     \" should be:\", this._attributes[0].arrayLength / this._attributes[0].itemSize,\n            // );\n        }\n    }\n};\n\nMesh.prototype._bind = function (shader)\n{\n    if (!shader.isValid()) return;\n\n\n    // if (shader != this._lastShader) this.unBind();\n    let attrLocs = [];\n    if (this._attribLocs[shader.id]) attrLocs = this._attribLocs[shader.id];\n    else this._attribLocs[shader.id] = attrLocs;\n\n    this._lastShader = shader;\n    if (shader.lastCompile > this._lastAttrUpdate || attrLocs.length != this._attributes.length)\n    {\n        this._lastAttrUpdate = shader.lastCompile;\n        for (let i = 0; i < this._attributes.length; i++) attrLocs[i] = -1;\n    }\n\n    for (let i = 0; i < this._attributes.length; i++)\n    {\n        const attribute = this._attributes[i];\n        if (attrLocs[i] == -1)\n        {\n            if (attribute._attrLocationLastShaderTime != shader.lastCompile)\n            {\n                attribute._attrLocationLastShaderTime = shader.lastCompile;\n                attrLocs[i] = this._cgl.glGetAttribLocation(shader.getProgram(), attribute.name);\n                // this._log.log('attribloc',attribute.name,attrLocs[i]);\n                this._cgl.profileData.profileAttrLoc++;\n            }\n        }\n\n        if (attrLocs[i] != -1)\n        {\n            this._cgl.gl.enableVertexAttribArray(attrLocs[i]);\n            this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, attribute.buffer);\n\n            if (attribute.instanced)\n            {\n                // todo: easier way to fill mat4 attribs...\n                if (attribute.itemSize <= 4)\n                {\n                    if (!attribute.itemSize || attribute.itemSize == 0) this._log.warn(\"instanced attrib itemsize error\", this._geom.name, attribute);\n\n                    this._cgl.gl.vertexAttribPointer(attrLocs[i], attribute.itemSize, attribute.type, false, attribute.itemSize * 4, 0);\n                    this._cgl.gl.vertexAttribDivisor(attrLocs[i], 1);\n                }\n                else if (attribute.itemSize == 16)\n                {\n                    const stride = 16 * 4;\n\n                    this._cgl.gl.vertexAttribPointer(attrLocs[i], 4, attribute.type, false, stride, 0);\n                    this._cgl.gl.enableVertexAttribArray(attrLocs[i] + 1);\n                    this._cgl.gl.vertexAttribPointer(attrLocs[i] + 1, 4, attribute.type, false, stride, 4 * 4 * 1);\n                    this._cgl.gl.enableVertexAttribArray(attrLocs[i] + 2);\n                    this._cgl.gl.vertexAttribPointer(attrLocs[i] + 2, 4, attribute.type, false, stride, 4 * 4 * 2);\n                    this._cgl.gl.enableVertexAttribArray(attrLocs[i] + 3);\n                    this._cgl.gl.vertexAttribPointer(attrLocs[i] + 3, 4, attribute.type, false, stride, 4 * 4 * 3);\n\n                    this._cgl.gl.vertexAttribDivisor(attrLocs[i], 1);\n                    this._cgl.gl.vertexAttribDivisor(attrLocs[i] + 1, 1);\n                    this._cgl.gl.vertexAttribDivisor(attrLocs[i] + 2, 1);\n                    this._cgl.gl.vertexAttribDivisor(attrLocs[i] + 3, 1);\n                }\n                else\n                {\n                    this._log.warn(\"unknown instance attrib size\", attribute.name);\n                }\n            }\n            else\n            {\n                if (!attribute.itemSize || attribute.itemSize == 0) this._log.warn(\"attrib itemsize error\", this._name, attribute);\n                this._cgl.gl.vertexAttribPointer(attrLocs[i], attribute.itemSize, attribute.type, false, attribute.itemSize * 4, 0);\n\n                if (attribute.pointer)\n                {\n                    for (let ip = 0; ip < attribute.pointer.length; ip++)\n                    {\n                        const pointer = attribute.pointer[ip];\n\n                        if (pointer.loc == -1)\n                            pointer.loc = this._cgl.glGetAttribLocation(shader.getProgram(), pointer.name);\n\n                        this._cgl.profileData.profileAttrLoc++;\n\n                        this._cgl.gl.enableVertexAttribArray(pointer.loc);\n                        this._cgl.gl.vertexAttribPointer(pointer.loc, attribute.itemSize, attribute.type, false, pointer.stride, pointer.offset);\n                    }\n                }\n                this.bindFeedback(attribute);\n            }\n        }\n    }\n\n    if (this._bufVerticesIndizes && this._bufVerticesIndizes.numItems !== 0) this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER, this._bufVerticesIndizes);\n};\n\nMesh.prototype.unBind = function ()\n{\n    const shader = this._lastShader;\n    this._lastShader = null;\n    if (!shader) return;\n\n    let attrLocs = [];\n    if (this._attribLocs[shader.id]) attrLocs = this._attribLocs[shader.id];\n    else this._attribLocs[shader.id] = attrLocs;\n\n    MESH.lastMesh = null;\n\n    for (let i = 0; i < this._attributes.length; i++)\n    {\n        if (this._attributes[i].instanced)\n        {\n            // todo: easier way to fill mat4 attribs...\n            if (this._attributes[i].itemSize <= 4)\n            {\n                if (attrLocs[i] != -1) this._cgl.gl.vertexAttribDivisor(attrLocs[i], 0);\n                if (attrLocs[i] >= 0) this._cgl.gl.disableVertexAttribArray(attrLocs[i]);\n            }\n            else\n            {\n                this._cgl.gl.vertexAttribDivisor(attrLocs[i], 0);\n                this._cgl.gl.vertexAttribDivisor(attrLocs[i] + 1, 0);\n                this._cgl.gl.vertexAttribDivisor(attrLocs[i] + 2, 0);\n                this._cgl.gl.vertexAttribDivisor(attrLocs[i] + 3, 0);\n                this._cgl.gl.disableVertexAttribArray(attrLocs[i] + 1);\n                this._cgl.gl.disableVertexAttribArray(attrLocs[i] + 2);\n                this._cgl.gl.disableVertexAttribArray(attrLocs[i] + 3);\n            }\n        }\n\n        if (attrLocs[i] != -1) this._cgl.gl.disableVertexAttribArray(attrLocs[i]);\n    }\n};\n\nMesh.prototype.meshChanged = function ()\n{\n    return this._cgl.lastMesh && this._cgl.lastMesh != this;\n};\n\nMesh.prototype.printDebug = function (shader)\n{\n    console.log(\"--attributes\");\n    for (let i = 0; i < this._attributes.length; i++)\n    {\n        console.log(\"attribute \" + i + \" \" + this._attributes[i].name);\n    }\n};\n\nMesh.prototype.setNumVertices = function (num)\n{\n    this._bufVertexAttrib.numItems = num;\n};\n\nMesh.prototype.getNumVertices = function ()\n{\n    return this._bufVertexAttrib.numItems;\n};\n\n\n/**\n * @function render\n * @memberof Mesh\n * @instance\n * @description draw mesh to screen\n * @param {Shader} shader\n */\nMesh.prototype.render = function (shader)\n{\n    // TODO: enable/disablevertex only if the mesh has changed... think drawing 10000x the same mesh\n\n    if (!shader || !shader.isValid() || this._cgl.aborted) return;\n\n    this._checkAttrLengths();\n\n    if (this._geom)\n    {\n        if (this._preWireframeGeom && !shader.wireframe && !this._geom.isIndexed())\n        {\n            this.setGeom(this._preWireframeGeom);\n            this._preWireframeGeom = null;\n            // console.log(\"remove prewireframe geom\");\n        }\n\n        if (shader.wireframe)\n        {\n            let changed = false;\n\n            if (this._geom.isIndexed())\n            {\n                if (!this._preWireframeGeom)\n                {\n                    this._preWireframeGeom = this._geom;\n                    this._geom = this._geom.copy();\n                }\n\n                this._geom.unIndex();\n                changed = true;\n            }\n\n            if (!this._geom.getAttribute(\"attrBarycentric\"))\n            {\n                if (!this._preWireframeGeom)\n                {\n                    this._preWireframeGeom = this._geom;\n                    this._geom = this._geom.copy();\n                }\n                changed = true;\n\n                this._geom.calcBarycentric();\n            }\n            if (changed) this.setGeom(this._geom);\n        }\n        // if (shader.wireframe)\n        // console.log(shader.wireframe, this._geom.isIndexed());\n    }\n\n    let needsBind = false;\n    if (MESH.lastMesh != this)\n    {\n        if (MESH.lastMesh) MESH.lastMesh.unBind();\n        needsBind = true;\n    }\n\n\n    // var needsBind=false;\n    // {\n    //     needsBind=true;\n    // }\n    if (needsBind) this._preBind(shader);\n\n    if (!shader.bind()) return;\n\n    // if(needsBind)\n    this._bind(shader);\n    if (this.addVertexNumbers) this._setVertexNumbers();\n\n    MESH.lastMesh = this;\n\n    let prim = this._cgl.gl.TRIANGLES;\n    if (this._glPrimitive !== undefined) prim = this._glPrimitive;\n    if (shader.glPrimitive !== null) prim = shader.glPrimitive;\n\n    let elementDiv = 1;\n    let doQuery = this._cgl.profileData.doProfileGlQuery;\n    let queryStarted = false;\n    if (doQuery)\n    {\n        let id = this._name + \" - \" + shader.getName() + \" #\" + shader.id;\n        if (this._numInstances) id += \" instanced \" + this._numInstances + \"x\";\n\n        let queryProfilerData = this._cgl.profileData.glQueryData[id];\n\n        if (!queryProfilerData) queryProfilerData = { \"id\": id, \"num\": 0 };\n\n        this._cgl.profileData.glQueryData[id] = queryProfilerData;\n\n        if (!this._queryExt && this._queryExt !== false) this._queryExt = this._cgl.enableExtension(\"EXT_disjoint_timer_query_webgl2\") || false;\n        if (this._queryExt)\n        {\n            if (queryProfilerData._drawQuery)\n            {\n                const available = this._cgl.gl.getQueryParameter(queryProfilerData._drawQuery, this._cgl.gl.QUERY_RESULT_AVAILABLE);\n                if (available)\n                {\n                    const elapsedNanos = this._cgl.gl.getQueryParameter(queryProfilerData._drawQuery, this._cgl.gl.QUERY_RESULT);\n                    const currentTimeGPU = elapsedNanos / 1000000;\n\n                    queryProfilerData._times = queryProfilerData._times || 0;\n                    queryProfilerData._times += currentTimeGPU;\n                    queryProfilerData._numcount++;\n                    queryProfilerData.when = performance.now();\n                    queryProfilerData._drawQuery = null;\n                    queryProfilerData.queryStarted = false;\n                }\n            }\n\n            if (!queryProfilerData.queryStarted)\n            {\n                queryProfilerData._drawQuery = this._cgl.gl.createQuery();\n                this._cgl.gl.beginQuery(this._queryExt.TIME_ELAPSED_EXT, queryProfilerData._drawQuery);\n                queryStarted = queryProfilerData.queryStarted = true;\n            }\n        }\n    }\n\n\n    if (this.hasFeedbacks())\n    {\n        this.drawFeedbacks(shader, prim);\n    }\n    else if (!this._bufVerticesIndizes || this._bufVerticesIndizes.numItems === 0)\n    {\n        // for (let i = 0; i < this._attributes.length; i++)\n        // {\n        //     if (this._attributes[i].arrayLength / this._attributes[i].itemSize != this._bufVertexAttrib.floatArray.length / 3)\n        //     {\n        //         this._log.warn(\"attrib buffer length wrong! \", this._attributes[i].name, this._attributes[i].arrayLength / this._attributes[i].itemSize, this._bufVertexAttrib.floatArray.length / 3, this._attributes[i].itemSize);\n        //         // this._log.log(this);\n        //         // debugger;\n        //         return;\n        //     }\n        // }\n\n\n        if (prim == this._cgl.gl.TRIANGLES)elementDiv = 3;\n        if (this._numInstances === 0) this._cgl.gl.drawArrays(prim, this._bufVertexAttrib.startItem, this._bufVertexAttrib.numItems - this._bufVertexAttrib.startItem);\n        else this._cgl.gl.drawArraysInstanced(prim, this._bufVertexAttrib.startItem, this._bufVertexAttrib.numItems, this._numInstances);\n    }\n    else\n    {\n        if (prim == this._cgl.gl.TRIANGLES)elementDiv = 3;\n        if (this._numInstances === 0)\n        {\n            // console.log(\"la\", this._bufVerticesIndizes.numItems);\n\n            this._cgl.gl.drawElements(prim, this._bufVerticesIndizes.numItems, this._indexType, 0);\n        }\n        else\n        {\n            this._cgl.gl.drawElementsInstanced(prim, this._bufVerticesIndizes.numItems, this._indexType, 0, this._numInstances);\n        }\n    }\n\n    if (this._cgl.debugOneFrame && this._cgl.gl.getError() != this._cgl.gl.NO_ERROR)\n    {\n        this._log.error(\"mesh draw gl error\");\n        this._log.error(\"mesh\", this);\n        this._log.error(\"shader\", shader);\n\n        const attribNames = [];\n        for (let i = 0; i < this._cgl.gl.getProgramParameter(shader.getProgram(), this._cgl.gl.ACTIVE_ATTRIBUTES); i++)\n        {\n            const name = this._cgl.gl.getActiveAttrib(shader.getProgram(), i).name;\n            this._log.error(\"attrib \", name);\n        }\n    }\n\n    this._cgl.profileData.profileMeshNumElements += (this._bufVertexAttrib.numItems / elementDiv) * (this._numInstances || 1);\n    this._cgl.profileData.profileMeshDraw++;\n\n    if (doQuery && queryStarted)\n    {\n        this._cgl.gl.endQuery(this._queryExt.TIME_ELAPSED_EXT);\n    }\n\n    this._cgl.printError(\"mesh render \" + this._name);\n\n    this.unBind();\n};\n\nMesh.prototype.setNumInstances = function (n)\n{\n    n = Math.max(0, n);\n    if (this._numInstances != n)\n    {\n        this._numInstances = n;\n        // if (n <= 0)return;\n        const indexArr = new Float32Array(n);\n        for (let i = 0; i < n; i++) indexArr[i] = i;\n        this.setAttribute(_constants__WEBPACK_IMPORTED_MODULE_1__.CONSTANTS.SHADER.SHADERVAR_INSTANCE_INDEX, indexArr, 1, { \"instanced\": true });\n    }\n};\n\nMesh.prototype._disposeAttributes = function ()\n{\n    if (!this._attributes) return;\n\n    for (let i = 0; i < this._attributes.length; i++)\n    {\n        if (this._attributes[i].buffer)\n        {\n            this._cgl.gl.deleteBuffer(this._attributes[i].buffer);\n            this._attributes[i].buffer = null;\n        }\n    }\n    this._attributes.length = 0;\n};\n\nMesh.prototype.dispose = function ()\n{\n    if (this._bufVertexAttrib && this._bufVertexAttrib.buffer) this._cgl.gl.deleteBuffer(this._bufVertexAttrib.buffer);\n    if (this._bufVerticesIndizes) this._cgl.gl.deleteBuffer(this._bufVerticesIndizes);\n    this._bufVerticesIndizes = null;\n\n    this._disposeAttributes();\n};\n\n(0,_cgl_mesh_feedback__WEBPACK_IMPORTED_MODULE_2__.extendMeshWithFeedback)(Mesh);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_mesh.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_mesh_feedback.js":
/*!*******************************************!*\
  !*** ./src/core/cgl/cgl_mesh_feedback.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"extendMeshWithFeedback\": () => (/* binding */ extendMeshWithFeedback)\n/* harmony export */ });\n// view-source:http://toji.github.io/webgl2-particles-2/\n\nfunction extendMeshWithFeedback(Mesh)\n{\n    Mesh.prototype.hasFeedbacks = function ()\n    {\n        return this._feedBacks.length > 0;\n    };\n\n    Mesh.prototype.removeFeedbacks = function (shader)\n    {\n        if (!this._feedbacks) return;\n        this._feedbacks.length = 0;\n        this._feedBacksChanged = true;\n    };\n\n    Mesh.prototype.setAttributeFeedback = function () {};\n\n    Mesh.prototype.setFeedback = function (attrib, nameOut, initialArr)\n    {\n        let fb = { nameOut, };\n        let found = false;\n        this.unBindFeedbacks();\n\n        for (let i = 0; i < this._feedBacks.length; i++)\n        {\n            if (this._feedBacks[i].nameOut == nameOut)\n            {\n                fb = this._feedBacks[i];\n\n                found = true;\n            }\n        }\n\n        if (!found) this._feedBacksChanged = true;\n\n        fb.initialArr = initialArr;\n        fb.attrib = attrib;\n\n        // console.log(\"setfeedback\");\n\n        if (fb.outBuffer) this._cgl.gl.deleteBuffer(fb.outBuffer);\n        // if(fb.attrib.buffer)this._cgl.gl.deleteBuffer(fb.attrib.buffer);\n        fb.outBuffer = this._cgl.gl.createBuffer();\n        this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, fb.outBuffer);\n        this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER, fb.initialArr, this._cgl.gl.STATIC_DRAW);\n\n        this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, fb.attrib.buffer);\n        this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER, fb.initialArr, this._cgl.gl.STATIC_DRAW);\n\n        if (!found) this._feedBacks.push(fb);\n\n        // console.log('initialArr',initialArr.length/3);\n        // console.log('vertices',fb.attrib.numItems);\n        // console.log('vertices',this._bufVertexAttrib.numItems);\n\n        return fb;\n    };\n\n    Mesh.prototype.bindFeedback = function (attrib)\n    {\n        if (!this._feedBacks || this._feedBacks.length === 0) return;\n        if (this._transformFeedBackLoc == -1) this._transformFeedBackLoc = this._cgl.gl.createTransformFeedback();\n\n        this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK, this._transformFeedBackLoc);\n\n        let found = false;\n\n        for (let i = 0; i < this._feedBacks.length; i++)\n        {\n            const fb = this._feedBacks[i];\n\n            if (fb.attrib == attrib)\n            {\n                found = true;\n                // this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, fb.attrib.buffer);\n                //\n                // this._cgl.gl.vertexAttribPointer(\n                //     fb.attrib.loc,\n                //     fb.attrib.itemSize,\n                //     fb.attrib.type,\n                //     false,\n                //     fb.attrib.itemSize*4, 0);\n\n                this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER, i, fb.outBuffer);\n            }\n        }\n\n        if (!found)\n        {\n            // console.log(\"ARTTRIB NOT FOUND\",attrib.name);\n        }\n    };\n\n    Mesh.prototype.drawFeedbacks = function (shader, prim)\n    {\n        let i = 0;\n\n        if (this._feedBacksChanged)\n        {\n            const names = [];\n            this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK, this._transformFeedBackLoc);\n\n            for (i = 0; i < this._feedBacks.length; i++) names.push(this._feedBacks[i].nameOut);\n            shader.setFeedbackNames(names);\n\n            console.log(\"feedbacknames\", names);\n\n            shader.compile();\n            this._feedBacksChanged = false;\n            this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK, null);\n            console.log(\"changed finished\");\n            return;\n        }\n\n        //\n        // for( i=0;i<this._feedBacks.length;i++)\n        // {\n        //     var fb=this._feedBacks[i];\n        //\n        //     this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER, i, fb.outBuffer);\n        // }\n\n        // draw\n        this._cgl.gl.beginTransformFeedback(this.glPrimitive);\n        this._cgl.gl.drawArrays(prim, 0, this._feedBacks[0].attrib.numItems);\n\n        // unbind\n        this._cgl.gl.endTransformFeedback();\n\n        this.unBindFeedbacks();\n\n        this.feedBacksSwapBuffers();\n    };\n\n    Mesh.prototype.unBindFeedbacks = function ()\n    {\n        for (let i = 0; i < this._feedBacks.length; i++)\n        {\n            // this._cgl.gl.disableVertexAttribArray(this._feedBacks[i].attrib.loc);\n            this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER, i, null);\n        }\n\n        this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK, null);\n    };\n\n    Mesh.prototype.feedBacksSwapBuffers = function ()\n    {\n        for (let i = 0; i < this._feedBacks.length; i++)\n        {\n            const t = this._feedBacks[i].attrib.buffer;\n            this._feedBacks[i].attrib.buffer = this._feedBacks[i].outBuffer;\n            this._feedBacks[i].outBuffer = t;\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_mesh_feedback.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_profiledata.js":
/*!*****************************************!*\
  !*** ./src/core/cgl/cgl_profiledata.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ProfileData\": () => (/* binding */ ProfileData)\n/* harmony export */ });\nclass ProfileData\n{\n    constructor(cgl)\n    {\n        this._cgl = cgl;\n        this._lastTime = 0;\n        this.pause = false;\n        this.profileUniformCount = 0;\n        this.profileShaderBinds = 0;\n        this.profileUniformCount = 0;\n        this.profileShaderCompiles = 0;\n        this.profileVideosPlaying = 0;\n        this.profileMVPMatrixCount = 0;\n        this.profileEffectBuffercreate = 0;\n        this.profileShaderGetUniform = 0;\n        this.profileFrameBuffercreate = 0;\n        this.profileMeshSetGeom = 0;\n        this.profileTextureNew = 0;\n        this.profileGenMipMap = 0;\n        this.profileOnAnimFrameOps = 0;\n\n        this.profileFencedPixelRead = 0;\n        this.profileMainloopMs = 0;\n        this.profileMeshDraw = 0;\n        this.profileTextureEffect = 0;\n        this.profileTexPreviews = 0;\n        this.shaderCompileTime = 0;\n        this.profileMeshNumElements = 0;\n        this.profileMeshAttributes = 0;\n        this.profileSingleMeshAttribute = [];\n        this.heavyEvents = [];\n\n        this.doProfileGlQuery = false;\n        this.glQueryData = {};\n    }\n\n    clear()\n    {\n        this.profileSingleMeshAttribute = {};\n        this.profileMeshAttributes = 0;\n        this.profileUniformCount = 0;\n        this.profileShaderGetUniform = 0;\n        this.profileShaderCompiles = 0;\n        this.profileShaderBinds = 0;\n        this.profileTextureResize = 0;\n        this.profileFrameBuffercreate = 0;\n        this.profileEffectBuffercreate = 0;\n        this.profileTextureDelete = 0;\n        this.profileMeshSetGeom = 0;\n        this.profileVideosPlaying = 0;\n        this.profileMVPMatrixCount = 0;\n        this.profileNonTypedAttrib = 0;\n        this.profileNonTypedAttribNames = \"\";\n        this.profileTextureNew = 0;\n        this.profileGenMipMap = 0;\n        this.profileFramebuffer = 0;\n        this.profileMeshDraw = 0;\n        this.profileTextureEffect = 0;\n        this.profileTexPreviews = 0;\n        this.profileMeshNumElements = 0;\n        this.profileFencedPixelRead = 0;\n    }\n\n    clearGlQuery()\n    {\n        for (let i in this.glQueryData)\n        {\n            if (!this.glQueryData[i].lastClear || performance.now() - this.glQueryData[i].lastClear > 1000)\n            {\n                this.glQueryData[i].time = this.glQueryData[i]._times / this.glQueryData[i]._numcount;\n                this.glQueryData[i].num = this.glQueryData[i]._numcount;\n\n                this.glQueryData[i]._times = 0;\n                this.glQueryData[i]._numcount = 0;\n                this.glQueryData[i].lastClear = performance.now();\n            }\n        }\n    }\n\n    addHeavyEvent(event, name, info)\n    {\n        const e = { \"event\": event, \"name\": name, \"info\": info, \"date\": performance.now() };\n        this.heavyEvents.push(e);\n        this._cgl.emitEvent(\"heavyEvent\", e);\n    }\n}\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ2wvY2dsX3Byb2ZpbGVkYXRhLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ0FCTEVTLy4vc3JjL2NvcmUvY2dsL2NnbF9wcm9maWxlZGF0YS5qcz85NzcyIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFByb2ZpbGVEYXRhXG57XG4gICAgY29uc3RydWN0b3IoY2dsKVxuICAgIHtcbiAgICAgICAgdGhpcy5fY2dsID0gY2dsO1xuICAgICAgICB0aGlzLl9sYXN0VGltZSA9IDA7XG4gICAgICAgIHRoaXMucGF1c2UgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5wcm9maWxlVW5pZm9ybUNvdW50ID0gMDtcbiAgICAgICAgdGhpcy5wcm9maWxlU2hhZGVyQmluZHMgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVVbmlmb3JtQ291bnQgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVTaGFkZXJDb21waWxlcyA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZVZpZGVvc1BsYXlpbmcgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVNVlBNYXRyaXhDb3VudCA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZUVmZmVjdEJ1ZmZlcmNyZWF0ZSA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZVNoYWRlckdldFVuaWZvcm0gPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVGcmFtZUJ1ZmZlcmNyZWF0ZSA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZU1lc2hTZXRHZW9tID0gMDtcbiAgICAgICAgdGhpcy5wcm9maWxlVGV4dHVyZU5ldyA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZUdlbk1pcE1hcCA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZU9uQW5pbUZyYW1lT3BzID0gMDtcblxuICAgICAgICB0aGlzLnByb2ZpbGVGZW5jZWRQaXhlbFJlYWQgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVNYWlubG9vcE1zID0gMDtcbiAgICAgICAgdGhpcy5wcm9maWxlTWVzaERyYXcgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVUZXh0dXJlRWZmZWN0ID0gMDtcbiAgICAgICAgdGhpcy5wcm9maWxlVGV4UHJldmlld3MgPSAwO1xuICAgICAgICB0aGlzLnNoYWRlckNvbXBpbGVUaW1lID0gMDtcbiAgICAgICAgdGhpcy5wcm9maWxlTWVzaE51bUVsZW1lbnRzID0gMDtcbiAgICAgICAgdGhpcy5wcm9maWxlTWVzaEF0dHJpYnV0ZXMgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVTaW5nbGVNZXNoQXR0cmlidXRlID0gW107XG4gICAgICAgIHRoaXMuaGVhdnlFdmVudHMgPSBbXTtcblxuICAgICAgICB0aGlzLmRvUHJvZmlsZUdsUXVlcnkgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5nbFF1ZXJ5RGF0YSA9IHt9O1xuICAgIH1cblxuICAgIGNsZWFyKClcbiAgICB7XG4gICAgICAgIHRoaXMucHJvZmlsZVNpbmdsZU1lc2hBdHRyaWJ1dGUgPSB7fTtcbiAgICAgICAgdGhpcy5wcm9maWxlTWVzaEF0dHJpYnV0ZXMgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVVbmlmb3JtQ291bnQgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVTaGFkZXJHZXRVbmlmb3JtID0gMDtcbiAgICAgICAgdGhpcy5wcm9maWxlU2hhZGVyQ29tcGlsZXMgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVTaGFkZXJCaW5kcyA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZVRleHR1cmVSZXNpemUgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVGcmFtZUJ1ZmZlcmNyZWF0ZSA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZUVmZmVjdEJ1ZmZlcmNyZWF0ZSA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZVRleHR1cmVEZWxldGUgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVNZXNoU2V0R2VvbSA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZVZpZGVvc1BsYXlpbmcgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVNVlBNYXRyaXhDb3VudCA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZU5vblR5cGVkQXR0cmliID0gMDtcbiAgICAgICAgdGhpcy5wcm9maWxlTm9uVHlwZWRBdHRyaWJOYW1lcyA9IFwiXCI7XG4gICAgICAgIHRoaXMucHJvZmlsZVRleHR1cmVOZXcgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVHZW5NaXBNYXAgPSAwO1xuICAgICAgICB0aGlzLnByb2ZpbGVGcmFtZWJ1ZmZlciA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZU1lc2hEcmF3ID0gMDtcbiAgICAgICAgdGhpcy5wcm9maWxlVGV4dHVyZUVmZmVjdCA9IDA7XG4gICAgICAgIHRoaXMucHJvZmlsZVRleFByZXZpZXdzID0gMDtcbiAgICAgICAgdGhpcy5wcm9maWxlTWVzaE51bUVsZW1lbnRzID0gMDtcbiAgICAgICAgdGhpcy5wcm9maWxlRmVuY2VkUGl4ZWxSZWFkID0gMDtcbiAgICB9XG5cbiAgICBjbGVhckdsUXVlcnkoKVxuICAgIHtcbiAgICAgICAgZm9yIChsZXQgaSBpbiB0aGlzLmdsUXVlcnlEYXRhKVxuICAgICAgICB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuZ2xRdWVyeURhdGFbaV0ubGFzdENsZWFyIHx8IHBlcmZvcm1hbmNlLm5vdygpIC0gdGhpcy5nbFF1ZXJ5RGF0YVtpXS5sYXN0Q2xlYXIgPiAxMDAwKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2xRdWVyeURhdGFbaV0udGltZSA9IHRoaXMuZ2xRdWVyeURhdGFbaV0uX3RpbWVzIC8gdGhpcy5nbFF1ZXJ5RGF0YVtpXS5fbnVtY291bnQ7XG4gICAgICAgICAgICAgICAgdGhpcy5nbFF1ZXJ5RGF0YVtpXS5udW0gPSB0aGlzLmdsUXVlcnlEYXRhW2ldLl9udW1jb3VudDtcblxuICAgICAgICAgICAgICAgIHRoaXMuZ2xRdWVyeURhdGFbaV0uX3RpbWVzID0gMDtcbiAgICAgICAgICAgICAgICB0aGlzLmdsUXVlcnlEYXRhW2ldLl9udW1jb3VudCA9IDA7XG4gICAgICAgICAgICAgICAgdGhpcy5nbFF1ZXJ5RGF0YVtpXS5sYXN0Q2xlYXIgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFkZEhlYXZ5RXZlbnQoZXZlbnQsIG5hbWUsIGluZm8pXG4gICAge1xuICAgICAgICBjb25zdCBlID0geyBcImV2ZW50XCI6IGV2ZW50LCBcIm5hbWVcIjogbmFtZSwgXCJpbmZvXCI6IGluZm8sIFwiZGF0ZVwiOiBwZXJmb3JtYW5jZS5ub3coKSB9O1xuICAgICAgICB0aGlzLmhlYXZ5RXZlbnRzLnB1c2goZSk7XG4gICAgICAgIHRoaXMuX2NnbC5lbWl0RXZlbnQoXCJoZWF2eUV2ZW50XCIsIGUpO1xuICAgIH1cbn1cblxuXG5leHBvcnQgeyBQcm9maWxlRGF0YSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_profiledata.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_shader.js":
/*!************************************!*\
  !*** ./src/core/cgl/cgl_shader.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Shader\": () => (/* binding */ Shader)\n/* harmony export */ });\n/* harmony import */ var _cgl_shader_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cgl_shader_lib */ \"./src/core/cgl/cgl_shader_lib.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../timer */ \"./src/core/timer.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/core/utils.js\");\n/* harmony import */ var _cgl_mesh__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cgl_mesh */ \"./src/core/cgl/cgl_mesh.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"./src/core/cgl/constants.js\");\n/* harmony import */ var _cgl_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cgl_utils */ \"./src/core/cgl/cgl_utils.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core_logger */ \"./src/core/core_logger.js\");\n/* harmony import */ var _cgl_shader_default_glsl_vert__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cgl_shader_default_glsl.vert */ \"./src/core/cgl/cgl_shader_default_glsl.vert\");\n\n\n\n\n// import { CGL } from \"./index\";\n\n\n\n\n// ---------------------------------------------------------------------------\n\n\n/*\n\nproposal default shader variable names:\n\nattrVertex - currently: vPosition\nattrVertexIndex - currently: attrVertIndex\nattrTexCoord\nattrInstMat - currently: instMat\nattrVertColor\nattrTangent\nattrBiTangent\n\nuProjMatrix - currently: projMatrix\nuModelMatrix - currently: modelMatrix\nuNormalMatrix - currently: normalMatrix\nuCamPosition - currently: camPos\n\n*/\n\n\n// ---------------------------------------------------------------------------\n\nlet materialIdCounter = 0;\n\n/**\n * @class\n * @external CGL\n * @namespace Shader\n * @hideconstructor\n * @example\n * var shader=new CGL.Shader(cgl,'MinimalMaterial');\n * shader.setSource(attachments.shader_vert,attachments.shader_frag);\n */\nconst Shader = function (_cgl, _name)\n{\n    if (!_cgl) throw new Error(\"shader constructed without cgl \" + _name);\n\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_6__[\"default\"](\"cgl_shader\");\n    this._cgl = _cgl;\n\n    if (!_name) this._log.stack(\"no shader name given\");\n    this._name = _name || \"unknown\";\n    this.glslVersion = 0;\n    if (_cgl.glVersion > 1) this.glslVersion = 300;\n\n    this._materialId = ++materialIdCounter;\n\n    this.id = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.simpleId)();\n    this._isValid = true;\n    this._program = null;\n    this._uniforms = [];\n    this._drawBuffers = [true];\n    this._defines = [];\n    this._needsRecompile = true;\n    this._compileReason = \"initial\";\n\n    this.ignoreMissingUniforms = false;\n    this._projMatrixUniform = null;\n    this._mvMatrixUniform = null;\n    this._mMatrixUniform = null;\n    this._vMatrixUniform = null;\n    this._camPosUniform = null;\n    this._normalMatrixUniform = null;\n    this._inverseViewMatrixUniform = null;\n\n    this._attrVertexPos = -1;\n    this.precision = _cgl.patch.config.glslPrecision || \"highp\";\n\n    this._pMatrixState = -1;\n    this._vMatrixState = -1;\n\n    this._countMissingUniforms = 0;\n    this._modGroupCount = 0; // not needed anymore...\n    this._feedBackNames = [];\n    this._attributes = [];\n\n    this.glPrimitive = null;\n    this.offScreenPass = false;\n    this._extensions = [];\n    this.srcVert = this.getDefaultVertexShader();\n    this.srcFrag = this.getDefaultFragmentShader();\n    this.lastCompile = 0;\n\n    this._moduleNames = [];\n    this._modules = [];\n    this._moduleNumId = 0;\n\n    this._libs = [];\n    this._structNames = [];\n    this._structUniformNames = [];\n    this._textureStackUni = [];\n    this._textureStackTex = [];\n    this._textureStackType = [];\n    this._textureStackTexCgl = [];\n\n    this._tempNormalMatrix = mat4.create();\n    this._tempCamPosMatrix = mat4.create();\n    this._tempInverseViewMatrix = mat4.create();\n    this._tempInverseProjMatrix = mat4.create();\n\n    this.setModules([\"MODULE_VERTEX_POSITION\", \"MODULE_COLOR\", \"MODULE_BEGIN_FRAG\"]);\n};\n\nShader.prototype.isValid = function ()\n{\n    return this._isValid;\n};\n\nShader.prototype.getCgl = function ()\n{\n    return this._cgl;\n};\n\nShader.prototype.getName = function ()\n{\n    return this._name;\n};\n\n/**\n * enable an extension for the shader\n * @function enableExtension\n * @memberof Shader\n * @instance\n * @param name extension name\n */\nShader.prototype.enableExtension = function (name)\n{\n    this.setWhyCompile(\"enable extension \" + name);\n    this._needsRecompile = true;\n    this._extensions.push(name);\n};\n\nShader.prototype.getAttrVertexPos = function ()\n{\n    return this._attrVertexPos;\n};\n\nShader.prototype.hasTextureUniforms = function ()\n{\n    for (let i = 0; i < this._uniforms.length; i++)\n        if (this._uniforms[i].getType() == \"t\") return true;\n    return false;\n};\n\nShader.prototype.setWhyCompile = function (why)\n{\n    this._compileReason = why;\n};\n\n/**\n * copy all uniform values from another shader\n * @function copyUniforms\n * @memberof Shader\n * @instance\n * @param shader uniform values will be copied from this shader\n */\nShader.prototype.copyUniformValues = function (origShader)\n{\n    // console.log(origShader._uniforms);\n    for (let i = 0; i < origShader._uniforms.length; i++)\n    {\n        if (!this._uniforms[i])\n        {\n            this._log.log(\"unknown uniform?!\");\n            continue;\n        }\n\n        // this._log.log(origShader._uniforms[i].getName());\n        // this.getUniform(origShader._uniforms[i].)\n        // this._uniforms[i].set(origShader._uniforms[i].getValue());\n\n\n        if (origShader._uniforms[i].getName().indexOf(\"pathPoints\") != -1)\n            console.log(\"copyUniformValues\", origShader._uniforms[i].getName(), origShader._uniforms[i].getValue());\n\n        this.getUniform(origShader._uniforms[i].getName()).set(origShader._uniforms[i].getValue());\n    }\n\n    this.popTextures();\n    for (let i = 0; i < origShader._textureStackUni.length; i++)\n    {\n        this._textureStackUni[i] = origShader._textureStackUni[i];\n        this._textureStackTex[i] = origShader._textureStackTex[i];\n        this._textureStackType[i] = origShader._textureStackType[i];\n        this._textureStackTexCgl[i] = origShader._textureStackTexCgl[i];\n    }\n\n    // this._textureStackUni = [];\n    // this._textureStackTex = [];\n    // this._textureStackType = [];\n    // this._textureStackTexCgl = [];\n};\n\n/**\n * copy current shader\n * @function copy\n * @memberof Shader\n * @instance\n * @returns newShader\n */\nShader.prototype.copy = function ()\n{\n    const shader = new Shader(this._cgl, this._name + \" copy\");\n    shader.setSource(this.srcVert, this.srcFrag);\n\n    shader._modules = JSON.parse(JSON.stringify(this._modules));\n    shader._defines = JSON.parse(JSON.stringify(this._defines));\n\n    shader._modGroupCount = this._modGroupCount;\n    shader._moduleNames = this._moduleNames;\n    shader.glPrimitive = this.glPrimitive;\n    shader.offScreenPass = this.offScreenPass;\n    shader._extensions = this._extensions;\n    shader.wireframe = this.wireframe;\n    shader._attributes = this._attributes;\n\n    for (let i = 0; i < this._uniforms.length; i++)\n    {\n        const u = this._uniforms[i].copy(shader);\n        u.resetLoc();\n    }\n\n    this.setWhyCompile(\"copy\");\n    shader._needsRecompile = true;\n    return shader;\n};\n\n\n/**\n * set shader source code\n * @function setSource\n * @memberof Shader\n * @instance\n * @param {String} srcVert\n * @param {String} srcFrag\n */\nShader.prototype.setSource = function (srcVert, srcFrag)\n{\n    this.srcVert = srcVert;\n    this.srcFrag = srcFrag;\n    this.setWhyCompile(\"Source changed\");\n    this._needsRecompile = true;\n    this._isValid = true;\n};\n\nShader.prototype._addLibs = function (src)\n{\n    for (const id in _cgl_shader_lib__WEBPACK_IMPORTED_MODULE_0__.ShaderLibMods)\n    {\n        if (src.indexOf(id) > -1)\n        {\n            const lib = new _cgl_shader_lib__WEBPACK_IMPORTED_MODULE_0__.ShaderLibMods[id]();\n            src = src.replace(\"{{\" + id + \"}}\", lib.srcHeadFrag);\n            this._libs.push(lib);\n            if (lib.initUniforms)lib.initUniforms(this);\n        }\n    }\n\n    return src;\n};\n\nShader.prototype.createStructUniforms = function ()\n{\n    // * create structs\n    let structStrFrag = \"\";\n    let structStrVert = \"\"; // TODO: not used yet\n\n    this._structNames = [];\n    // * reset the arrays holding the value each recompile so we don't skip structs\n    // * key value mapping so the same struct can be added twice (two times the same modifier)\n    this._injectedStringsFrag = {};\n    this._injectedStringsVert = {};\n\n    this._structUniformNamesIndicesFrag = [];\n    this._structUniformNamesIndicesVert = [];\n\n    for (let i = 0; i < this._uniforms.length; i++)\n    {\n        // * only add uniforms to struct that are a member of a struct\n        if (this._uniforms[i].isStructMember())\n        {\n            const injectionString = \"{{INJECTION_POINT_STRUCT_\" + this._uniforms[i]._structName + \"}}\";\n\n            // * check if struct is not already part of shader\n            if (this._structNames.indexOf(this._uniforms[i]._structName) === -1)\n            {\n                // * create struct definition with placeholder string to inject\n                const structDefinition = \"struct \"\n                    + this._uniforms[i]._structName + \" {\".endl()\n                    + injectionString\n                    + \"};\".endl().endl();\n\n                if (this._uniforms[i].getShaderType() === \"both\" || this._uniforms[i].getShaderType() === \"frag\")\n                    structStrFrag = structStrFrag.concat(structDefinition);\n\n                if (this._uniforms[i].getShaderType() === \"both\" || this._uniforms[i].getShaderType() === \"vert\")\n                    structStrVert = structStrVert.concat(structDefinition);\n\n                this._structNames.push(this._uniforms[i]._structName);\n                this._injectedStringsFrag[this._uniforms[i]._structName] = [];\n                this._injectedStringsVert[this._uniforms[i]._structName] = [];\n            }\n\n            // * create member & comment\n            let comment = \"\";\n            if (this._uniforms[i].comment) comment = \" // \" + this._uniforms[i].comment;\n\n            let stringToInsert = \"\";\n            if (this._uniforms[i].getGlslTypeString() == undefined)stringToInsert += \"//\";\n            stringToInsert += \"  \" + this._uniforms[i].getGlslTypeString()\n                    + \" \" + this._uniforms[i]._propertyName + \";\"\n                    + comment;\n\n            if (this._uniforms[i].getShaderType() === \"both\")\n            {\n                // * inject member before {injectionString}\n                if (\n                    this._injectedStringsFrag[this._uniforms[i]._structName].indexOf(stringToInsert) === -1\n                && this._injectedStringsVert[this._uniforms[i]._structName].indexOf(stringToInsert) === -1)\n                {\n                    const insertionIndexFrag = structStrFrag.lastIndexOf(injectionString);\n                    const insertionIndexVert = structStrVert.lastIndexOf(injectionString);\n\n                    structStrFrag =\n                        structStrFrag.slice(0, insertionIndexFrag)\n                        + stringToInsert + structStrFrag.slice(insertionIndexFrag - 1);\n\n                    structStrVert =\n                        structStrVert.slice(0, insertionIndexVert)\n                        + stringToInsert + structStrVert.slice(insertionIndexVert - 1);\n\n                    this._injectedStringsFrag[this._uniforms[i]._structName].push(stringToInsert);\n                    this._injectedStringsVert[this._uniforms[i]._structName].push(stringToInsert);\n                }\n\n                if (this._structUniformNamesIndicesFrag.indexOf(i) === -1) this._structUniformNamesIndicesFrag.push(i);\n                if (this._structUniformNamesIndicesVert.indexOf(i) === -1) this._structUniformNamesIndicesVert.push(i);\n            }\n            else if (this._uniforms[i].getShaderType() === \"frag\")\n            {\n                // * inject member before {injectionString}\n                if (this._injectedStringsFrag[this._uniforms[i]._structName].indexOf(stringToInsert) === -1)\n                {\n                    const insertionIndexFrag = structStrFrag.lastIndexOf(injectionString);\n\n                    structStrFrag =\n                        structStrFrag.slice(0, insertionIndexFrag)\n                        + stringToInsert + structStrFrag.slice(insertionIndexFrag - 1);\n\n                    this._injectedStringsFrag[this._uniforms[i]._structName].push(stringToInsert);\n                }\n\n                if (this._structUniformNamesIndicesFrag.indexOf(i) === -1) this._structUniformNamesIndicesFrag.push(i);\n            }\n            else if (this._uniforms[i].getShaderType() === \"vert\")\n            {\n                // * inject member before {injectionString}\n                if (this._injectedStringsVert[this._uniforms[i]._structName].indexOf(stringToInsert) === -1)\n                {\n                    const insertionIndexVert = structStrVert.lastIndexOf(injectionString);\n\n                    structStrVert =\n                        structStrVert.slice(0, insertionIndexVert)\n                        + stringToInsert + structStrVert.slice(insertionIndexVert - 1);\n\n                    this._injectedStringsVert[this._uniforms[i]._structName].push(stringToInsert);\n                }\n\n                if (this._structUniformNamesIndicesVert.indexOf(i) === -1) this._structUniformNamesIndicesVert.push(i);\n            }\n        }\n    }\n\n    // * dedupe injected uni declarations\n    this._uniDeclarationsFrag = [];\n    this._uniDeclarationsVert = [];\n\n    // * remove struct injection points and add uniform in fragment\n    for (let i = 0; i < this._structUniformNamesIndicesFrag.length; i += 1)\n    {\n        const index = this._structUniformNamesIndicesFrag[i];\n        const uniDeclarationString = \"UNI \" + this._uniforms[index]._structName + \" \" + this._uniforms[index]._structUniformName + \";\".endl();\n\n        if (this._uniDeclarationsFrag.indexOf(uniDeclarationString) === -1)\n        {\n            const injectionString = \"{{INJECTION_POINT_STRUCT_\" + this._uniforms[index]._structName + \"}}\";\n\n            structStrFrag = structStrFrag.replace(injectionString, \"\");\n            structStrFrag += uniDeclarationString;\n\n            this._uniDeclarationsFrag.push(uniDeclarationString);\n        }\n    }\n\n    // * remove struct injection points and add uniform in vertex\n    for (let i = 0; i < this._structUniformNamesIndicesVert.length; i += 1)\n    {\n        const index = this._structUniformNamesIndicesVert[i];\n        const uniDeclarationString = \"UNI \" + this._uniforms[index]._structName + \" \" + this._uniforms[index]._structUniformName + \";\".endl();\n\n        if (this._uniDeclarationsVert.indexOf(uniDeclarationString) === -1)\n        {\n            const injectionString = \"{{INJECTION_POINT_STRUCT_\" + this._uniforms[index]._structName + \"}}\";\n\n            structStrVert = structStrVert.replace(injectionString, \"\");\n            structStrVert += uniDeclarationString;\n            this._uniDeclarationsVert.push(uniDeclarationString);\n        }\n    }\n\n    return [structStrVert, structStrFrag];\n};\n\nShader.prototype._getAttrSrc = function (attr, firstLevel)\n{\n    const r = {};\n    if (attr.name && attr.type)\n    {\n        r.srcHeadVert = \"\";\n        if (!firstLevel) r.srcHeadVert += \"#ifndef ATTRIB_\" + attr.name.endl();\n        r.srcHeadVert += \"#define ATTRIB_\" + attr.name.endl();\n        r.srcHeadVert += \"IN \" + attr.type + \" \" + attr.name + \";\".endl();\n        if (!firstLevel) r.srcHeadVert += \"#endif\".endl();\n\n        if (attr.nameFrag)\n        {\n            r.srcHeadVert += \"\";\n            if (!firstLevel) r.srcHeadVert += \"#ifndef ATTRIB_\" + attr.nameFrag.endl();\n            r.srcHeadVert += \"#define ATTRIB_\" + attr.nameFrag.endl();\n            r.srcHeadVert += \"OUT \" + attr.type + \" \" + attr.nameFrag + \";\".endl();\n            if (!firstLevel) r.srcHeadVert += \"#endif\".endl();\n\n            r.srcVert = \"\".endl() + attr.nameFrag + \"=\" + attr.name + \";\";\n\n            r.srcHeadFrag = \"\";\n            if (!firstLevel) r.srcHeadFrag += \"#ifndef ATTRIB_\" + attr.nameFrag.endl();\n            r.srcHeadFrag += \"#define ATTRIB_\" + attr.nameFrag.endl();\n            r.srcHeadFrag += \"IN \" + attr.type + \" \" + attr.nameFrag + \";\".endl();\n            if (!firstLevel) r.srcHeadFrag += \"#endif\".endl();\n        }\n    }\n    return r;\n};\n\nShader.prototype.compile = function ()\n{\n    if (this._cgl.aborted) return;\n    const startTime = performance.now();\n\n\n\n    this._cgl.profileData.profileShaderCompiles++;\n    this._cgl.profileData.profileShaderCompileName = this._name + \" [\" + this._compileReason + \"]\";\n\n    let extensionString = \"\";\n    if (this._extensions)\n        for (let i = 0; i < this._extensions.length; i++)\n            extensionString += \"#extension \" + this._extensions[i] + \" : enable\".endl();\n\n    let definesStr = \"\";\n    if (this._defines.length) definesStr = \"\\n// cgl generated\".endl();\n    for (let i = 0; i < this._defines.length; i++)\n        definesStr += \"#define \" + this._defines[i][0] + \" \" + this._defines[i][1] + \"\".endl();\n\n    const structStrings = this.createStructUniforms();\n    this._cgl.profileData.addHeavyEvent(\"shader compile\", this._name + \" [\" + this._compileReason + \"]\");\n    this._compileReason = \"\";\n\n\n\n    if (this._uniforms)\n    {\n        // * we create an array of the uniform names to check our indices & an array to save them\n        const uniNames = this._uniforms.map((uni) => { return uni._name; });\n        const indicesToRemove = [];\n\n        // * we go through our uniforms and check if the same name is contained somewhere further in the array\n        // * if so, we add the current index to be removed later\n        for (let i = 0; i < this._uniforms.length; i++)\n        {\n            const uni = this._uniforms[i];\n            const nextIndex = uniNames.indexOf(uni._name, i + 1);\n            if (nextIndex > -1) indicesToRemove.push(i);\n        }\n\n        // * after that, we go through the uniforms backwards (so we keep the order) and remove the indices\n        // * also, we reset the locations of all the other valid uniforms\n        for (let j = this._uniforms.length - 1; j >= 0; j -= 1)\n        {\n            if (indicesToRemove.indexOf(j) > -1) this._uniforms.splice(j, 1);\n            else this._uniforms[j].resetLoc();\n        }\n    }\n\n    this._cgl.printError(\"uniform resets\");\n\n    if (this.hasTextureUniforms()) definesStr += \"#define HAS_TEXTURES\".endl();\n\n    let vs = \"\";\n    let fs = \"\";\n\n    if (!this.srcFrag)\n    {\n        this._log.error(\"[cgl shader] has no fragment source!\", this);\n        this.srcVert = this.getDefaultVertexShader();\n        this.srcFrag = this.getDefaultFragmentShader();\n        // return;\n    }\n\n    if (this.glslVersion == 300)\n    {\n        vs = \"#version 300 es\"\n            .endl() + \"// \"\n            .endl() + \"// vertex shader \" + this._name\n            .endl() + \"// \"\n            .endl() + \"precision \" + this.precision + \" float;\"\n            .endl() + \"precision \" + this.precision + \" sampler2D;\"\n            .endl() + \"\"\n            .endl() + \"#define WEBGL2\"\n            .endl() + \"#define texture2D texture\"\n            .endl() + \"#define UNI uniform\"\n            .endl() + \"#define IN in\"\n            .endl() + \"#define OUT out\"\n            .endl();\n\n        fs = \"#version 300 es\"\n            .endl() + \"// \"\n            .endl() + \"// fragment shader \" + this._name\n            .endl() + \"// \"\n            .endl() + \"precision \" + this.precision + \" float;\"\n            .endl() + \"precision \" + this.precision + \" sampler2D;\"\n            .endl() + \"\"\n            .endl() + \"#define WEBGL2\"\n            .endl() + \"#define texture2D texture\"\n            .endl() + \"#define IN in\"\n            .endl() + \"#define OUT out\"\n            .endl() + \"#define UNI uniform\"\n            .endl() + \"{{DRAWBUFFER}}\"\n\n            .endl();\n    }\n    else\n    {\n        fs = \"\"\n            .endl() + \"// \"\n            .endl() + \"// fragment shader \" + this._name\n            .endl() + \"// \"\n            .endl() + \"#define WEBGL1\"\n            .endl() + \"#define texture texture2D\"\n            .endl() + \"#define outColor gl_FragColor\"\n            .endl() + \"#define IN varying\"\n            .endl() + \"#define UNI uniform\"\n            .endl();\n\n        vs = \"\"\n            .endl() + \"// \"\n            .endl() + \"// vertex shader \" + this._name\n            .endl() + \"// \"\n            .endl() + \"#define WEBGL1\"\n            .endl() + \"#define texture texture2D\"\n            .endl() + \"#define OUT varying\"\n            .endl() + \"#define IN attribute\"\n            .endl() + \"#define UNI uniform\"\n            .endl();\n    }\n\n    let uniformsStrVert = \"\\n// cgl generated\".endl();\n    let uniformsStrFrag = \"\\n// cgl generated\".endl();\n\n\n    fs += \"\\n// active mods: --------------- \";\n    vs += \"\\n// active mods: --------------- \";\n\n    let foundModsFrag = false;\n    let foundModsVert = false;\n    for (let i = 0; i < this._moduleNames.length; i++)\n    {\n        for (let j = 0; j < this._modules.length; j++)\n        {\n            if (this._modules[j].name == this._moduleNames[i])\n            {\n                if (this._modules[j].srcBodyFrag || this._modules[j].srcHeadFrag)\n                {\n                    foundModsFrag = true;\n                    fs += \"\\n// \" + i + \".\" + j + \". \" + this._modules[j].title + \" (\" + this._modules[j].name + \")\";\n                }\n                if (this._modules[j].srcBodyVert || this._modules[j].srcHeadVert)\n                {\n                    vs += \"\\n// \" + i + \".\" + j + \". \" + this._modules[j].title + \" (\" + this._modules[j].name + \")\";\n                    foundModsVert = true;\n                }\n            }\n        }\n    }\n    if (!foundModsVert)fs += \"\\n// no mods used...\";\n    if (!foundModsFrag)fs += \"\\n// no mods used...\";\n    fs += \"\\n\";\n    vs += \"\\n\";\n\n    for (let i = 0; i < this._uniforms.length; i++)\n    {\n        if (this._uniforms[i].shaderType && !this._uniforms[i].isStructMember())\n        {\n            let uniStr = \"\";\n            if (!this._uniforms[i].getGlslTypeString())uniStr += \"// \";\n            uniStr += \"UNI \" + this._uniforms[i].getGlslTypeString() + \" \" + this._uniforms[i].getName();\n            let comment = \"\";\n            if (this._uniforms[i].comment) comment = \" // \" + this._uniforms[i].comment;\n\n            if (this._uniforms[i].shaderType == \"vert\" || this._uniforms[i].shaderType == \"both\")\n                if (this.srcVert.indexOf(uniStr) == -1 && this.srcVert.indexOf(\"uniform \" + this._uniforms[i].getGlslTypeString() + \" \" + this._uniforms[i].getName()) == -1)\n                    uniformsStrVert += uniStr + \";\" + comment.endl();\n\n            if (this._uniforms[i].shaderType == \"frag\" || this._uniforms[i].shaderType == \"both\")\n                if (this.srcFrag.indexOf(uniStr) == -1 && this.srcFrag.indexOf(\"uniform \" + this._uniforms[i].getGlslTypeString() + \" \" + this._uniforms[i].getName()) == -1)\n                    uniformsStrFrag += uniStr + \";\" + comment.endl();\n        }\n    }\n\n\n    let countUniFrag = 0;\n    let countUniVert = 0;\n    for (let i = 0; i < this._uniforms.length; i++)\n    {\n        if (this._uniforms[i].shaderType && !this._uniforms[i].isStructMember())\n        {\n            if (this._uniforms[i].shaderType == \"vert\" || this._uniforms[i].shaderType == \"both\") countUniVert++;\n            if (this._uniforms[i].shaderType == \"frag\" || this._uniforms[i].shaderType == \"both\") countUniFrag++;\n        }\n    }\n    if (countUniFrag >= this._cgl.maxUniformsFrag) this._log.warn(\"[cgl_shader] num uniforms frag: \" + countUniFrag + \" / \" + this._cgl.maxUniformsFrag);\n    if (countUniVert >= this._cgl.maxUniformsVert) this._log.warn(\"[cgl_shader] num uniforms vert: \" + countUniVert + \" / \" + this._cgl.maxUniformsVert);\n\n\n    if (fs.indexOf(\"precision\") == -1) fs = \"precision \" + this.precision + \" float;\".endl() + fs;\n    if (vs.indexOf(\"precision\") == -1) vs = \"precision \" + this.precision + \" float;\".endl() + vs;\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))\n    {\n        fs += \"#define MOBILE\".endl();\n        vs += \"#define MOBILE\".endl();\n    }\n    vs = extensionString + vs + definesStr + structStrings[0] + uniformsStrVert + \"\\n// -- \\n\" + this.srcVert;\n    fs = extensionString + fs + definesStr + structStrings[1] + uniformsStrFrag + \"\\n// -- \\n\" + this.srcFrag;\n\n\n    let srcHeadVert = \"\";\n    let srcHeadFrag = \"\";\n\n    this._modules.sort(function (a, b)\n    {\n        return a.group - b.group;\n    });\n\n    this._modules.sort(function (a, b)\n    {\n        return a.priority || 0 - b.priority || 0;\n    });\n\n\n    let addedAttribs = false;\n\n    for (let i = 0; i < this._moduleNames.length; i++)\n    {\n        let srcVert = \"\";\n        let srcFrag = \"\";\n\n        if (!addedAttribs)\n        {\n            addedAttribs = true;\n\n            for (let k = 0; k < this._attributes.length; k++)\n            {\n                const r = this._getAttrSrc(this._attributes[k], true);\n                if (r.srcHeadVert)srcHeadVert += r.srcHeadVert;\n                if (r.srcVert)srcVert += r.srcVert;\n                if (r.srcHeadFrag)srcHeadFrag += r.srcHeadFrag;\n            }\n        }\n\n        for (let j = 0; j < this._modules.length; j++)\n        {\n            const mod = this._modules[j];\n            if (mod.name == this._moduleNames[i])\n            {\n                srcHeadVert += \"\\n//---- MOD: group:\" + mod.group + \": idx:\" + j + \" - prfx:\" + mod.prefix + \" - \" + mod.title + \" ------\\n\";\n                srcHeadFrag += \"\\n//---- MOD: group:\" + mod.group + \": idx:\" + j + \" - prfx:\" + mod.prefix + \" - \" + mod.title + \" ------\\n\";\n\n                srcVert += \"\\n\\n//---- MOD: \" + mod.title + \" / \" + mod.priority + \" ------\\n\";\n                srcFrag += \"\\n\\n//---- MOD: \" + mod.title + \" / \" + mod.priority + \" ------\\n\";\n\n                if (mod.attributes)\n                    for (let k = 0; k < mod.attributes.length; k++)\n                    {\n                        const r = this._getAttrSrc(mod.attributes[k], false);\n                        if (r.srcHeadVert)srcHeadVert += r.srcHeadVert;\n                        if (r.srcVert)srcVert += r.srcVert;\n                        if (r.srcHeadFrag)srcHeadFrag += r.srcHeadFrag;\n                    }\n\n                srcHeadVert += mod.srcHeadVert || \"\";\n                srcHeadFrag += mod.srcHeadFrag || \"\";\n                srcVert += mod.srcBodyVert || \"\";\n                srcFrag += mod.srcBodyFrag || \"\";\n\n                srcHeadVert += \"\\n//---- end mod ------\\n\";\n                srcHeadFrag += \"\\n//---- end mod ------\\n\";\n\n                srcVert += \"\\n//---- end mod ------\\n\";\n                srcFrag += \"\\n//---- end mod ------\\n\";\n\n                srcVert = srcVert.replace(/{{mod}}/g, mod.prefix);\n                srcFrag = srcFrag.replace(/{{mod}}/g, mod.prefix);\n                srcHeadVert = srcHeadVert.replace(/{{mod}}/g, mod.prefix);\n                srcHeadFrag = srcHeadFrag.replace(/{{mod}}/g, mod.prefix);\n\n                srcVert = srcVert.replace(/MOD_/g, mod.prefix);\n                srcFrag = srcFrag.replace(/MOD_/g, mod.prefix);\n                srcHeadVert = srcHeadVert.replace(/MOD_/g, mod.prefix);\n                srcHeadFrag = srcHeadFrag.replace(/MOD_/g, mod.prefix);\n            }\n        }\n\n\n        vs = vs.replace(\"{{\" + this._moduleNames[i] + \"}}\", srcVert);\n        fs = fs.replace(\"{{\" + this._moduleNames[i] + \"}}\", srcFrag);\n    }\n    vs = vs.replace(\"{{MODULES_HEAD}}\", srcHeadVert);\n    fs = fs.replace(\"{{MODULES_HEAD}}\", srcHeadFrag);\n\n\n    vs = this._addLibs(vs);\n    fs = this._addLibs(fs);\n\n\n    // SETUP draw buffers / multi texture render targets\n\n    let drawBufferStr = \"\";\n    for (let i = 0; i < 16; i++)\n        if (fs.indexOf(\"outColor\" + i) > -1) this._drawBuffers[i] = true;\n\n    if (this._drawBuffers.length == 1)\n    {\n        drawBufferStr = \"out vec4 outColor;\".endl();\n        drawBufferStr += \"#define gl_FragColor outColor\".endl();\n    }\n    else\n    {\n        drawBufferStr += \"#define MULTI_COLORTARGETS\".endl();\n        drawBufferStr += \"vec4 outColor;\".endl();\n\n        let count = 0;\n        for (let i = 0; i < this._drawBuffers.length; i++)\n        {\n            if (count == 0) drawBufferStr += \"#define gl_FragColor outColor\" + i + \"\".endl();\n            drawBufferStr += \"layout(location = \" + i + \") out vec4 outColor\" + i + \";\".endl();\n            count++;\n        }\n    }\n\n    fs = fs.replace(\"{{DRAWBUFFER}}\", drawBufferStr);\n    // //////\n\n\n    if (!this._program)\n    {\n        this._program = this._createProgram(vs, fs);\n    }\n    else\n    {\n        // this.vshader=createShader(vs, gl.VERTEX_SHADER, this.vshader );\n        // this.fshader=createShader(fs, gl.FRAGMENT_SHADER, this.fshader );\n        // linkProgram(program);\n        this._program = this._createProgram(vs, fs);\n\n        this._projMatrixUniform = null;\n\n        for (let i = 0; i < this._uniforms.length; i++) this._uniforms[i].resetLoc();\n    }\n\n    this.finalShaderFrag = fs;\n    this.finalShaderVert = vs;\n\n\n    _cgl_mesh__WEBPACK_IMPORTED_MODULE_3__.MESH.lastMesh = null;\n    _cgl_mesh__WEBPACK_IMPORTED_MODULE_3__.MESH.lastShader = null;\n\n    this._countMissingUniforms = 0;\n    this._needsRecompile = false;\n    this.lastCompile = (0,_timer__WEBPACK_IMPORTED_MODULE_1__.now)();\n\n    // this._cgl.printError(\"shader compile\");\n\n    this._cgl.profileData.shaderCompileTime += performance.now() - startTime;\n};\n\nShader.hasChanged = function ()\n{\n    return this._needsRecompile;\n};\n\n\nShader.prototype.bind = function ()\n{\n    if (!this._isValid || this._cgl.aborted) return;\n\n    _cgl_mesh__WEBPACK_IMPORTED_MODULE_3__.MESH.lastShader = this;\n\n    if (!this._program || this._needsRecompile) this.compile();\n    if (!this._isValid) return;\n\n    if (!this._projMatrixUniform && !this.ignoreMissingUniforms)\n    {\n        this._countMissingUniforms++;\n        // if (this._countMissingUniforms == 10)console.log(\"stopping getlocation of missing uniforms...\", this._name);\n        if (this._countMissingUniforms < 10)\n        {\n            this._projMatrixUniform = this._cgl.gl.getUniformLocation(this._program, _constants__WEBPACK_IMPORTED_MODULE_4__.CONSTANTS.SHADER.SHADERVAR_UNI_PROJMAT);\n            this._attrVertexPos = this._cgl.glGetAttribLocation(this._program, _constants__WEBPACK_IMPORTED_MODULE_4__.CONSTANTS.SHADER.SHADERVAR_VERTEX_POSITION);\n            this._mvMatrixUniform = this._cgl.gl.getUniformLocation(this._program, \"mvMatrix\");\n            this._vMatrixUniform = this._cgl.gl.getUniformLocation(this._program, _constants__WEBPACK_IMPORTED_MODULE_4__.CONSTANTS.SHADER.SHADERVAR_UNI_VIEWMAT);\n            this._mMatrixUniform = this._cgl.gl.getUniformLocation(this._program, _constants__WEBPACK_IMPORTED_MODULE_4__.CONSTANTS.SHADER.SHADERVAR_UNI_MODELMAT);\n            this._camPosUniform = this._cgl.gl.getUniformLocation(this._program, _constants__WEBPACK_IMPORTED_MODULE_4__.CONSTANTS.SHADER.SHADERVAR_UNI_VIEWPOS);\n            this._normalMatrixUniform = this._cgl.gl.getUniformLocation(this._program, _constants__WEBPACK_IMPORTED_MODULE_4__.CONSTANTS.SHADER.SHADERVAR_UNI_NORMALMAT);\n            this._inverseViewMatrixUniform = this._cgl.gl.getUniformLocation(this._program, _constants__WEBPACK_IMPORTED_MODULE_4__.CONSTANTS.SHADER.SHADERVAR_UNI_INVVIEWMAT);\n            this._inverseProjMatrixUniform = this._cgl.gl.getUniformLocation(this._program, _constants__WEBPACK_IMPORTED_MODULE_4__.CONSTANTS.SHADER.SHADERVAR_UNI_INVPROJMAT);\n            this._materialIdUniform = this._cgl.gl.getUniformLocation(this._program, _constants__WEBPACK_IMPORTED_MODULE_4__.CONSTANTS.SHADER.SHADERVAR_UNI_MATERIALID);\n            this._objectIdUniform = this._cgl.gl.getUniformLocation(this._program, _constants__WEBPACK_IMPORTED_MODULE_4__.CONSTANTS.SHADER.SHADERVAR_UNI_OBJECTID);\n\n            for (let i = 0; i < this._uniforms.length; i++) this._uniforms[i].needsUpdate = true;\n        }\n    }\n\n\n    if (this._cgl.currentProgram != this._program)\n    {\n        this._cgl.profileData.profileShaderBinds++;\n        this._cgl.gl.useProgram(this._program);\n        this._cgl.currentProgram = this._program;\n    }\n\n    for (let i = 0; i < this._uniforms.length; i++)\n        if (this._uniforms[i].needsUpdate) this._uniforms[i].updateValue();\n\n    if (this._pMatrixState != this._cgl.getProjectionMatrixStateCount())\n    {\n        this._pMatrixState = this._cgl.getProjectionMatrixStateCount();\n        this._cgl.gl.uniformMatrix4fv(this._projMatrixUniform, false, this._cgl.pMatrix);\n        this._cgl.profileData.profileMVPMatrixCount++;\n    }\n\n    if (this._objectIdUniform)\n        this._cgl.gl.uniform1f(this._objectIdUniform, ++this._cgl.frameStore.objectIdCounter);\n\n    if (this._materialIdUniform)\n        this._cgl.gl.uniform1f(this._materialIdUniform, this._materialId);\n\n    if (this._vMatrixUniform)\n    {\n        if (this._vMatrixState != this._cgl.getViewMatrixStateCount())\n        {\n            this._cgl.gl.uniformMatrix4fv(this._vMatrixUniform, false, this._cgl.vMatrix);\n            this._cgl.profileData.profileMVPMatrixCount++;\n            this._vMatrixState = this._cgl.getViewMatrixStateCount();\n\n            if (this._inverseViewMatrixUniform)\n            {\n                mat4.invert(this._tempInverseViewMatrix, this._cgl.vMatrix);\n                this._cgl.gl.uniformMatrix4fv(this._inverseViewMatrixUniform, false, this._tempInverseViewMatrix);\n                this._cgl.profileData.profileMVPMatrixCount++;\n            }\n            if (this._inverseProjMatrixUniform)\n            {\n                mat4.invert(this._tempInverseProjMatrix, this._cgl.pMatrix);\n                this._cgl.gl.uniformMatrix4fv(this._inverseProjMatrixUniform, false, this._tempInverseProjMatrix);\n                this._cgl.profileData.profileMVPMatrixCount++;\n            }\n        }\n        this._cgl.gl.uniformMatrix4fv(this._mMatrixUniform, false, this._cgl.mMatrix);\n        this._cgl.profileData.profileMVPMatrixCount++;\n\n        if (this._camPosUniform)\n        {\n            mat4.invert(this._tempCamPosMatrix, this._cgl.vMatrix);\n            this._cgl.gl.uniform3f(this._camPosUniform, this._tempCamPosMatrix[12], this._tempCamPosMatrix[13], this._tempCamPosMatrix[14]);\n            this._cgl.profileData.profileMVPMatrixCount++;\n        }\n    }\n    else\n    {\n        // mvmatrix deprecated....\n        const tempmv = mat4.create();\n\n        mat4.mul(tempmv, this._cgl.vMatrix, this._cgl.mMatrix);\n        this._cgl.gl.uniformMatrix4fv(this._mvMatrixUniform, false, tempmv);\n        this._cgl.profileData.profileMVPMatrixCount++;\n    }\n\n    if (this._normalMatrixUniform)\n    {\n        // mat4.mul(this._tempNormalMatrix, this._cgl.vMatrix, this._cgl.mMatrix);\n        mat4.invert(this._tempNormalMatrix, this._cgl.mMatrix);\n        mat4.transpose(this._tempNormalMatrix, this._tempNormalMatrix);\n\n        this._cgl.gl.uniformMatrix4fv(this._normalMatrixUniform, false, this._tempNormalMatrix);\n        this._cgl.profileData.profileMVPMatrixCount++;\n    }\n\n    for (let i = 0; i < this._libs.length; i++)\n    {\n        if (this._libs[i].onBind) this._libs[i].onBind.bind(this._libs[i])(this._cgl, this);\n    }\n\n    this._bindTextures();\n\n    return this._isValid;\n};\n\nShader.prototype.unBind = function ()\n{\n};\n\n/**\n * easily enable/disable a define without a value\n * @function toggleDefine\n * @memberof Shader\n * @instance\n * @param {name} name\n * @param {any} value or port\n */\nShader.prototype.toggleDefine = function (name, enabled)\n{\n    if (enabled && typeof (enabled) == \"object\" && enabled.addEventListener) // port\n    {\n        if (enabled.changeListener)enabled.removeEventListener(enabled.changeListener);\n\n        enabled.onToggleDefine = (v) =>\n        {\n            this.toggleDefine(name, v);\n        };\n\n        enabled.changeListener = enabled.on(\"change\", enabled.onToggleDefine);\n        enabled = enabled.get();\n    }\n\n    if (enabled) this.define(name);\n    else this.removeDefine(name);\n};\n\n/**\n * add a define to a shader, e.g.  #define DO_THIS_THAT 1\n * @function define\n * @memberof Shader\n * @instance\n * @param {String} name\n * @param {Any} value (can be empty)\n */\nShader.prototype.define = function (name, value)\n{\n    if (value === null || value === undefined) value = \"\";\n\n    if (typeof (value) == \"object\") // port\n    {\n        value.removeEventListener(\"change\", value.onDefineChange);\n        value.onDefineChange = (v) =>\n        {\n            this.define(name, v);\n        };\n        value.on(\"change\", value.onDefineChange);\n\n        value = value.get();\n    }\n\n\n    for (let i = 0; i < this._defines.length; i++)\n    {\n        if (this._defines[i][0] == name && this._defines[i][1] == value) return;\n        if (this._defines[i][0] == name)\n        {\n            this._defines[i][1] = value;\n            this.setWhyCompile(\"define \" + name + \" \" + value);\n\n            this._needsRecompile = true;\n            return;\n        }\n    }\n    this.setWhyCompile(\"define \" + name + \" \" + value);\n    this._needsRecompile = true;\n    this._defines.push([name, value]);\n};\n\nShader.prototype.getDefines = function ()\n{\n    return this._defines;\n};\n\nShader.prototype.getDefine = function (name)\n{\n    for (let i = 0; i < this._defines.length; i++)\n        if (this._defines[i][0] == name) return this._defines[i][1];\n    return null;\n};\n\n/**\n * return true if shader has define\n * @function hasDefine\n * @memberof Shader\n * @instance\n * @param {String} name\n * @return {Boolean}\n */\nShader.prototype.hasDefine = function (name)\n{\n    for (let i = 0; i < this._defines.length; i++)\n        if (this._defines[i][0] == name) return true;\n};\n\n/**\n * remove a define from a shader\n * @param {name} name\n * @function removeDefine\n * @memberof Shader\n * @instance\n */\nShader.prototype.removeDefine = function (name)\n{\n    for (let i = 0; i < this._defines.length; i++)\n    {\n        if (this._defines[i][0] == name)\n        {\n            this._defines.splice(i, 1);\n            this._needsRecompile = true;\n\n            this.setWhyCompile(\"define removed:\" + name);\n\n            return;\n        }\n    }\n};\n\n/**\n * remove a module from shader\n * @function removeModule\n * @memberof Shader\n * @instance\n * @param {shaderModule} module the module to be removed\n */\nShader.prototype.removeModule = function (mod)\n{\n    for (let i = 0; i < this._modules.length; i++)\n    {\n        if (mod && mod.id)\n        {\n            if (this._modules[i].id == mod.id || !this._modules[i])\n            {\n                let found = true;\n                while (found)\n                {\n                    found = false;\n                    for (let j = 0; j < this._uniforms.length; j++)\n                    {\n                        if (this._uniforms[j].getName().indexOf(mod.prefix) == 0)\n                        {\n                            this._uniforms.splice(j, 1);\n                            found = true;\n                            continue;\n                        }\n                    }\n                }\n\n                this._needsRecompile = true;\n                this.setWhyCompile(\"remove module \" + mod.title);\n                this._modules.splice(i, 1);\n                break;\n            }\n        }\n    }\n};\n\n\nShader.prototype.getNumModules = function ()\n{\n    return this._modules.length;\n};\n\n\nShader.prototype.getCurrentModules = function () { return this._modules; };\n\n\n/**\n * add a module\n * @function addModule\n * @memberof Shader\n * @instance\n * @param {shaderModule} module the module to be added\n * @param {shaderModule} [sibling] sibling module, new module will share the same group\n */\nShader.prototype.addModule = function (mod, sibling)\n{\n    if (this.hasModule(mod.id)) return;\n    if (!mod.id) mod.id = CABLES.simpleId();\n    if (!mod.numId) mod.numId = this._moduleNumId;\n    if (!mod.num)mod.num = this._modules.length;\n    if (sibling && !sibling.group) sibling.group = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.simpleId)();\n\n    if (!mod.group)\n        if (sibling) mod.group = sibling.group;\n        else mod.group = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.simpleId)();\n\n    mod.prefix = \"mod\" + mod.group + \"_\";\n    this._modules.push(mod);\n\n    this._needsRecompile = true;\n    this.setWhyCompile(\"add module \" + mod.title);\n    this._moduleNumId++;\n\n    return mod;\n};\n\nShader.prototype.hasModule = function (modId)\n{\n    for (let i = 0; i < this._modules.length; i++)\n    {\n        if (this._modules[i].id == modId) return true;\n    }\n    return false;\n};\n\nShader.prototype.setModules = function (names)\n{\n    this._moduleNames = names;\n};\n\nShader.prototype.dispose = function ()\n{\n    this._cgl.gl.deleteProgram(this._program);\n};\n\nShader.prototype.needsRecompile = function ()\n{\n    return this._needsRecompile;\n};\n\nShader.prototype.setDrawBuffers = function (arr)\n{\n    console.log(\"useless drawbuffers...?!\");\n    // if (this._drawBuffers.length !== arr.length)\n    // {\n    //     this._drawBuffers = arr;\n    //     this._needsRecompile = true;\n    //     this.setWhyCompile(\"setDrawBuffers\");\n    //     return;\n    // }\n    // for (let i = 0; i < arr.length; i++)\n    // {\n    //     if (arr[i] !== this._drawBuffers[i])\n    //     {\n    //         this._drawBuffers = arr;\n    //         this._needsRecompile = true;\n    //         this.setWhyCompile(\"setDrawBuffers\");\n    //         return;\n    //     }\n    // }\n};\n\nShader.prototype.getUniforms = function ()\n{\n    return this._uniforms;\n};\n\nShader.prototype.getUniform = function (name)\n{\n    for (let i = 0; i < this._uniforms.length; i++)\n        if (this._uniforms[i].getName() == name)\n            return this._uniforms[i];\n    return null;\n};\n\nShader.prototype.removeAllUniforms = function ()\n{\n    this._uniforms = [];\n    // for (let i = 0; i < this._uniforms.length; i++)\n    //     this.removeUniform(this._uniforms[i].name);\n};\n\nShader.prototype.removeUniform = function (name)\n{\n    for (let i = 0; i < this._uniforms.length; i++)\n    {\n        if (this._uniforms[i].getName() == name)\n        {\n            this._uniforms.splice(i, 1);\n        }\n    }\n    this._needsRecompile = true;\n    this.setWhyCompile(\"remove uniform \" + name);\n};\n\n\nShader.prototype._addUniform = function (uni)\n{\n    this._uniforms.push(uni);\n    this.setWhyCompile(\"add uniform \" + name);\n    this._needsRecompile = true;\n};\n\n/**\n * add a uniform to the fragment shader\n * @param {String} type ['f','t', etc]\n * @param {String} name\n * @param {any} value or port\n * @memberof Shader\n * @instance\n * @function addUniformFrag\n * @returns {CGL.Uniform}\n */\nShader.prototype.addUniformFrag = function (type, name, valueOrPort, p2, p3, p4)\n{\n    const uni = new CGL.Uniform(this, type, name, valueOrPort, p2, p3, p4);\n    uni.shaderType = \"frag\";\n    return uni;\n};\n\n/**\n * add a uniform to the vertex shader\n * @param {String} type ['f','t', etc]\n * @param {String} name\n * @param {any} value or port\n * @memberof Shader\n * @instance\n * @function addUniformVert\n * @returns {CGL.Uniform}\n */\nShader.prototype.addUniformVert = function (type, name, valueOrPort, p2, p3, p4)\n{\n    const uni = new CGL.Uniform(this, type, name, valueOrPort, p2, p3, p4);\n    uni.shaderType = \"vert\";\n    return uni;\n};\n/**\n * add a uniform to both shaders\n * @param {String} type ['f','t', etc]\n * @param {String} name\n * @param {any} value or port\n * @memberof Shader\n * @instance\n * @function addUniformBoth\n * @returns {CGL.Uniform}\n */\nShader.prototype.addUniformBoth = function (type, name, valueOrPort, p2, p3, p4)\n{\n    const uni = new CGL.Uniform(this, type, name, valueOrPort, p2, p3, p4);\n    uni.shaderType = \"both\";\n    return uni;\n};\n\n/**\n * add a struct & its uniforms to the fragment shader\n * @param {String} structName name of the struct, i.e.: LightStruct\n * @param {String} uniformName name of the struct uniform in the shader, i.e.: lightUni\n * @param {Array} members array of objects containing the struct members. see example for structure\n\n * @memberof Shader\n * @instance\n * @function addUniformStructFrag\n * @returns {Object}\n * @example\n * const shader = new CGL.Shader(cgl, 'MinimalMaterial');\n * shader.setSource(attachments.shader_vert, attachments.shader_frag);\n * shader.addUniformStructFrag(\"Light\", \"uniformLight\", [\n * { \"type\": \"3f\", \"name\": \"position\", \"v1\": null },\n * { \"type\": \"4f\", \"name\": \"color\", \"v1\": inR, v2: inG, v3: inB, v4: inAlpha }\n * ]);\n */\nShader.prototype.addUniformStructFrag = function (structName, uniformName, members)\n{\n    const uniforms = {};\n\n    if (!members) return uniforms;\n\n    for (let i = 0; i < members.length; i += 1)\n    {\n        const member = members[i];\n        if (!this.hasUniform(uniformName + \".\" + member.name))\n        {\n            const uni = new CGL.Uniform(this, member.type, uniformName + \".\" + member.name, member.v1, member.v2, member.v3, member.v4, uniformName, structName, member.name);\n            uni.shaderType = \"frag\";\n            uniforms[uniformName + \".\" + member.name] = uni;\n        }\n    }\n\n    return uniforms;\n};\n\n/**\n * add a struct & its uniforms to the vertex shader\n * @param {String} structName name of the struct, i.e.: LightStruct\n * @param {String} uniformName name of the struct uniform in the shader, i.e.: lightUni\n * @param {Array} members array of objects containing the struct members. see example for structure\n\n * @memberof Shader\n * @instance\n * @function addUniformStructVert\n * @returns {CGL.Uniform}\n * @example\n * const shader = new CGL.Shader(cgl, 'MinimalMaterial');\n * shader.setSource(attachments.shader_vert, attachments.shader_frag);\n * shader.addUniformStructVert(\"Light\", \"uniformLight\", [\n * { \"type\": \"3f\", \"name\": \"position\", \"v1\": null },\n * { \"type\": \"4f\", \"name\": \"color\", \"v1\": inR, v2: inG, v3: inB, v4: inAlpha }\n * ]);\n */\nShader.prototype.addUniformStructVert = function (structName, uniformName, members)\n{\n    const uniforms = {};\n\n    if (!members) return uniforms;\n\n    for (let i = 0; i < members.length; i += 1)\n    {\n        const member = members[i];\n        if (!this.hasUniform(uniformName + \".\" + member.name))\n        {\n            const uni = new CGL.Uniform(this, member.type, uniformName + \".\" + member.name, member.v1, member.v2, member.v3, member.v4, uniformName, structName, member.name);\n            uni.shaderType = \"vert\";\n            uniforms[uniformName + \".\" + member.name] = uni;\n        }\n    }\n\n    return uniforms;\n};\n\n/**\n * add a struct & its uniforms to the both shaders. PLEASE NOTE: it is not possible to add the same struct to both shaders when it contains ANY integer members.\n * @param {String} structName name of the struct, i.e.: LightStruct\n * @param {String} uniformName name of the struct uniform in the shader, i.e.: lightUni\n * @param {Array} members array of objects containing the struct members. see example for structure\n\n * @memberof Shader\n * @instance\n * @function addUniformStructBoth\n * @returns {Object}\n * @example\n * const shader = new CGL.Shader(cgl, 'MinimalMaterial');\n * shader.setSource(attachments.shader_vert, attachments.shader_frag);\n * shader.addUniformStructBoth(\"Light\", \"uniformLight\", [\n * { \"type\": \"3f\", \"name\": \"position\", \"v1\": null },\n * { \"type\": \"4f\", \"name\": \"color\", \"v1\": inR, v2: inG, v3: inB, v4: inAlpha }\n * ]);\n */\nShader.prototype.addUniformStructBoth = function (structName, uniformName, members)\n{\n    const uniforms = {};\n\n    if (!members) return uniforms;\n\n    for (let i = 0; i < members.length; i += 1)\n    {\n        const member = members[i];\n        if ((member.type === \"2i\" || member.type === \"i\" || member.type === \"3i\"))\n            this._log.error(\"Adding an integer struct member to both shaders can potentially error. Please use different structs for each shader. Error occured in struct:\", structName, \" with member:\", member.name, \" of type:\", member.type, \".\");\n        if (!this.hasUniform(uniformName + \".\" + member.name))\n        {\n            const uni = new CGL.Uniform(this, member.type, uniformName + \".\" + member.name, member.v1, member.v2, member.v3, member.v4, uniformName, structName, member.name);\n            uni.shaderType = \"both\";\n            uniforms[uniformName + \".\" + member.name] = uni;\n        }\n    }\n\n    return uniforms;\n};\n\nShader.prototype.hasUniform = function (name)\n{\n    for (let i = 0; i < this._uniforms.length; i++)\n    {\n        if (this._uniforms[i].getName() == name) return true;\n    }\n    return false;\n};\n\nShader.prototype._createProgram = function (vstr, fstr)\n{\n    this._cgl.printError(\"before _createprogram\");\n\n    const program = this._cgl.gl.createProgram();\n\n    this.vshader = Shader.createShader(this._cgl, vstr, this._cgl.gl.VERTEX_SHADER, this);\n    this.fshader = Shader.createShader(this._cgl, fstr, this._cgl.gl.FRAGMENT_SHADER, this);\n\n\n    if (this.vshader && this.fshader)\n    {\n        this._cgl.gl.attachShader(program, this.vshader);\n        this._cgl.gl.attachShader(program, this.fshader);\n\n        this._linkProgram(program, vstr, fstr);\n    }\n    else\n    {\n        this._isValid = false;\n        this._cgl.printError(\"shader _createProgram\");\n        console.log(\"could not link shaderprogram\");\n        return null;\n    }\n\n    this._cgl.printError(\"shader _createProgram\");\n    return program;\n};\n\nShader.prototype.hasErrors = function ()\n{\n    return this._hasErrors;\n};\n\nShader.prototype._linkProgram = function (program, vstr, fstr)\n{\n    this._cgl.printError(\"before _linkprogram\");\n\n    if (this._feedBackNames.length > 0)\n    {\n        this._cgl.gl.transformFeedbackVaryings(program, this._feedBackNames, this._cgl.gl.SEPARATE_ATTRIBS);\n        // INTERLEAVED_ATTRIBS\n        // SEPARATE_ATTRIBS\n    }\n\n    this._cgl.gl.linkProgram(program);\n    this._cgl.printError(\"gl.linkprogram\");\n    this._isValid = true;\n\n    this._hasErrors = false;\n\n    if (this._cgl.patch.config.glValidateShader !== false)\n    {\n        this._cgl.gl.validateProgram(program);\n\n        if (!this._cgl.gl.getProgramParameter(program, this._cgl.gl.VALIDATE_STATUS))\n        {\n            // validation failed\n            console.log(\"shaderprogram validation failed...\");\n            console.log(this._name + \" programinfo: \", this._cgl.gl.getProgramInfoLog(program));\n        }\n\n        if (!this._cgl.gl.getProgramParameter(program, this._cgl.gl.LINK_STATUS))\n        {\n            this._hasErrors = true;\n            this._log.warn(this._cgl.gl.getShaderInfoLog(this.fshader) || \"empty shader infolog\");\n            this._log.warn(this._cgl.gl.getShaderInfoLog(this.vshader) || \"empty shader infolog\");\n            this._log.error(this._name + \" shader linking fail...\");\n\n            // console.log(\"srcFrag\", fstr);\n            // console.log(\"srcVert\", vstr);\n            console.log(this._name + \" programinfo: \", this._cgl.gl.getProgramInfoLog(program));\n\n            console.log(\"--------------------------------------\");\n            console.log(this);\n            console.log(\"--------------------------------------\");\n            this._isValid = false;\n\n            this._name = \"errorshader\";\n            this.setSource(Shader.getDefaultVertexShader(), Shader.getErrorFragmentShader());\n            this._cgl.printError(\"shader link err\");\n        }\n    }\n};\n\nShader.prototype.getProgram = function ()\n{\n    return this._program;\n};\n\nShader.prototype.setFeedbackNames = function (names)\n{\n    this.setWhyCompile(\"setFeedbackNames\");\n    this._needsRecompile = true;\n    this._feedBackNames = names;\n};\n\nShader.prototype.getDefaultVertexShader = Shader.getDefaultVertexShader = function ()\n{\n    return _cgl_shader_default_glsl_vert__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\n};\n\nShader.prototype.getDefaultFragmentShader = Shader.getDefaultFragmentShader = function (r, g, b)\n{\n    if (r == undefined)\n    {\n        r = 0.5;\n        g = 0.5;\n        b = 0.5;\n    }\n    return \"\"\n        .endl() + \"IN vec2 texCoord;\"\n        .endl() + \"{{MODULES_HEAD}}\"\n        .endl() + \"void main()\"\n        .endl() + \"{\"\n        .endl() + \"    vec4 col=vec4(\" + r + \",\" + g + \",\" + b + \",1.0);\"\n        .endl() + \"    {{MODULE_COLOR}}\"\n        .endl() + \"    outColor = col;\"\n        .endl() + \"}\";\n};\n\n/**\n  * adds attribute definition to shader header without colliding with other shader modules...\n * when attrFrag is defined, vertex shader will output this attribute to the fragment shader\n * @function\n * @memberof Shader\n * @instance\n * @param {Object} attribObject {type:x,name:x,[nameFrag:x]}\n * @return {Object}\n */\nShader.prototype.addAttribute = function (attr)\n{\n    for (let i = 0; i < this._attributes.length; i++)\n    {\n        if (this._attributes[i].name == attr.name && this._attributes[i].nameFrag == attr.nameFrag) return;\n    }\n    this._attributes.push(attr);\n    this._needsRecompile = true;\n    this.setWhyCompile(\"addAttribute\");\n};\n\nShader.prototype.bindTextures =\nShader.prototype._bindTextures = function ()\n{\n    if (this._textureStackTex.length > this._cgl.maxTextureUnits)\n    {\n        this._log.warn(\"[shader._bindTextures] too many textures bound\", this._textureStackTex.length + \"/\" + this._cgl.maxTextureUnits);\n    }\n\n    // for (let i = this._textureStackTex.length + 1; i < this._cgl.maxTextureUnits; i++) this._cgl.setTexture(i, null);\n\n    for (let i = 0; i < this._textureStackTex.length; i++)\n    {\n        // console.log(this._textureStackTex.length, i);\n        if (!this._textureStackTex[i] && !this._textureStackTexCgl[i])\n        {\n            this._log.warn(\"no texture for pushtexture\", this._name);\n        }\n        else\n        {\n            let t = this._textureStackTex[i];\n            if (this._textureStackTexCgl[i])\n            {\n                t = this._textureStackTexCgl[i].tex || CGL.Texture.getEmptyTexture(this._cgl).tex;\n            }\n\n            let bindOk = true;\n\n            if (!this._textureStackUni[i])\n            {\n                // throw(new Error('no uniform given to texturestack'));\n                this._log.warn(\"no uniform for pushtexture\", this._name);\n                bindOk = this._cgl.setTexture(i, t, this._textureStackType[i]);\n            }\n            else\n            {\n                this._textureStackUni[i].setValue(i);\n                bindOk = this._cgl.setTexture(i, t, this._textureStackType[i]);\n\n                // console.log(bindOk, i, t, this._textureStackType[i]);\n            }\n            if (!bindOk) console.warn(\"tex bind failed\", this.getName(), this._textureStackUni[i]);\n        }\n    }\n};\n\nShader.prototype.setUniformTexture = function (uni, tex)\n{\n    tex = tex || CGL.Texture.getTempTexture(this._cgl);\n    for (let i = 0; i < this._textureStackUni.length; i++)\n        if (this._textureStackUni[i] == uni)\n        {\n            const old = this._textureStackTex[i] || this._textureStackTexCgl[i];\n            if (tex.hasOwnProperty(\"tex\"))\n            {\n                this._textureStackTexCgl[i] = tex;\n                this._textureStackTex[i] = null;\n            }\n            else\n            {\n                this._textureStackTexCgl[i] = null;\n                this._textureStackTex[i] = tex;\n            }\n\n            // this._textureStackTex[i] = tex;\n            // this._cgl.setTexture(i, tex, this._textureStackType[i]);\n            return old;\n        }\n    return null;\n};\n\n/**\n * push a texture on the stack. those textures will be bound when binding the shader. texture slots are automatically set\n * @param {uniform} texture uniform\n * @param {texture} texture\n * @param {type} texture type, can be ignored when TEXTURE_2D\n * @function pushTexture\n * @memberof Shader\n * @instance\n */\nShader.prototype.pushTexture = function (uniform, t, type)\n{\n    if (!uniform)\n    {\n        console.log(\"no uniform given to texturestack\", uniform);\n        return;\n    }\n    if (!t)\n    {\n        return;\n    }\n    if (!t.hasOwnProperty(\"tex\") && !(t instanceof WebGLTexture))\n    {\n        this._log.warn(new Error(\"invalid texture\").stack);\n\n        this._log.warn(\"[cgl_shader] invalid texture...\", t);\n        return;\n    }\n\n    this._textureStackUni.push(uniform);\n\n    if (t.hasOwnProperty(\"tex\"))\n    {\n        this._textureStackTexCgl.push(t);\n        this._textureStackTex.push(null);\n    }\n    else\n    {\n        this._textureStackTexCgl.push(null);\n        this._textureStackTex.push(t);\n    }\n\n    this._textureStackType.push(type);\n};\n\n/**\n * pop last texture\n * @function popTexture\n * @memberof Shader\n * @instance\n */\nShader.prototype.popTexture = function ()\n{\n    this._textureStackUni.pop();\n    this._textureStackTex.pop();\n    this._textureStackTexCgl.pop();\n    this._textureStackType.pop();\n};\n\n/**\n * pop all textures\n * @function popTextures\n * @memberof Shader\n * @instance\n */\nShader.prototype.popTextures = function ()\n{\n    this._textureStackTex.length =\n    this._textureStackTexCgl.length =\n    this._textureStackType.length =\n    this._textureStackUni.length = 0;\n};\n\nShader.prototype.getMaterialId = function ()\n{\n    return this._materialId;\n};\n\nShader.prototype.getInfo = function ()\n{\n    const info = {};\n    info.name = this._name;\n    // info.modules = JSON.parse(JSON.stringify(this._modules));\n    // info.defines = JSON.parse(JSON.stringify(this._defines));\n    info.defines = this.getDefines();\n    info.hasErrors = this.hasErrors();\n\n    return info;\n};\n\n// --------------------------\n\nShader.getErrorFragmentShader = function ()\n{\n    return \"\"\n        .endl() + \"void main()\"\n        .endl() + \"{\"\n        .endl() + \"   float g=mod((gl_FragCoord.y+gl_FragCoord.x),50.0)/50.0;\"\n        .endl() + \"   g= step(0.1,g);\"\n        .endl() + \"   outColor = vec4( g+0.5, 0.0, 0.0, 1.0);\"\n        .endl() + \"}\";\n};\n\nShader.createShader = function (cgl, str, type, cglShader)\n{\n    if (cgl.aborted) return;\n\n    // cgl.printError(\"[Shader.createShader] \", cglShader._name);\n\n    function getBadLines(infoLog)\n    {\n        const basLines = [];\n        const lines = infoLog.split(\"\\n\");\n        for (const i in lines)\n        {\n            const divide = lines[i].split(\":\");\n            if (parseInt(divide[2], 10)) basLines.push(parseInt(divide[2], 10));\n        }\n        return basLines;\n    }\n\n\n    const shader = cgl.gl.createShader(type);\n    cgl.gl.shaderSource(shader, str);\n    cgl.gl.compileShader(shader);\n\n    if (!cgl.gl.getShaderParameter(shader, cgl.gl.COMPILE_STATUS))\n    {\n        let infoLog = cgl.gl.getShaderInfoLog(shader);\n        if (!infoLog)\n        {\n            console.warn(\"empty shader info log\", this._name);\n            return;\n        }\n\n        console.log(\"compile status: \");\n\n        const badLines = getBadLines(infoLog);\n        let htmlWarning = \"<pre style=\\\"margin-bottom:0px;\\\"><code class=\\\"shaderErrorCode language-glsl\\\" style=\\\"padding-bottom:0px;max-height: initial;max-width: initial;\\\">\";\n        const lines = str.match(/^.*((\\r\\n|\\n|\\r)|$)/gm);\n\n        if (!cgl.aborted && infoLog)\n        {\n            if (type == cgl.gl.VERTEX_SHADER) console.log(\"VERTEX_SHADER\");\n            if (type == cgl.gl.FRAGMENT_SHADER) console.log(\"FRAGMENT_SHADER\");\n\n            for (const i in lines)\n            {\n                const j = parseInt(i, 10) + 1;\n                const line = j + \": \" + lines[i];\n                console.log(line);\n\n                let isBadLine = false;\n                for (const bj in badLines)\n                    if (badLines[bj] == j) isBadLine = true;\n\n                if (isBadLine)\n                {\n                    htmlWarning += \"</code></pre>\";\n                    // htmlWarning += \"<span class=\\\"shaderErrorCode error\\\">\";\n                    htmlWarning += \"<pre style=\\\"margin:0\\\"><code class=\\\"language-glsl\\\" style=\\\"background-color:#660000;padding-top:0px;padding-bottom:0px\\\">\";\n                }\n                htmlWarning += (0,_cgl_utils__WEBPACK_IMPORTED_MODULE_5__.escapeHTML)(line);\n\n                if (isBadLine)\n                {\n                    htmlWarning += \"</code></pre>\";\n                    htmlWarning += \"<pre style=\\\"margin:0\\\"><code class=\\\"language-glsl\\\" style=\\\";padding-top:0px;padding-bottom:0px\\\">\";\n                }\n            }\n        }\n\n        console.warn(infoLog);\n\n        infoLog = infoLog.replace(/\\n/g, \"<br/>\");\n        if (cgl.patch.isEditorMode())console.log(\"Shader error \", cglShader._name, infoLog, this);\n\n        htmlWarning = infoLog + \"<br/>\" + htmlWarning + \"<br/><br/>\";\n        htmlWarning += \"</code></pre>\";\n\n        cgl.patch.emitEvent(\"criticalError\", { \"title\": \"Shader error \" + cglShader._name, \"text\": htmlWarning, \"exception\": { \"message\": infoLog } });\n\n        // this._name = \"errorshader\";\n        cglShader.setSource(Shader.getDefaultVertexShader(), Shader.getErrorFragmentShader());\n    }\n    else\n    {\n        // console.log(name+' shader compiled...');\n    }\n    // cgl.printError(\"shader create2\");\n    return shader;\n};\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_shader.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_shader_lib.js":
/*!****************************************!*\
  !*** ./src/core/cgl/cgl_shader_lib.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ShaderLibMods\": () => (/* binding */ ShaderLibMods)\n/* harmony export */ });\n/* harmony import */ var _cgl_shader_uniform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cgl_shader_uniform */ \"./src/core/cgl/cgl_shader_uniform.js\");\n/* harmony import */ var _cgl_texture__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cgl_texture */ \"./src/core/cgl/cgl_texture.js\");\n/* harmony import */ var _cgl_textureeffect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cgl_textureeffect */ \"./src/core/cgl/cgl_textureeffect.js\");\n\n\n\n\nconst ShaderLibMods = {\n    \"CGL.BLENDMODES\": function ()\n    {\n        this.name = \"blendmodes\";\n        this.srcHeadFrag = _cgl_textureeffect__WEBPACK_IMPORTED_MODULE_2__.TextureEffect.getBlendCode();\n    },\n    \"CGL.BLENDMODES3\": function ()\n    {\n        this.name = \"blendmodes3\";\n        this.srcHeadFrag = _cgl_textureeffect__WEBPACK_IMPORTED_MODULE_2__.TextureEffect.getBlendCode(3);\n    },\n\n    \"CGL.LUMINANCE\": function ()\n    {\n        this.name = \"luminance\";\n        this.srcHeadFrag = \"\".endl()\n            + \"float cgl_luminance(vec3 c)\".endl()\n            + \"{\".endl()\n            + \"    return dot(vec3(0.2126,0.7152,0.0722),c);\".endl()\n            + \"}\".endl();\n    },\n\n\n    // quite good random numbers, but somehow don't work in ANGLE\n    \"CGL.RANDOM_OLD\": function ()\n    {\n        this.name = \"randomNumber\";\n        this.srcHeadFrag = \"\".endl()\n            + \"float cgl_random(vec2 co)\".endl()\n            + \"{\".endl()\n            + \"    return fract(sin(dot(co.xy ,vec2(12.9898,4.1414))) * 432758.5453);\".endl()\n            + \"}\".endl()\n            + \"vec3 cgl_random3(vec2 co)\".endl()\n            + \"{\".endl()\n            + \"    return vec3( cgl_random(co),cgl_random(co+0.5711),cgl_random(co+1.5711));\".endl()\n            + \"}\";\n    },\n\n\n    // low quality generative ranodm numbers\n    \"CGL.RANDOM_LOW\": function ()\n    {\n        this.name = \"randomNumber\";\n        this.srcHeadFrag = \"\".endl()\n            + \"float cgl_random(vec2 co)\".endl()\n            + \"{\".endl()\n            + \"    return fract(sin(dot(co.xy ,vec2(12.9898,4.1414))) * 358.5453);\".endl()\n            + \"}\".endl()\n            + \"vec3 cgl_random3(vec2 co)\".endl()\n            + \"{\".endl()\n            + \"    return vec3( cgl_random(co),cgl_random(co+0.5711),cgl_random(co+1.5711));\".endl()\n            + \"}\";\n    },\n\n    // texture based random numbers\n    \"CGL.RANDOM_TEX\": function ()\n    {\n        this.name = \"randomNumbertex\";\n        this.srcHeadFrag = \"\".endl()\n            + \"UNI sampler2D CGLRNDTEX;\".endl()\n            + \"float cgl_random(vec2 co)\".endl()\n            + \"{\".endl()\n            + \"    return texture(CGLRNDTEX,co*5711.0).r;\".endl()\n            + \"}\".endl()\n            + \"vec3 cgl_random3(vec2 co)\".endl()\n            + \"{\".endl()\n            + \"    return texture(CGLRNDTEX,co*5711.0).rgb;\".endl()\n            + \"}\";\n\n        this.initUniforms = function (shader)\n        {\n            return [new _cgl_shader_uniform__WEBPACK_IMPORTED_MODULE_0__.Uniform(shader, \"t\", \"CGLRNDTEX\", 7)];\n        };\n\n        this.onBind = function (cgl, shader)\n        {\n            _cgl_texture__WEBPACK_IMPORTED_MODULE_1__.Texture.getRandomTexture(cgl);\n            cgl.setTexture(7, _cgl_texture__WEBPACK_IMPORTED_MODULE_1__.Texture.getRandomTexture(cgl).tex);\n        };\n    },\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ2wvY2dsX3NoYWRlcl9saWIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NnbC9jZ2xfc2hhZGVyX2xpYi5qcz9mZTk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVuaWZvcm0gfSBmcm9tIFwiLi9jZ2xfc2hhZGVyX3VuaWZvcm1cIjtcbmltcG9ydCB7IFRleHR1cmUgfSBmcm9tIFwiLi9jZ2xfdGV4dHVyZVwiO1xuaW1wb3J0IHsgVGV4dHVyZUVmZmVjdCB9IGZyb20gXCIuL2NnbF90ZXh0dXJlZWZmZWN0XCI7XG5cbmNvbnN0IFNoYWRlckxpYk1vZHMgPSB7XG4gICAgXCJDR0wuQkxFTkRNT0RFU1wiOiBmdW5jdGlvbiAoKVxuICAgIHtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJibGVuZG1vZGVzXCI7XG4gICAgICAgIHRoaXMuc3JjSGVhZEZyYWcgPSBUZXh0dXJlRWZmZWN0LmdldEJsZW5kQ29kZSgpO1xuICAgIH0sXG4gICAgXCJDR0wuQkxFTkRNT0RFUzNcIjogZnVuY3Rpb24gKClcbiAgICB7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiYmxlbmRtb2RlczNcIjtcbiAgICAgICAgdGhpcy5zcmNIZWFkRnJhZyA9IFRleHR1cmVFZmZlY3QuZ2V0QmxlbmRDb2RlKDMpO1xuICAgIH0sXG5cbiAgICBcIkNHTC5MVU1JTkFOQ0VcIjogZnVuY3Rpb24gKClcbiAgICB7XG4gICAgICAgIHRoaXMubmFtZSA9IFwibHVtaW5hbmNlXCI7XG4gICAgICAgIHRoaXMuc3JjSGVhZEZyYWcgPSBcIlwiLmVuZGwoKVxuICAgICAgICAgICAgKyBcImZsb2F0IGNnbF9sdW1pbmFuY2UodmVjMyBjKVwiLmVuZGwoKVxuICAgICAgICAgICAgKyBcIntcIi5lbmRsKClcbiAgICAgICAgICAgICsgXCIgICAgcmV0dXJuIGRvdCh2ZWMzKDAuMjEyNiwwLjcxNTIsMC4wNzIyKSxjKTtcIi5lbmRsKClcbiAgICAgICAgICAgICsgXCJ9XCIuZW5kbCgpO1xuICAgIH0sXG5cblxuICAgIC8vIHF1aXRlIGdvb2QgcmFuZG9tIG51bWJlcnMsIGJ1dCBzb21laG93IGRvbid0IHdvcmsgaW4gQU5HTEVcbiAgICBcIkNHTC5SQU5ET01fT0xEXCI6IGZ1bmN0aW9uICgpXG4gICAge1xuICAgICAgICB0aGlzLm5hbWUgPSBcInJhbmRvbU51bWJlclwiO1xuICAgICAgICB0aGlzLnNyY0hlYWRGcmFnID0gXCJcIi5lbmRsKClcbiAgICAgICAgICAgICsgXCJmbG9hdCBjZ2xfcmFuZG9tKHZlYzIgY28pXCIuZW5kbCgpXG4gICAgICAgICAgICArIFwie1wiLmVuZGwoKVxuICAgICAgICAgICAgKyBcIiAgICByZXR1cm4gZnJhY3Qoc2luKGRvdChjby54eSAsdmVjMigxMi45ODk4LDQuMTQxNCkpKSAqIDQzMjc1OC41NDUzKTtcIi5lbmRsKClcbiAgICAgICAgICAgICsgXCJ9XCIuZW5kbCgpXG4gICAgICAgICAgICArIFwidmVjMyBjZ2xfcmFuZG9tMyh2ZWMyIGNvKVwiLmVuZGwoKVxuICAgICAgICAgICAgKyBcIntcIi5lbmRsKClcbiAgICAgICAgICAgICsgXCIgICAgcmV0dXJuIHZlYzMoIGNnbF9yYW5kb20oY28pLGNnbF9yYW5kb20oY28rMC41NzExKSxjZ2xfcmFuZG9tKGNvKzEuNTcxMSkpO1wiLmVuZGwoKVxuICAgICAgICAgICAgKyBcIn1cIjtcbiAgICB9LFxuXG5cbiAgICAvLyBsb3cgcXVhbGl0eSBnZW5lcmF0aXZlIHJhbm9kbSBudW1iZXJzXG4gICAgXCJDR0wuUkFORE9NX0xPV1wiOiBmdW5jdGlvbiAoKVxuICAgIHtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJyYW5kb21OdW1iZXJcIjtcbiAgICAgICAgdGhpcy5zcmNIZWFkRnJhZyA9IFwiXCIuZW5kbCgpXG4gICAgICAgICAgICArIFwiZmxvYXQgY2dsX3JhbmRvbSh2ZWMyIGNvKVwiLmVuZGwoKVxuICAgICAgICAgICAgKyBcIntcIi5lbmRsKClcbiAgICAgICAgICAgICsgXCIgICAgcmV0dXJuIGZyYWN0KHNpbihkb3QoY28ueHkgLHZlYzIoMTIuOTg5OCw0LjE0MTQpKSkgKiAzNTguNTQ1Myk7XCIuZW5kbCgpXG4gICAgICAgICAgICArIFwifVwiLmVuZGwoKVxuICAgICAgICAgICAgKyBcInZlYzMgY2dsX3JhbmRvbTModmVjMiBjbylcIi5lbmRsKClcbiAgICAgICAgICAgICsgXCJ7XCIuZW5kbCgpXG4gICAgICAgICAgICArIFwiICAgIHJldHVybiB2ZWMzKCBjZ2xfcmFuZG9tKGNvKSxjZ2xfcmFuZG9tKGNvKzAuNTcxMSksY2dsX3JhbmRvbShjbysxLjU3MTEpKTtcIi5lbmRsKClcbiAgICAgICAgICAgICsgXCJ9XCI7XG4gICAgfSxcblxuICAgIC8vIHRleHR1cmUgYmFzZWQgcmFuZG9tIG51bWJlcnNcbiAgICBcIkNHTC5SQU5ET01fVEVYXCI6IGZ1bmN0aW9uICgpXG4gICAge1xuICAgICAgICB0aGlzLm5hbWUgPSBcInJhbmRvbU51bWJlcnRleFwiO1xuICAgICAgICB0aGlzLnNyY0hlYWRGcmFnID0gXCJcIi5lbmRsKClcbiAgICAgICAgICAgICsgXCJVTkkgc2FtcGxlcjJEIENHTFJORFRFWDtcIi5lbmRsKClcbiAgICAgICAgICAgICsgXCJmbG9hdCBjZ2xfcmFuZG9tKHZlYzIgY28pXCIuZW5kbCgpXG4gICAgICAgICAgICArIFwie1wiLmVuZGwoKVxuICAgICAgICAgICAgKyBcIiAgICByZXR1cm4gdGV4dHVyZShDR0xSTkRURVgsY28qNTcxMS4wKS5yO1wiLmVuZGwoKVxuICAgICAgICAgICAgKyBcIn1cIi5lbmRsKClcbiAgICAgICAgICAgICsgXCJ2ZWMzIGNnbF9yYW5kb20zKHZlYzIgY28pXCIuZW5kbCgpXG4gICAgICAgICAgICArIFwie1wiLmVuZGwoKVxuICAgICAgICAgICAgKyBcIiAgICByZXR1cm4gdGV4dHVyZShDR0xSTkRURVgsY28qNTcxMS4wKS5yZ2I7XCIuZW5kbCgpXG4gICAgICAgICAgICArIFwifVwiO1xuXG4gICAgICAgIHRoaXMuaW5pdFVuaWZvcm1zID0gZnVuY3Rpb24gKHNoYWRlcilcbiAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuIFtuZXcgVW5pZm9ybShzaGFkZXIsIFwidFwiLCBcIkNHTFJORFRFWFwiLCA3KV07XG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5vbkJpbmQgPSBmdW5jdGlvbiAoY2dsLCBzaGFkZXIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIFRleHR1cmUuZ2V0UmFuZG9tVGV4dHVyZShjZ2wpO1xuICAgICAgICAgICAgY2dsLnNldFRleHR1cmUoNywgVGV4dHVyZS5nZXRSYW5kb21UZXh0dXJlKGNnbCkudGV4KTtcbiAgICAgICAgfTtcbiAgICB9LFxufTtcblxuZXhwb3J0IHsgU2hhZGVyTGliTW9kcyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_shader_lib.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_shader_uniform.js":
/*!********************************************!*\
  !*** ./src/core/cgl/cgl_shader_uniform.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Uniform\": () => (/* binding */ Uniform)\n/* harmony export */ });\n/* harmony import */ var _cg_cg_uniform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cg/cg_uniform */ \"./src/core/cg/cg_uniform.js\");\n/* harmony import */ var _core_port__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core_port */ \"./src/core/core_port.js\");\n\n\n\n\n/**\n * Shader uniforms\n *\n * types:\n * <pre>\n * f    - float\n * 2f   - vec2\n * 3f   - vec3\n * 4f   - vec4\n * i    - integer\n * t    - texture\n * m4   - mat4, 4x4 float matrix\n * f[]  - array of floats\n * 2f[] - array of float vec2\n * 3f[] - array of float vec3\n * 4f[] - array of float vec4\n * </pre>\n *\n * @external CGL\n * @namespace Uniform\n * @class\n * @param {Shader} shader\n * @param {String} [type=f]\n * @param {String} name\n * @param {Number|Port} value  can be a Number,Matrix or Port\n * @example\n * // bind float uniform called myfloat and initialize with value 1.0\n * const unir=new CGL.Uniform(shader,'f','myfloat',1.0);\n * unir.setValue(1.0);\n *\n * // bind float uniform called myfloat and automatically set it to input port value\n * const myPort=op.inFloat(\"input\");\n * const pv=new CGL.Uniform(shader,'f','myfloat',myPort);\n *\n */\n\n\n// export const Uniform(__shader, __type, __name, _value, _port2, _port3, _port4, _structUniformName, _structName, _propertyName)\n\nclass Uniform extends _cg_cg_uniform__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n{\n    constructor(__shader, __type, __name, _value, _port2, _port3, _port4, _structUniformName, _structName, _propertyName)\n    {\n        super(__shader, __type, __name, _value, _port2, _port3, _port4, _structUniformName, _structName, _propertyName);\n        this._loc = -1;\n        this._cgl = __shader._cgl;\n    }\n\n    get name()\n    {\n        return this._name;\n    }\n\n    copy(newShader)\n    {\n        const uni = new Uniform(newShader, this._type, this._name, this._value, this._port2, this._port3, this._port4, this._structUniformName, this._structName, this._propertyName);\n        uni.shaderType = this.shaderType;\n        return uni;\n    }\n\n    /**\n     * returns type as glsl type string. e.g. 'f' returns 'float'\n     * @function getGlslTypeString\n     * @memberof Uniform\n     * @instance\n     * @return {string} type as string\n     */\n    getGlslTypeString()\n    {\n        return Uniform.glslTypeString(this._type);\n    }\n\n    _isValidLoc()\n    {\n        return this._loc != -1;// && this._loc != null;\n    }\n\n    resetLoc()\n    {\n        this._loc = -1;\n        this.needsUpdate = true;\n    }\n\n    bindTextures() {}\n\n    getLoc()\n    {\n        return this._loc;\n    }\n\n    updateFromPort4f()\n    {\n        this._value[0] = this._port.get();\n        this._value[1] = this._port2.get();\n        this._value[2] = this._port3.get();\n        this._value[3] = this._port4.get();\n        this.setValue(this._value);\n    }\n\n    updateFromPort3f()\n    {\n        this._value[0] = this._port.get();\n        this._value[1] = this._port2.get();\n        this._value[2] = this._port3.get();\n        this.setValue(this._value);\n    }\n\n    updateFromPort2f()\n    {\n        this._value[0] = this._port.get();\n        this._value[1] = this._port2.get();\n        this.setValue(this._value);\n    }\n\n    updateFromPort()\n    {\n        this.setValue(this._port.get());\n    }\n\n    updateValueF()\n    {\n        if (!this._isValidLoc()) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        else this.needsUpdate = false;\n\n        this._shader.getCgl().gl.uniform1f(this._loc, this._value);\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    setValueF(v)\n    {\n        if (v != this._value)\n        {\n            this.needsUpdate = true;\n            this._value = v;\n        }\n    }\n\n    updateValueI()\n    {\n        if (!this._isValidLoc()) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        else this.needsUpdate = false;\n\n        this._shader.getCgl().gl.uniform1i(this._loc, this._value);\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    updateValue2I()\n    {\n        if (!this._value) return;\n\n        if (!this._isValidLoc())\n        {\n            this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n            this._cgl.profileData.profileShaderGetUniform++;\n            this._cgl.profileData.profileShaderGetUniformName = this._name;\n        }\n\n        this._shader.getCgl().gl.uniform2i(this._loc, this._value[0], this._value[1]);\n\n        this.needsUpdate = false;\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    updateValue3I()\n    {\n        if (!this._value) return;\n        if (!this._isValidLoc())\n        {\n            this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n            this._cgl.profileData.profileShaderGetUniform++;\n            this._cgl.profileData.profileShaderGetUniformName = this._name;\n        }\n\n        this._shader.getCgl().gl.uniform3i(this._loc, this._value[0], this._value[1], this._value[2]);\n        this.needsUpdate = false;\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    updateValue4I()\n    {\n        if (!this._isValidLoc())\n        {\n            this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n            this._cgl.profileData.profileShaderGetUniform++;\n            this._cgl.profileData.profileShaderGetUniformName = this._name;\n        }\n        this._shader.getCgl().gl.uniform4i(this._loc, this._value[0], this._value[1], this._value[2], this._value[3]);\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    setValueI(v)\n    {\n        if (v != this._value)\n        {\n            this.needsUpdate = true;\n            this._value = v;\n        }\n    }\n\n    setValue2I(v)\n    {\n        if (!v) return;\n        if (!this._oldValue)\n        {\n            this._oldValue = [v[0] - 1, 1];\n            this.needsUpdate = true;\n        }\n        else if (v[0] != this._oldValue[0] || v[1] != this._oldValue[1])\n        {\n            this._oldValue[0] = v[0];\n            this._oldValue[1] = v[1];\n            this.needsUpdate = true;\n        }\n\n        this._value = v;\n    }\n\n    setValue3I(v)\n    {\n        if (!v) return;\n        if (!this._oldValue)\n        {\n            this._oldValue = [v[0] - 1, 1, 2];\n            this.needsUpdate = true;\n        }\n        else if (v[0] != this._oldValue[0] || v[1] != this._oldValue[1] || v[2] != this._oldValue[2])\n        {\n            this._oldValue[0] = v[0];\n            this._oldValue[1] = v[1];\n            this._oldValue[2] = v[2];\n            this.needsUpdate = true;\n        }\n\n        this._value = v;\n    }\n\n    setValue4I(v)\n    {\n        this.needsUpdate = true;\n        this._value = v || vec4.create();\n    }\n\n    updateValueBool()\n    {\n        if (!this._isValidLoc()) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        else this.needsUpdate = false;\n        this._shader.getCgl().gl.uniform1i(this._loc, this._value ? 1 : 0);\n\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    setValueBool(v)\n    {\n        if (v != this._value)\n        {\n            this.needsUpdate = true;\n            this._value = v;\n        }\n    }\n\n    setValueArray4F(v)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n\n    updateValueArray4F()\n    {\n        if (!this._isValidLoc()) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        else this.needsUpdate = false;\n\n        if (!this._value) return;\n        this._shader.getCgl().gl.uniform4fv(this._loc, this._value);\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    setValueArray3F(v)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n\n    updateValueArray3F()\n    {\n        if (!this._isValidLoc()) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        else this.needsUpdate = false;\n\n        if (!this._value) return;\n        this._shader.getCgl().gl.uniform3fv(this._loc, this._value);\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    setValueArray2F(v)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n\n    updateValueArray2F()\n    {\n        if (!this._isValidLoc()) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        else this.needsUpdate = false;\n\n        if (!this._value) return;\n        this._shader.getCgl().gl.uniform2fv(this._loc, this._value);\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    setValueArrayF(v)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n\n    updateValueArrayF()\n    {\n        if (!this._isValidLoc()) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        else this.needsUpdate = false;\n\n        if (!this._value) return;\n        this._shader.getCgl().gl.uniform1fv(this._loc, this._value);\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    setValueArrayT(v)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n\n\n    updateValue3F()\n    {\n        if (!this._value) return;\n        if (!this._isValidLoc())\n        {\n            this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n            this._cgl.profileData.profileShaderGetUniform++;\n            this._cgl.profileData.profileShaderGetUniformName = this._name;\n        }\n\n        this._shader.getCgl().gl.uniform3f(this._loc, this._value[0], this._value[1], this._value[2]);\n        this.needsUpdate = false;\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    setValue3F(v)\n    {\n        if (!v) return;\n        if (!this._oldValue)\n        {\n            this._oldValue = [v[0] - 1, 1, 2];\n            this.needsUpdate = true;\n        }\n        else if (v[0] != this._oldValue[0] || v[1] != this._oldValue[1] || v[2] != this._oldValue[2])\n        {\n            this._oldValue[0] = v[0];\n            this._oldValue[1] = v[1];\n            this._oldValue[2] = v[2];\n            this.needsUpdate = true;\n        }\n\n        this._value = v;\n    }\n\n    updateValue2F()\n    {\n        if (!this._value) return;\n\n        if (!this._isValidLoc())\n        {\n            this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n            this._cgl.profileData.profileShaderGetUniform++;\n            this._cgl.profileData.profileShaderGetUniformName = this._name;\n        }\n\n        this._shader.getCgl().gl.uniform2f(this._loc, this._value[0], this._value[1]);\n        this.needsUpdate = false;\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    setValue2F(v)\n    {\n        if (!v) return;\n        if (!this._oldValue)\n        {\n            this._oldValue = [v[0] - 1, 1];\n            this.needsUpdate = true;\n        }\n        else if (v[0] != this._oldValue[0] || v[1] != this._oldValue[1])\n        {\n            this._oldValue[0] = v[0];\n            this._oldValue[1] = v[1];\n            this.needsUpdate = true;\n        }\n        this._value = v;\n    }\n\n    updateValue4F()\n    {\n        if (!this._isValidLoc())\n        {\n            this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n            this._cgl.profileData.profileShaderGetUniform++;\n            this._cgl.profileData.profileShaderGetUniformName = this._name;\n        }\n\n        if (!this._value)\n        {\n            this._log.warn(\"no value for uniform\", this._name, this);\n            this._value = [0, 0, 0, 0];\n        }\n\n        this.needsUpdate = false;\n        this._shader.getCgl().gl.uniform4f(this._loc, this._value[0], this._value[1], this._value[2], this._value[3]);\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    setValue4F(v)\n    {\n        if (typeof this.value == \"number\") this.value = vec4.create(); // this should not be needed, but somehow it crashes with some shadermods\n\n        if (!v) return;\n        if (!this._oldValue)\n        {\n            this._oldValue = [v[0] - 1, 1, 2, 3];\n            this.needsUpdate = true;\n        }\n        else if (v[0] != this._oldValue[0] || v[1] != this._oldValue[1] || v[2] != this._oldValue[2] || v[3] != this._oldValue[3])\n        {\n            this._oldValue[0] = v[0];\n            this._oldValue[1] = v[1];\n            this._oldValue[2] = v[2];\n            this.needsUpdate = true;\n        }\n\n        this._value = v;\n    }\n\n    updateValueM4()\n    {\n        if (!this._isValidLoc())\n        {\n            this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n            this._cgl.profileData.profileShaderGetUniform++;\n            this._cgl.profileData.profileShaderGetUniformName = this._name;\n        }\n        if (!this._value || this._value.length % 16 != 0) return console.log(\"this.name\", this._name, this._value);\n\n        this._shader.getCgl().gl.uniformMatrix4fv(this._loc, false, this._value);\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    setValueM4(v)\n    {\n        this.needsUpdate = true;\n        this._value = v || mat4.create();\n    }\n\n    updateValueArrayT()\n    {\n        if (!this._isValidLoc()) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        else this.needsUpdate = false;\n\n        if (!this._value) return;\n        this._shader.getCgl().gl.uniform1iv(this._loc, this._value);\n        this._cgl.profileData.profileUniformCount++;\n    }\n\n    updateValueT()\n    {\n        if (!this._isValidLoc())\n        {\n            this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n            this._cgl.profileData.profileShaderGetUniform++;\n            this._cgl.profileData.profileShaderGetUniformName = this._name;\n        }\n\n        this._cgl.profileData.profileUniformCount++;\n        this._shader.getCgl().gl.uniform1i(this._loc, this._value);\n        this.needsUpdate = false;\n    }\n\n    setValueT(v)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n}\n\n\nUniform.glslTypeString = (t) =>\n{\n    if (t == \"f\") return \"float\";\n    if (t == \"b\") return \"bool\";\n    if (t == \"i\") return \"int\";\n    if (t == \"2i\") return \"ivec2\";\n    if (t == \"2f\") return \"vec2\";\n    if (t == \"3f\") return \"vec3\";\n    if (t == \"4f\") return \"vec4\";\n    if (t == \"m4\") return \"mat4\";\n\n    if (t == \"t\") return \"sampler2D\";\n    if (t == \"tc\") return \"samplerCube\";\n\n    if (t == \"3f[]\") return null; // ignore this for now...\n    if (t == \"m4[]\") return null; // ignore this for now...\n    if (t == \"f[]\") return null; // ignore this for now...\n\n    console.warn(\"[CGL UNIFORM] unknown glsl type string \", t);\n};\n\n\n/**\n * @function setValue\n * @memberof Uniform\n * @instance\n * @param {Number|Array|Matrix|Texture} value\n */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_shader_uniform.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_simplerect.js":
/*!****************************************!*\
  !*** ./src/core/cgl/cgl_simplerect.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MESHES\": () => (/* binding */ MESHES)\n/* harmony export */ });\n/* harmony import */ var _cg_cg_geom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cg/cg_geom */ \"./src/core/cg/cg_geom.js\");\n/* harmony import */ var _cgl_mesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cgl_mesh */ \"./src/core/cgl/cgl_mesh.js\");\n\n\n\n\nconst MESHES = {};\n\nMESHES.getSimpleRect = function (cgl, name)\n{\n    const geom = new _cg_cg_geom__WEBPACK_IMPORTED_MODULE_0__.Geometry(name);\n\n    geom.vertices = [1.0, 1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0];\n    geom.texCoords = [1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0];\n    geom.verticesIndices = [0, 1, 2, 2, 1, 3];\n    geom.vertexNormals = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];\n\n    return new _cgl_mesh__WEBPACK_IMPORTED_MODULE_1__.Mesh(cgl, geom);\n};\n\n\nMESHES.getSimpleCube = function (cgl, name)\n{\n    const geom = new _cg_cg_geom__WEBPACK_IMPORTED_MODULE_0__.Geometry(name);\n    geom.vertices = [-1, -1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1];\n    geom.setTexCoords([0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0,]);\n    geom.verticesIndices = [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23];\n    geom.vertexNormals = new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0]);\n    geom.tangents = new Float32Array([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n    geom.biTangents = new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1]);\n\n    return new _cgl_mesh__WEBPACK_IMPORTED_MODULE_1__.Mesh(cgl, geom);\n};\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ2wvY2dsX3NpbXBsZXJlY3QuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DQUJMRVMvLi9zcmMvY29yZS9jZ2wvY2dsX3NpbXBsZXJlY3QuanM/OWY1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuLi9jZy9jZ19nZW9tXCI7XG5pbXBvcnQgeyBNZXNoIH0gZnJvbSBcIi4vY2dsX21lc2hcIjtcblxuXG5jb25zdCBNRVNIRVMgPSB7fTtcblxuTUVTSEVTLmdldFNpbXBsZVJlY3QgPSBmdW5jdGlvbiAoY2dsLCBuYW1lKVxue1xuICAgIGNvbnN0IGdlb20gPSBuZXcgR2VvbWV0cnkobmFtZSk7XG5cbiAgICBnZW9tLnZlcnRpY2VzID0gWzEuMCwgMS4wLCAwLjAsIC0xLjAsIDEuMCwgMC4wLCAxLjAsIC0xLjAsIDAuMCwgLTEuMCwgLTEuMCwgMC4wXTtcbiAgICBnZW9tLnRleENvb3JkcyA9IFsxLjAsIDEuMCwgMC4wLCAxLjAsIDEuMCwgMC4wLCAwLjAsIDAuMF07XG4gICAgZ2VvbS52ZXJ0aWNlc0luZGljZXMgPSBbMCwgMSwgMiwgMiwgMSwgM107XG4gICAgZ2VvbS52ZXJ0ZXhOb3JtYWxzID0gWzAuMCwgMC4wLCAwLjAsIDAuMCwgMC4wLCAwLjAsIDAuMCwgMC4wLCAwLjAsIDAuMCwgMC4wLCAwLjBdO1xuXG4gICAgcmV0dXJuIG5ldyBNZXNoKGNnbCwgZ2VvbSk7XG59O1xuXG5cbk1FU0hFUy5nZXRTaW1wbGVDdWJlID0gZnVuY3Rpb24gKGNnbCwgbmFtZSlcbntcbiAgICBjb25zdCBnZW9tID0gbmV3IEdlb21ldHJ5KG5hbWUpO1xuICAgIGdlb20udmVydGljZXMgPSBbLTEsIC0xLCAxLCAxLCAtMSwgMSwgMSwgMSwgMSwgLTEsIDEsIDEsIC0xLCAtMSwgLTEsIDEsIC0xLCAtMSwgMSwgMSwgLTEsIC0xLCAxLCAtMSwgLTEsIDEsIC0xLCAxLCAxLCAtMSwgMSwgMSwgMSwgLTEsIDEsIDEsIC0xLCAtMSwgLTEsIDEsIC0xLCAtMSwgMSwgLTEsIDEsIC0xLCAtMSwgMSwgMSwgLTEsIC0xLCAxLCAtMSwgMSwgMSwgMSwgMSwgMSwgMSwgLTEsIC0xLCAtMSwgLTEsIC0xLCAtMSwgMSwgLTEsIDEsIDEsIC0xLCAxLCAtMV07XG4gICAgZ2VvbS5zZXRUZXhDb29yZHMoWzAsIDEsIDEsIDEsIDEsIDAsIDAsIDAsIDEsIDEsIDEsIDAsIDAsIDAsIDAsIDEsIDAsIDAsIDAsIDEsIDEsIDEsIDEsIDAsIDEsIDAsIDAsIDAsIDAsIDEsIDEsIDEsIDEsIDEsIDEsIDAsIDAsIDAsIDAsIDEsIDAsIDEsIDEsIDEsIDEsIDAsIDAsIDAsXSk7XG4gICAgZ2VvbS52ZXJ0aWNlc0luZGljZXMgPSBbMCwgMSwgMiwgMCwgMiwgMywgNCwgNSwgNiwgNCwgNiwgNywgOCwgOSwgMTAsIDgsIDEwLCAxMSwgMTIsIDEzLCAxNCwgMTIsIDE0LCAxNSwgMTYsIDE3LCAxOCwgMTYsIDE4LCAxOSwgMjAsIDIxLCAyMiwgMjAsIDIyLCAyM107XG4gICAgZ2VvbS52ZXJ0ZXhOb3JtYWxzID0gbmV3IEZsb2F0MzJBcnJheShbMC4wLCAwLjAsIDEuMCwgMC4wLCAwLjAsIDEuMCwgMC4wLCAwLjAsIDEuMCwgMC4wLCAwLjAsIDEuMCwgMC4wLCAwLjAsIC0xLjAsIDAuMCwgMC4wLCAtMS4wLCAwLjAsIDAuMCwgLTEuMCwgMC4wLCAwLjAsIC0xLjAsIDAuMCwgMS4wLCAwLjAsIDAuMCwgMS4wLCAwLjAsIDAuMCwgMS4wLCAwLjAsIDAuMCwgMS4wLCAwLjAsIDAuMCwgLTEuMCwgMC4wLCAwLjAsIC0xLjAsIDAuMCwgMC4wLCAtMS4wLCAwLjAsIDAuMCwgLTEuMCwgMC4wLCAxLjAsIDAuMCwgMC4wLCAxLjAsIDAuMCwgMC4wLCAxLjAsIDAuMCwgMC4wLCAxLjAsIDAuMCwgMC4wLCAtMS4wLCAwLjAsIDAuMCwgLTEuMCwgMC4wLCAwLjAsIC0xLjAsIDAuMCwgMC4wLCAtMS4wLCAwLjAsIDAuMF0pO1xuICAgIGdlb20udGFuZ2VudHMgPSBuZXcgRmxvYXQzMkFycmF5KFswLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDFdKTtcbiAgICBnZW9tLmJpVGFuZ2VudHMgPSBuZXcgRmxvYXQzMkFycmF5KFstMSwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDAsIC0xXSk7XG5cbiAgICByZXR1cm4gbmV3IE1lc2goY2dsLCBnZW9tKTtcbn07XG5cblxuZXhwb3J0IHsgTUVTSEVTIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_simplerect.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_state.js":
/*!***********************************!*\
  !*** ./src/core/cgl/cgl_state.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BLENDS\": () => (/* binding */ BLENDS),\n/* harmony export */   \"Context\": () => (/* binding */ Context)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/core/cgl/constants.js\");\n/* harmony import */ var _cgl_shader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cgl_shader */ \"./src/core/cgl/cgl_shader.js\");\n/* harmony import */ var _cgl_profiledata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cgl_profiledata */ \"./src/core/cgl/cgl_profiledata.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core_logger */ \"./src/core/core_logger.js\");\n/* harmony import */ var _cg_cg_state__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../cg/cg_state */ \"./src/core/cg/cg_state.js\");\n/* harmony import */ var _cg_cg_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cg/cg_constants */ \"./src/core/cg/cg_constants.js\");\n\n\n\n\n\n\n\n\n/**\n * cables gl context/state manager\n * @external CGL\n * @namespace Context\n * @class\n * @hideconstructor\n */\n// const Context(_patch)\nclass Context extends _cg_cg_state__WEBPACK_IMPORTED_MODULE_4__.CGState\n{\n    constructor(_patch)\n    {\n        super(_patch);\n        // EventTarget.apply(this);\n        // CGState.apply(this);\n\n        this.gApi = _cg_cg_constants__WEBPACK_IMPORTED_MODULE_5__.CG.GAPI_WEBGL;\n        this.aborted = false;\n\n        this.pushMvMatrix = this.pushModelMatrix; // deprecated and wrong... still used??\n        this.popMvMatrix = this.popmMatrix = this.popModelMatrix;// deprecated and wrong... still used??\n\n        this.profileData = new _cgl_profiledata__WEBPACK_IMPORTED_MODULE_2__.ProfileData(this);\n        this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"cgl_context\");\n        this._viewPort = [0, 0, 0, 0];\n        this.glVersion = 0;\n        this.glUseHalfFloatTex = false;\n        this.clearCanvasTransparent = true;\n        this.clearCanvasDepth = true;\n        this.debugOneFrame = false;\n        this.checkGlErrors = false; // true is slow // false should be default...\n        this.maxTextureUnits = 0;\n        this.maxVaryingVectors = 0;\n        this.currentProgram = null;\n        this._hadStackError = false;\n        this.glSlowRenderer = false;\n        this._isSafariCrap = false;\n\n        this.temporaryTexture = null;\n        this.frameStore = {};\n        this._onetimeCallbacks = [];\n        this.gl = null;\n\n        this._cursor = \"auto\";\n        this._currentCursor = \"\";\n\n        this._viewPortStack = [];\n        this._glFrameBufferStack = [];\n        this._frameBufferStack = [];\n        this._shaderStack = [];\n        this._stackDepthTest = [];\n\n        // this._pixelDensity = ;\n\n\n        this._simpleShader = new _cgl_shader__WEBPACK_IMPORTED_MODULE_1__.Shader(this, \"simpleshader\");\n        this._simpleShader.setModules([\"MODULE_VERTEX_POSITION\", \"MODULE_COLOR\", \"MODULE_BEGIN_FRAG\"]);\n        this._simpleShader.setSource(_cgl_shader__WEBPACK_IMPORTED_MODULE_1__.Shader.getDefaultVertexShader(), _cgl_shader__WEBPACK_IMPORTED_MODULE_1__.Shader.getDefaultFragmentShader());\n\n        this._currentShader = this._simpleShader;\n\n\n        this._oldCanvasWidth = -1;\n        this._oldCanvasHeight = -1;\n        this._enabledExtensions = {};\n    }\n\n    // set pixelDensity(p)\n    // {\n    //     this._pixelDensity = p;\n    // }\n\n    // get pixelDensity()\n    // {\n    //     return this._pixelDensity;\n    // }\n\n\n\n    get viewPort()\n    {\n        if (this._viewPortStack.length > 3)\n        {\n            const l = this._viewPortStack.length;\n\n            return [\n                this._viewPortStack[l - 4],\n                this._viewPortStack[l - 3],\n                this._viewPortStack[l - 2],\n                this._viewPortStack[l - 1]\n            ];\n        }\n        else\n        {\n            // workaround pre viewport stack times / or+and initial value...\n\n            return this._viewPort;\n        }\n    }\n\n\n\n    get mvMatrix() // deprecate\n    {\n        return this.mMatrix;\n    }\n\n    set mvMatrix(m) // deprecate\n    {\n        this.mMatrix = m;\n    }\n\n\n    exitError(msgId, msg)\n    {\n        console.log(msgId, msg);\n        this.patch.exitError(msgId, msg);\n        this.aborted = true;\n    }\n\n\n    _setCanvas(canv)\n    {\n        if (!canv)\n        {\n            this._log.stack(\"_setCanvas undef\");\n        }\n\n        if (!this.patch.config.canvas) this.patch.config.canvas = {};\n        if (!this.patch.config.canvas.hasOwnProperty(\"preserveDrawingBuffer\")) this.patch.config.canvas.preserveDrawingBuffer = false;\n        if (!this.patch.config.canvas.hasOwnProperty(\"premultipliedAlpha\")) this.patch.config.canvas.premultipliedAlpha = false;\n        if (!this.patch.config.canvas.hasOwnProperty(\"alpha\")) this.patch.config.canvas.alpha = false;\n\n        this.patch.config.canvas.stencil = true;\n\n        if (this.patch.config.hasOwnProperty(\"clearCanvasColor\")) this.clearCanvasTransparent = this.patch.config.clearCanvasColor;\n        if (this.patch.config.hasOwnProperty(\"clearCanvasDepth\")) this.clearCanvasDepth = this.patch.config.clearCanvasDepth;\n\n        // safari stuff..........\n        if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent) && (navigator.userAgent.match(/iPhone/i)))\n        {\n            this._isSafariCrap = true;\n            this.glUseHalfFloatTex = true;\n        }\n\n        if (!this.patch.config.canvas.forceWebGl1) this.gl = canv.getContext(\"webgl2\", this.patch.config.canvas);\n\n        if (this.gl && this.gl.getParameter(this.gl.VERSION) != \"WebGL 1.0\")\n        {\n            this.glVersion = 2;\n        }\n        else\n        {\n            this.gl = canv.getContext(\"webgl\", this.patch.config.canvas) || canv.getContext(\"experimental-webgl\", this.patch.config.canvas);\n            this.glVersion = 1;\n\n            // safari\n            // if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent) && (navigator.userAgent.match(/iPhone/i)))\n            // {\n            //     this.glUseHalfFloatTex = true;\n            // }\n\n            // ios\n            if (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream)\n            {\n                if (!this.patch.config.canvas.hasOwnProperty(\"powerPreference\")) this.patch.config.canvas.powerPreference = \"high-performance\";\n            }\n\n            this.enableExtension(\"OES_standard_derivatives\");\n            // this.enableExtension(\"GL_OES_standard_derivatives\");\n            const instancingExt = this.enableExtension(\"ANGLE_instanced_arrays\") || this.gl;\n            if (instancingExt.vertexAttribDivisorANGLE)\n            {\n                this.gl.vertexAttribDivisor = instancingExt.vertexAttribDivisorANGLE.bind(instancingExt);\n                this.gl.drawElementsInstanced = instancingExt.drawElementsInstancedANGLE.bind(instancingExt);\n            }\n        }\n\n        if (!this.gl || this.gl.isContextLost())\n        {\n            this.aborted = true;\n            this.exitError(\"NO_WEBGL\", \"sorry, could not initialize WebGL. Please check if your Browser supports WebGL or try to restart your browser.\");\n            return;\n        }\n\n        const dbgRenderInfo = this.enableExtension(\"WEBGL_debug_renderer_info\");\n        if (dbgRenderInfo)\n        {\n            this.glRenderer = this.gl.getParameter(dbgRenderInfo.UNMASKED_RENDERER_WEBGL);\n            if (this.glRenderer === \"Google SwiftShader\") this.glSlowRenderer = true;\n        }\n\n        this.canvas.addEventListener(\"webglcontextlost\", (event) =>\n        {\n            if (this.aborted) return console.log(\"[cgl_state] aborted context lost... can be ignored...\");\n            this._log.error(\"canvas lost...\", event);\n            this.emitEvent(\"webglcontextlost\");\n            this.aborted = true;\n        });\n\n        this.maxVaryingVectors = this.gl.getParameter(this.gl.MAX_VARYING_VECTORS);\n        this.maxTextureUnits = this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS);\n        this.maxTexSize = this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE);\n        this.maxUniformsFrag = this.gl.getParameter(this.gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n        this.maxUniformsVert = this.gl.getParameter(this.gl.MAX_VERTEX_UNIFORM_VECTORS);\n        this.maxSamples = 0;\n        if (this.gl.MAX_SAMPLES) this.maxSamples = this.gl.getParameter(this.gl.MAX_SAMPLES);\n\n        if (this.glVersion == 1)\n        {\n            this.enableExtension(\"OES_standard_derivatives\");\n            const instancingExt = this.enableExtension(\"ANGLE_instanced_arrays\") || this.gl;\n\n            if (instancingExt.vertexAttribDivisorANGLE)\n            {\n                this.gl.vertexAttribDivisor = instancingExt.vertexAttribDivisorANGLE.bind(instancingExt);\n                this.gl.drawElementsInstanced = instancingExt.drawElementsInstancedANGLE.bind(instancingExt);\n            }\n        }\n\n        this.DEPTH_FUNCS = [\n            this.gl.NEVER,\n            this.gl.ALWAYS,\n            this.gl.LESS,\n            this.gl.LEQUAL,\n            this.gl.GREATER,\n            this.gl.GEQUAL,\n            this.gl.EQUAL,\n            this.gl.NOTEQUAL\n        ];\n        this.CULL_MODES = [\n            null,\n            this.gl.BACK,\n            this.gl.FRONT,\n            this.gl.FRONT_AND_BACK\n        ];\n    }\n\n    getInfo()\n    {\n        return {\n            \"glVersion\": this.glVersion,\n            \"glRenderer\": this.glRenderer,\n            \"glUseHalfFloatTex\": this.glUseHalfFloatTex,\n            \"maxVaryingVectors\": this.maxVaryingVectors,\n            \"maxTextureUnits\": this.maxTextureUnits,\n            \"maxTexSize\": this.maxTexSize,\n            \"maxUniformsFrag\": this.maxUniformsFrag,\n            \"maxUniformsVert\": this.maxUniformsVert,\n            \"maxSamples\": this.maxSamples\n        };\n    }\n\n\n\n\n\n    /**\n     * @function popViewPort\n     * @memberof Context\n     * @instance\n     * @description pop viewPort stack\n     */\n\n\n    popViewPort()\n    {\n        this._viewPortStack.pop();\n        this._viewPortStack.pop();\n        this._viewPortStack.pop();\n        this._viewPortStack.pop();\n\n        if (this._viewPortStack.length == 0)\n        {\n            this.setViewPort(0, 0, this.canvasWidth, this.canvasHeight);\n            // this.gl.viewport(this._viewPort[0], this._viewPort[1], this._viewPort[2], this._viewPort[3]);\n            // this.setViewPort(this._viewPort[0], this._viewPort[1], this._viewPort[2], this._viewPort[3]);\n        }\n        else\n        {\n            // this.viewPort = [this._viewPortStack[this._viewPort.length - 4], this._viewPortStack[this._viewPort.length - 3], this._viewPortStack[this._viewPort.length - 2], this._viewPortStack[this._viewPort.length - 1]];\n            // this.gl.viewport(this._viewPortStack[this._viewPort.length - 4], this._viewPortStack[this._viewPort.length - 3], this._viewPortStack[this._viewPort.length - 2], this._viewPortStack[this._viewPort.length - 1]);\n            this.setViewPort(this._viewPortStack[this._viewPort.length - 4], this._viewPortStack[this._viewPort.length - 3], this._viewPortStack[this._viewPort.length - 2], this._viewPortStack[this._viewPort.length - 1]);\n        }\n    }\n\n    /**\n     * @function pushViewPort\n     * @memberof Context\n     * @instance\n     * @description push a new viewport onto stack\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} w\n     * @param {Number} h\n     */\n\n    pushViewPort(x, y, w, h)\n    {\n        this._viewPortStack.push(x, y, w, h);\n        this.setViewPort(x, y, w, h);\n    }\n\n\n    // old\n    getViewPort()\n    {\n        return this._viewPort;\n    }\n\n    // old\n    resetViewPort()\n    {\n        this.gl.viewport(this._viewPort[0], this._viewPort[1], this._viewPort[2], this._viewPort[3]);\n    }\n\n    // old\n    setViewPort(x, y, w, h)\n    {\n        this._viewPort[0] = Math.round(x);\n        this._viewPort[1] = Math.round(y);\n        this._viewPort[2] = Math.round(w);\n        this._viewPort[3] = Math.round(h);\n        this.gl.viewport(this._viewPort[0], this._viewPort[1], this._viewPort[2], this._viewPort[3]);\n    }\n\n\n    screenShot(cb, doScreenshotClearAlpha, mimeType, quality)\n    {\n        if (doScreenshotClearAlpha)\n        {\n            this.gl.clearColor(1, 1, 1, 1);\n            this.gl.colorMask(false, false, false, true);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n            this.gl.colorMask(true, true, true, true);\n        }\n\n        if (this.canvas && this.canvas.toBlob)\n        {\n            this.canvas.toBlob((blob) =>\n            {\n                if (cb) cb(blob);\n                else this._log.log(\"no screenshot callback...\");\n            }, mimeType, quality);\n        }\n    }\n\n    endFrame()\n    {\n        if (this.patch.isEditorMode()) CABLES.GL_MARKER.drawMarkerLayer(this);\n\n        this.setPreviousShader();\n\n        if (this._vMatrixStack.length() > 0) this.logStackError(\"view matrix stack length !=0 at end of rendering...\");\n        if (this._mMatrixStack.length() > 0) this.logStackError(\"mvmatrix stack length !=0 at end of rendering...\");\n        if (this._pMatrixStack.length() > 0) this.logStackError(\"pmatrix stack length !=0 at end of rendering...\");\n        if (this._glFrameBufferStack.length > 0) this.logStackError(\"glFrameBuffer stack length !=0 at end of rendering...\");\n        if (this._stackDepthTest.length > 0) this.logStackError(\"depthtest stack length !=0 at end of rendering...\");\n        if (this._stackDepthWrite.length > 0) this.logStackError(\"depthwrite stack length !=0 at end of rendering...\");\n        if (this._stackDepthFunc.length > 0) this.logStackError(\"depthfunc stack length !=0 at end of rendering...\");\n        if (this._stackBlend.length > 0) this.logStackError(\"blend stack length !=0 at end of rendering...\");\n        if (this._stackBlendMode.length > 0) this.logStackError(\"blendMode stack length !=0 at end of rendering...\");\n        if (this._shaderStack.length > 0) this.logStackError(\"this._shaderStack length !=0 at end of rendering...\");\n        if (this._stackCullFace.length > 0) this.logStackError(\"this._stackCullFace length !=0 at end of rendering...\");\n        if (this._stackCullFaceFacing.length > 0) this.logStackError(\"this._stackCullFaceFacing length !=0 at end of rendering...\");\n        if (this._viewPortStack.length > 0) this.logStackError(\"viewport stack length !=0 at end of rendering...\");\n\n        this._frameStarted = false;\n\n        if (this._oldCanvasWidth != this.canvasWidth || this._oldCanvasHeight != this.canvasHeight)\n        {\n            this._oldCanvasWidth = this.canvasWidth;\n            this._oldCanvasHeight = this.canvasHeight;\n            // this.setSize(this.canvasWidth / this.pixelDensity, this.canvasHeight / this.pixelDensity);\n            // this.updateSize();\n            this.emitEvent(\"resize\");\n        }\n\n        if (this._cursor != this._currentCursor)\n            this._currentCursor = this.canvas.style.cursor = this._cursor;\n\n        this.emitEvent(\"endframe\");\n\n        this.fpsCounter.endFrame();\n    }\n\n    logStackError(str)\n    {\n        if (!this._hadStackError)\n        {\n            this._hadStackError = true;\n            this._log.warn(\"[\" + this.canvas.id + \"]: \", str);\n        }\n    }\n\n    // shader stack\n    getShader()\n    {\n        if (this._currentShader) if (!this.frameStore || ((this.frameStore.renderOffscreen === true) == this._currentShader.offScreenPass) === true) return this._currentShader;\n\n        for (let i = this._shaderStack.length - 1; i >= 0; i--) if (this._shaderStack[i]) if (this.frameStore.renderOffscreen == this._shaderStack[i].offScreenPass) return this._shaderStack[i];\n    }\n\n    getDefaultShader()\n    {\n        return this._simpleShader;\n    }\n\n    /**\n     * push a shader to the shader stack\n     * @function pushShader\n     * @memberof Context\n     * @instance\n     * @param {Object} shader\n     * @function\n     */\n\n    pushShader(shader)\n    {\n        if (this.frameStore.forceShaderMods)\n        {\n            for (let i = 0; i < this.frameStore.forceShaderMods.length; i++)\n            {\n                // if (!currentShader.forcedMod && currentShader != this.frameStore.forceShaderMods[i])\n                // {\n                //     currentShader.forcedMod = this.frameStore.forceShaderMods[i];\n                shader = this.frameStore.forceShaderMods[i].bind(shader, false);\n                // }\n                // return currentShader;\n                // if (this.frameStore.forceShaderMods[i].currentShader() && shader != this.frameStore.forceShaderMods[i].currentShader().shader)\n            }\n        }\n\n        this._shaderStack.push(shader);\n        this._currentShader = shader;\n    }\n\n\n    /**\n     * pop current used shader from shader stack\n     * @function popShader\n     * @memberof Context\n     * @instance\n     * @function\n     */\n    setPreviousShader()\n    {\n        if (this.frameStore.forceShaderMods)\n        {\n            for (let i = 0; i < this.frameStore.forceShaderMods.length; i++)\n            {\n                // const a =\n                this.frameStore.forceShaderMods[i].unbind(false);\n                // if (a) return;\n                // this.popShader();\n            }\n        }\n\n        if (this._shaderStack.length === 0) throw new Error(\"Invalid shader stack pop!\");\n        this._shaderStack.pop();\n        this._currentShader = this._shaderStack[this._shaderStack.length - 1];\n    }\n\n    /**\n     * push a framebuffer to the framebuffer stack\n     * @function pushGlFrameBuffer\n     * @memberof Context\n     * @instance\n     * @param {Object} framebuffer\n     * @function\n     */\n    pushGlFrameBuffer(fb)\n    {\n        this._glFrameBufferStack.push(fb);\n    }\n\n    /**\n     * pop framebuffer stack\n     * @function popGlFrameBuffer\n     * @memberof Context\n     * @instance\n     * @returns {Object} current framebuffer or null\n     */\n    popGlFrameBuffer()\n    {\n        if (this._glFrameBufferStack.length == 0) return null;\n        this._glFrameBufferStack.pop();\n        return this._glFrameBufferStack[this._glFrameBufferStack.length - 1];\n    }\n\n    /**\n     * get current framebuffer\n     * @function getCurrentFrameBuffer\n     * @memberof Context\n     * @instance\n     * @returns {Object} current framebuffer or null\n     */\n    getCurrentGlFrameBuffer()\n    {\n        if (this._glFrameBufferStack.length === 0) return null;\n        return this._glFrameBufferStack[this._glFrameBufferStack.length - 1];\n    }\n\n    /**\n     * push a framebuffer to the framebuffer stack\n     * @function pushGlFrameBuffer\n     * @memberof Context\n     * @instance\n     * @param {Framebuffer} framebuffer\n     */\n    pushFrameBuffer(fb)\n    {\n        this._frameBufferStack.push(fb);\n    }\n\n    /**\n     * pop framebuffer stack\n     * @function popFrameBuffer\n     * @memberof Context\n     * @instance\n     * @returns {Framebuffer} current framebuffer or null\n     */\n    popFrameBuffer()\n    {\n        if (this._frameBufferStack.length == 0) return null;\n        this._frameBufferStack.pop();\n        return this._frameBufferStack[this._frameBufferStack.length - 1];\n    }\n\n    /**\n     * get current framebuffer\n     * @function getCurrentFrameBuffer\n     * @memberof Context\n     * @instance\n     * @returns {Framebuffer} current framebuffer or null\n     */\n    getCurrentFrameBuffer()\n    {\n        if (this._frameBufferStack.length === 0) return null;\n        return this._frameBufferStack[this._frameBufferStack.length - 1];\n    }\n\n\n    renderStart(cgl, identTranslate, identTranslateView)\n    {\n        this.fpsCounter.startFrame();\n        this.pushDepthTest(true);\n        this.pushDepthWrite(true);\n        this.pushDepthFunc(cgl.gl.LEQUAL);\n        this.pushCullFaceFacing(cgl.gl.BACK);\n        this.pushCullFace(false);\n\n        // if (this.clearCanvasTransparent)\n        // {\n        //     cgl.gl.clearColor(0, 0, 0, 0);\n        //     cgl.gl.clear(cgl.gl.COLOR_BUFFER_BIT);\n        // }\n        // if (this.clearCanvasDepth) cgl.gl.clear(cgl.gl.DEPTH_BUFFER_BIT);\n\n        cgl.setViewPort(0, 0, cgl.canvasWidth, cgl.canvasHeight);\n\n\n        this._startMatrixStacks(identTranslate, identTranslateView);\n\n\n        cgl.pushBlendMode(_constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.BLEND_MODES.BLEND_NORMAL, false);\n\n        for (let i = 0; i < this._textureslots.length; i++) this._textureslots[i] = null;\n\n        this.pushShader(this._simpleShader);\n\n        this._frameStarted = true;\n\n        if (this._onetimeCallbacks.length > 0)\n        {\n            for (let i = 0; i < this._onetimeCallbacks.length; i++) this._onetimeCallbacks[i]();\n            this._onetimeCallbacks.length = 0;\n        }\n\n        this.emitEvent(\"beginFrame\");\n    }\n\n    renderEnd(cgl)\n    {\n        this._endMatrixStacks();\n\n        this.popDepthTest();\n        this.popDepthWrite();\n        this.popDepthFunc();\n        this.popCullFaceFacing();\n        this.popCullFace();\n        this.popBlend();\n        this.popBlendMode();\n\n        cgl.endFrame();\n\n        this.emitEvent(\"endFrame\");\n    }\n\n    getTexture(slot)\n    {\n        return this._textureslots[slot];\n    }\n\n    hasFrameStarted()\n    {\n        return this._frameStarted;\n    }\n\n    /**\n     * log warning to console if the rendering of one frame has not been started / handy to check for async problems\n     * @function checkFrameStarted\n     * @memberof Context\n     * @instance\n     */\n    checkFrameStarted(string)\n    {\n        if (!this._frameStarted)\n        {\n            this._log.warn(\"frame not started \" + string);\n            this.patch.printTriggerStack();\n        }\n    }\n\n    setTexture(slot, t, type)\n    {\n        this.checkFrameStarted(\"cgl setTexture\");\n\n        if (t === null) t = CGL.Texture.getEmptyTexture(this).tex;\n\n        // if (!this.gl.isTexture(t))\n        // {\n        //     console.log(\"not a texture!!!!\"); return false;\n        //     t = CGL.Texture.getEmptyTexture(this).tex;\n        // }\n\n        // if (!this.gl.isTexture(t))\n        // {\n        //     t = CGL.Texture.getErrorTexture(this).tex;\n        //     // this._log.stack(\"not a texture!!!!\");\n        //     // return false;\n        // }\n\n\n        if (this._textureslots[slot] != t)\n        {\n            this.gl.activeTexture(this.gl.TEXTURE0 + slot);\n            this.gl.bindTexture(type || this.gl.TEXTURE_2D, t);\n            this._textureslots[slot] = t;\n        }\n\n\n        return true;\n    }\n\n    fullScreen()\n    {\n        if (this.canvas.requestFullscreen) this.canvas.requestFullscreen();\n        else if (this.canvas.mozRequestFullScreen) this.canvas.mozRequestFullScreen();\n        else if (this.canvas.webkitRequestFullscreen) this.canvas.webkitRequestFullscreen();\n        else if (this.canvas.msRequestFullscreen) this.canvas.msRequestFullscreen();\n    }\n\n\n    printError(str)\n    {\n        if (!this.checkGlErrors) return;\n        let found = false;\n        let error = this.gl.getError();\n\n        if (error != this.gl.NO_ERROR)\n        {\n            let errStr = \"\";\n            if (error == this.gl.OUT_OF_MEMORY) errStr = \"OUT_OF_MEMORY\";\n            if (error == this.gl.INVALID_ENUM) errStr = \"INVALID_ENUM\";\n            if (error == this.gl.INVALID_OPERATION) errStr = \"INVALID_OPERATION\";\n            if (error == this.gl.INVALID_FRAMEBUFFER_OPERATION) errStr = \"INVALID_FRAMEBUFFER_OPERATION\";\n            if (error == this.gl.INVALID_VALUE) errStr = \"INVALID_VALUE\";\n            if (error == this.gl.CONTEXT_LOST_WEBGL)\n            {\n                this.aborted = true;\n                errStr = \"CONTEXT_LOST_WEBGL\";\n            }\n            if (error == this.gl.NO_ERROR) errStr = \"NO_ERROR\";\n\n            found = true;\n\n\n            this._log.warn(\"gl error [\" + this.canvas.id + \"]: \", str, error, errStr);\n\n            if (this.canvas.id.indexOf(\"glGuiCanvas\") == -1)\n                if (!this._loggedGlError)\n                {\n                    this.patch.printTriggerStack();\n                    this._log.stack(\"glerror\");\n                    this._loggedGlError = true;\n                }\n        }\n        error = this.gl.getError();\n\n        return found;\n    }\n\n    saveScreenshot(filename, cb, pw, ph, noclearalpha)\n    {\n        this.patch.renderOneFrame();\n\n        let w = this.canvas.clientWidth * this.pixelDensity;\n        let h = this.canvas.clientHeight * this.pixelDensity;\n\n        if (pw)\n        {\n            this.canvas.width = pw;\n            w = pw;\n        }\n        if (ph)\n        {\n            this.canvas.height = ph;\n            h = ph;\n        }\n\n        function padLeft(nr, n, str)\n        {\n            return Array(n - String(nr).length + 1).join(str || \"0\") + nr;\n        }\n\n        const d = new Date();\n\n        const dateStr = \"\".concat(String(d.getFullYear()) + String(d.getMonth() + 1) + String(d.getDate()), \"_\").concat(padLeft(d.getHours(), 2)).concat(padLeft(d.getMinutes(), 2)).concat(padLeft(d.getSeconds(), 2));\n\n        if (!filename) filename = \"cables_\" + dateStr + \".png\";\n        else filename += \".png\";\n\n        this.patch.cgl.screenShot(function (blob)\n        {\n            this.canvas.width = w;\n            this.canvas.height = h;\n\n            if (blob)\n            {\n                const anchor = document.createElement(\"a\");\n\n                anchor.download = filename;\n                anchor.href = URL.createObjectURL(blob);\n\n                setTimeout(function ()\n                {\n                    anchor.click();\n                    if (cb) cb(blob);\n                }, 100);\n            }\n            else\n            {\n                this._log.log(\"screenshot: no blob\");\n            }\n        }.bind(this), noclearalpha);\n    }\n\n\n    _dispose()\n    {\n        this._simpleShader.dispose();\n        this.gl = null;\n    }\n}\n\n\nContext.prototype.popShader = Context.prototype.setPreviousShader;\nContext.prototype.setShader = Context.prototype.pushShader;\n\n/**\n * execute the callback next frame, once\n * @function addNextFrameOnceCallback\n * @memberof Context\n * @instance\n * @param {function} callback\n */\nContext.prototype.addNextFrameOnceCallback = function (cb)\n{\n    if (cb) this._onetimeCallbacks.push(cb);\n};\n\n// state depthtest\n\n/**\n * push depth testing enabled state\n * @function pushDepthTest\n * @param {Boolean} enabled\n * @memberof Context\n * @instance\n */\nContext.prototype._stackDepthTest = [];\nContext.prototype.pushDepthTest = function (b)\n{\n    this._stackDepthTest.push(b);\n    if (!b) this.gl.disable(this.gl.DEPTH_TEST);\n    else this.gl.enable(this.gl.DEPTH_TEST);\n};\n/**\n * current state of depth testing\n * @function stateCullFace\n * @returns {Boolean} enabled\n * @memberof Context\n * @instance\n */\nContext.prototype.stateDepthTest = function ()\n{\n    return this._stackDepthTest[this._stackDepthTest.length - 1];\n};\n\n/**\n * pop depth testing state\n * @function popCullFace\n * @memberof Context\n * @instance\n */\nContext.prototype.popDepthTest = function ()\n{\n    this._stackDepthTest.pop();\n\n    if (!this._stackDepthTest[this._stackDepthTest.length - 1]) this.gl.disable(this.gl.DEPTH_TEST);\n    else this.gl.enable(this.gl.DEPTH_TEST);\n};\n\n// --------------------------------------\n// state depthwrite\n\n/**\n * push depth write enabled state\n * @function pushDepthTest\n * @param {Boolean} enabled\n * @memberof Context\n * @instance\n */\nContext.prototype._stackDepthWrite = [];\nContext.prototype.pushDepthWrite = function (b)\n{\n    b = b || false;\n    this._stackDepthWrite.push(b);\n    this.gl.depthMask(b);\n};\n\n/**\n * current state of depth writing\n * @function stateCullFace\n * @returns {Boolean} enabled\n * @memberof Context\n * @instance\n */\nContext.prototype.stateDepthWrite = function ()\n{\n    return this._stackDepthWrite[this._stackDepthWrite.length - 1];\n};\n\n/**\n * pop depth writing state\n * @function popCullFace\n * @memberof Context\n * @instance\n */\nContext.prototype.popDepthWrite = function ()\n{\n    this._stackDepthWrite.pop();\n    this.gl.depthMask(this._stackDepthWrite[this._stackDepthWrite.length - 1] || false);\n};\n\n\n// --------------------------------------\n// state CullFace\n\n/**\n * push face culling face enabled state\n * @function pushCullFaceFacing\n * @param {Boolean} enabled\n * @memberof Context\n * @instance\n */\nContext.prototype._stackCullFace = [];\nContext.prototype.pushCullFace = function (b)\n{\n    this._stackCullFace.push(b);\n\n    if (b) this.gl.enable(this.gl.CULL_FACE);\n    else this.gl.disable(this.gl.CULL_FACE);\n};\n\n/**\n * current state of face culling\n * @function stateCullFace\n * @returns {Boolean} enabled\n * @memberof Context\n * @instance\n */\nContext.prototype.stateCullFace = function ()\n{\n    return this._stackCullFace[this._stackCullFace.length - 1];\n};\n\n/**\n * pop face culling enabled state\n * @function popCullFace\n * @memberof Context\n * @instance\n */\nContext.prototype.popCullFace = function ()\n{\n    this._stackCullFace.pop();\n\n    if (this._stackCullFace[this._stackCullFace.length - 1]) this.gl.enable(this.gl.CULL_FACE);\n    else this.gl.disable(this.gl.CULL_FACE);\n};\n\n\n// --------------------------------------\n// state CullFace Facing\n\n\n/**\n * push face culling face side\n * @function pushCullFaceFacing\n * @param {Number} cgl.gl.FRONT_AND_BACK, cgl.gl.BACK or cgl.gl.FRONT\n * @memberof Context\n * @instance\n */\nContext.prototype._stackCullFaceFacing = [];\nContext.prototype.pushCullFaceFacing = function (b)\n{\n    this._stackCullFaceFacing.push(b);\n    this.gl.cullFace(this._stackCullFaceFacing[this._stackCullFaceFacing.length - 1]);\n};\n\n/**\n * current state of face culling side\n * @function stateCullFaceFacing\n * @returns {Boolean} enabled\n * @memberof Context\n * @instance\n */\nContext.prototype.stateCullFaceFacing = function ()\n{\n    return this._stackCullFaceFacing[this._stackCullFaceFacing.length - 1];\n};\n\n/**\n * pop face culling face side\n * @function popCullFaceFacing\n * @memberof Context\n * @instance\n */\nContext.prototype.popCullFaceFacing = function ()\n{\n    this._stackCullFaceFacing.pop();\n    if (this._stackCullFaceFacing.length > 0) this.gl.cullFace(this._stackCullFaceFacing[this._stackCullFaceFacing.length - 1]);\n};\n\n\n// --------------------------------------\n// state depthfunc\n\nContext.prototype._stackDepthFunc = [];\n\n/**\n * enable / disable depth testing\n * like `gl.depthFunc(boolean);`\n * @function pushDepthFunc\n * @memberof Context\n * @instance\n * @param {Boolean} depthtesting\n */\nContext.prototype.pushDepthFunc = function (f)\n{\n    this._stackDepthFunc.push(f);\n    this.gl.depthFunc(f);\n};\n\n/**\n * current state of blend\n * @function stateDepthFunc\n * @memberof Context\n * @instance\n * @returns {Boolean} depth testing enabled/disabled\n */\nContext.prototype.stateDepthFunc = function ()\n{\n    if (this._stackDepthFunc.length > 0) return this._stackDepthFunc[this._stackDepthFunc.length - 1];\n    return false;\n};\n\n/**\n * pop depth testing and set the previous state\n * @function popDepthFunc\n * @memberof Context\n * @instance\n */\nContext.prototype.popDepthFunc = function ()\n{\n    this._stackDepthFunc.pop();\n    if (this._stackDepthFunc.length > 0) this.gl.depthFunc(this._stackDepthFunc[this._stackDepthFunc.length - 1]);\n};\n\n// --------------------------------------\n// state blending\n\nContext.prototype._stackBlend = [];\n\n/**\n * enable / disable blend\n * like gl.enable(gl.BLEND); / gl.disable(gl.BLEND);\n * @function pushBlend\n * @memberof Context\n * @instance\n * @param {Boolean} blending\n */\nContext.prototype.pushBlend = function (b)\n{\n    this._stackBlend.push(b);\n    if (!b) this.gl.disable(this.gl.BLEND);\n    else this.gl.enable(this.gl.BLEND);\n};\n\n/**\n * pop blend state and set the previous state\n * @function popBlend\n * @memberof Context\n * @instance\n */\nContext.prototype.popBlend = function ()\n{\n    this._stackBlend.pop();\n\n    if (!this._stackBlend[this._stackBlend.length - 1]) this.gl.disable(this.gl.BLEND);\n    else this.gl.enable(this.gl.BLEND);\n};\n\n/**\n * current state of blend\n * @function stateBlend\n * @returns {boolean} blending enabled/disabled\n * @memberof Context\n * @instance\n */\nContext.prototype.stateBlend = function ()\n{\n    return this._stackBlend[this._stackBlend.length - 1];\n};\n\nconst BLENDS = {\n    \"BLEND_NONE\": 0,\n    \"BLEND_NORMAL\": 1,\n    \"BLEND_ADD\": 2,\n    \"BLEND_SUB\": 3,\n    \"BLEND_MUL\": 4,\n};\n\nContext.prototype._stackBlendMode = [];\nContext.prototype._stackBlendModePremul = [];\n\n/**\n * push and switch to predefined blendmode (CONSTANTS.BLEND_MODES.BLEND_NONE,CONSTANTS.BLEND_MODES.BLEND_NORMAL,CONSTANTS.BLEND_MODES.BLEND_ADD,CONSTANTS.BLEND_MODES.BLEND_SUB,CONSTANTS.BLEND_MODES.BLEND_MUL)\n * @function pushBlendMode\n * @memberof Context\n * @instance\n * @param {Number} blendmode\n * @param {Boolean} premultiplied mode\n */\nContext.prototype.pushBlendMode = function (blendMode, premul)\n{\n    this._stackBlendMode.push(blendMode);\n    this._stackBlendModePremul.push(premul);\n\n    const n = this._stackBlendMode.length - 1;\n\n    this.pushBlend(this._stackBlendMode[n] !== _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.BLEND_MODES.BLEND_NONE);\n    this._setBlendMode(this._stackBlendMode[n], this._stackBlendModePremul[n]);\n};\n\n/**\n * pop predefined blendmode / switch back to previous blendmode\n * @function popBlendMode\n * @memberof Context\n * @instance\n */\nContext.prototype.popBlendMode = function ()\n{\n    this._stackBlendMode.pop();\n    this._stackBlendModePremul.pop();\n\n    const n = this._stackBlendMode.length - 1;\n\n    this.popBlend(this._stackBlendMode[n] !== _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.BLEND_MODES.BLEND_NONE);\n\n    if (n >= 0) this._setBlendMode(this._stackBlendMode[n], this._stackBlendModePremul[n]);\n};\n\n\n// --------------------------------------\n// state stencil\n\nContext.prototype._stackStencil = [];\n\n/**\n * enable / disable stencil testing\n\n* @function pushStencil\n * @memberof Context\n * @instance\n * @param {Boolean} enable\n */\nContext.prototype.pushStencil = function (b)\n{\n    this._stackStencil.push(b);\n    if (!b) this.gl.disable(this.gl.STENCIL_TEST);\n    else this.gl.enable(this.gl.STENCIL_TEST);\n};\n\n/**\n * pop stencil test state and set the previous state\n * @function popStencil\n * @memberof Context\n * @instance\n */\nContext.prototype.popStencil = function ()\n{\n    this._stackStencil.pop();\n\n    if (!this._stackStencil[this._stackStencil.length - 1]) this.gl.disable(this.gl.STENCIL_TEST);\n    else this.gl.enable(this.gl.STENCIL_TEST);\n};\n\n// --------------------------------------\n\n\nContext.prototype.glGetAttribLocation = function (prog, name)\n{\n    const l = this.gl.getAttribLocation(prog, name);\n    // if (l == -1)\n    // {\n    //     this._log.warn(\"get attr loc -1 \", name);\n    // }\n    return l;\n};\n\n\n/**\n * should an op now draw helpermeshes\n * @function shouldDrawHelpers\n * @memberof Context\n * @instance\n */\nContext.prototype.shouldDrawHelpers = function (op)\n{\n    if (this.frameStore.shadowPass) return false;\n    if (!op.patch.isEditorMode()) return false;\n\n    const fb = this.getCurrentFrameBuffer();\n    if (fb && fb.getWidth)\n    {\n        const fbshould = this.canvasWidth / this.canvasHeight == fb.getWidth() / fb.getHeight();\n        if (!fbshould) return false;\n    }\n\n    return CABLES.UI.renderHelper || (CABLES.UI.renderHelperCurrent && op.isCurrentUiOp());\n};\n\nContext.prototype._setBlendMode = function (blendMode, premul)\n{\n    const gl = this.gl;\n\n    if (blendMode == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.BLEND_MODES.BLEND_NONE)\n    {\n        // this.gl.disable(this.gl.BLEND);\n    }\n    else if (blendMode == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.BLEND_MODES.BLEND_ADD)\n    {\n        if (premul)\n        {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ONE, gl.ONE);\n        }\n        else\n        {\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n        }\n    }\n    else if (blendMode == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.BLEND_MODES.BLEND_SUB)\n    {\n        if (premul)\n        {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n        }\n        else\n        {\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n        }\n    }\n    else if (blendMode == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.BLEND_MODES.BLEND_MUL)\n    {\n        if (premul)\n        {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n        }\n        else\n        {\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n        }\n    }\n    else if (blendMode == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.BLEND_MODES.BLEND_NORMAL)\n    {\n        if (premul)\n        {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        }\n        else\n        {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        }\n    }\n    else\n    {\n        this._log.log(\"setblendmode: unknown blendmode\");\n    }\n};\n\nContext.prototype.createMesh = function (geom, glPrimitive)\n{\n    return new CGL.Mesh(this, geom, glPrimitive);\n};\n\n\n/**\n * set cursor\n * @function setCursor\n * @memberof Context\n * @instance\n * @param {String} css cursor string\n */\nContext.prototype.setCursor = function (str)\n{\n    this._cursor = str;\n};\n\n\n/**\n * enable a webgl extension\n * @function enableExtension\n * @memberof Context\n * @instance\n * @param {String} extension name\n * @returns {Object} extension object or null\n */\nContext.prototype.enableExtension = function (name)\n{\n    // const start = performance.now();\n\n    if (this._enabledExtensions.hasOwnProperty(name))\n    {\n        return this._enabledExtensions[name];\n    }\n\n    const o = this.gl.getExtension(name);\n    this._enabledExtensions[name] = o;\n\n    if (!o)\n        this._log.warn(\"[cgl_state] extension not available \" + name);\n    else\n        this._log.log(\"enabled extension\", name);\n\n    return o;\n};\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_state.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_texture.js":
/*!*************************************!*\
  !*** ./src/core/cgl/cgl_texture.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Texture\": () => (/* binding */ Texture)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"./src/core/utils.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core_logger */ \"./src/core/core_logger.js\");\n\n\n\n\n\nconst DEFAULT_TEXTURE_SIZE = 8;\n\n/**\n * A Texture\n * @external CGL\n * @namespace Texture\n * @constructor\n * @param {Context} cgl\n * @param {Object} [options]\n * @hideconstructor\n * @class\n * @example\n * // generate a 256x256 pixel texture of random colors\n * const size=256;\n * const data = new Uint8Array(size*size*4);\n *\n * for(var x=0;x<size*size*4;x++) data[ x*4+3]=255;\n *\n * const tex=new CGL.Texture(cgl);\n * tex.initFromData(data,size,size,CGL.Texture.FILTER_NEAREST,CGL.Texture.WRAP_REPEAT);\n */\nconst Texture = function (__cgl, options = {})\n{\n    if (!__cgl) throw new Error(\"no cgl\");\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"cgl_texture\");\n    this._cgl = __cgl;\n    this.pixelFormat = options.pixelFormat || Texture.PFORMATSTR_RGBA8UB;\n    this.tex = this._cgl.gl.createTexture();\n    this.id = CABLES.uuid();\n    this.width = 0;\n    this.height = 0;\n    this.loading = false;\n    this.flip = true;\n    this.flipped = false;\n    this.shadowMap = false;\n    this.deleted = false;\n    this.image = null;\n    this.anisotropic = 0;\n    this.filter = Texture.FILTER_NEAREST;\n    this.wrap = Texture.WRAP_CLAMP_TO_EDGE;\n    this.texTarget = this._cgl.gl.TEXTURE_2D;\n    if (options && options.type) this.texTarget = options.type;\n    this.textureType = Texture.TYPE_DEFAULT;\n    this.unpackAlpha = true;\n    this._fromData = true;\n    this.name = \"unknown\";\n\n    this._glDataType = -1;\n    this._glInternalFormat = -1;\n    this._glDataFormat = -1;\n\n\n    if (options)\n    {\n        this.name = options.name || this.name;\n        if (options.isDepthTexture)\n        {\n            this.textureType = Texture.TYPE_DEPTH;\n        }\n        if (options.isFloatingPointTexture === true) this.textureType = Texture.TYPE_FLOAT;\n\n        if (\"textureType\" in options) this.textureType = options.textureType;\n        if (\"filter\" in options) this.filter = options.filter;\n        if (\"wrap\" in options) this.wrap = options.wrap;\n        if (\"unpackAlpha\" in options) this.unpackAlpha = options.unpackAlpha;\n        if (\"flip\" in options) this.flip = options.flip;\n        if (\"shadowMap\" in options) this.shadowMap = options.shadowMap;\n        if (\"anisotropic\" in options) this.anisotropic = options.anisotropic;\n    }\n    else\n    {\n        options = {};\n    }\n\n    if (!options.pixelFormat && options.isFloatingPointTexture) this.pixelFormat = Texture.PFORMATSTR_RGBA32F;\n\n    if (this.textureType == Texture.TYPE_DEPTH) this.pixelFormat = Texture.PFORMATSTR_DEPTH;\n\n\n\n    if (!options.width) options.width = DEFAULT_TEXTURE_SIZE;\n    if (!options.height) options.height = DEFAULT_TEXTURE_SIZE;\n\n    this._cgl.profileData.profileTextureNew++;\n\n\n    this.setFormat(Texture.setUpGlPixelFormat(this._cgl, this.pixelFormat));\n    this._cgl.profileData.addHeavyEvent(\"texture created\", this.name, options.width + \"x\" + options.height);\n\n    this.setSize(options.width, options.height);\n    this.getInfoOneLine();\n};\n\nTexture.prototype.isFloatingPoint = function ()\n{\n    return Texture.isPixelFormatFloat(this.pixelFormat);\n};\n\n/**\n * returns true if otherTexture has same options (width/height/filter/wrap etc)\n * @function compareSettings\n * @memberof Texture\n * @instance\n * @param {Texture} otherTexture\n * @returns {Boolean}\n */\nTexture.prototype.compareSettings = function (tex)\n{\n    // if (!tex) { this._log.warn(\"compare: no tex\"); return false; }\n    // if (tex.width != this.width) this._log.warn(\"tex.width not equal\", tex.width, this.width);\n    // if (tex.height != this.height) this._log.warn(\"tex.height not equal\", tex.height, this.height);\n    // if (tex.filter != this.filter) this._log.warn(\"tex.filter not equal\");\n    // if (tex.wrap != this.wrap) this._log.warn(\"tex.wrap not equal\");\n    // if (tex.textureType != this.textureType) this._log.warn(\"tex.textureType not equal\");\n    // if (tex.unpackAlpha != this.unpackAlpha) this._log.warn(\"tex.unpackAlpha not equal\");\n    // if (tex.anisotropic != this.anisotropic) this._log.warn(\"tex.anisotropic not equal\");\n    // if (tex.shadowMap != this.shadowMap) this._log.warn(\"tex.shadowMap not equal\");\n    // if (tex.texTarget != this.texTarget) this._log.warn(\"tex.texTarget not equal\");\n    // if (tex.flip != this.flip) this._log.warn(\"tex.flip not equal\");\n\n    if (!tex) return false;\n    return (\n        tex.width == this.width &&\n        tex.height == this.height &&\n        tex.filter == this.filter &&\n        tex.wrap == this.wrap &&\n        tex.textureType == this.textureType &&\n        tex.unpackAlpha == this.unpackAlpha &&\n        tex.anisotropic == this.anisotropic &&\n        tex.shadowMap == this.shadowMap &&\n        tex.texTarget == this.texTarget &&\n        tex.flip == this.flip\n    );\n};\n\n/**\n * returns a new texture with the same settings (does not copy texture itself)\n * @function clone\n * @memberof Texture\n * @instance\n * @returns {Texture}\n */\nTexture.prototype.clone = function ()\n{\n    const newTex = new Texture(this._cgl, {\n        \"name\": this.name,\n        \"filter\": this.filter,\n        \"wrap\": this.wrap,\n        \"textureType\": this.textureType,\n        \"pixelFormat\": this.pixelFormat,\n        \"unpackAlpha\": this.unpackAlpha,\n        \"flip\": this.flip,\n        \"width\": this.width,\n        \"height\": this.height,\n    });\n\n    this._cgl.profileData.addHeavyEvent(\"texture created\", this.name, this.width + \"x\" + this.height);\n\n    if (!this.compareSettings(newTex))\n    {\n        this._log.error(\"Cloned texture settings do not compare!\");\n        this._log.error(this);\n        this._log.error(newTex);\n    }\n\n    return newTex;\n};\n\n\nTexture.prototype.setFormat = function (o)\n{\n    this.pixelFormat = o.pixelFormat;\n    this._glDataFormat = o.glDataFormat;\n    this._glInternalFormat = o.glInternalFormat;\n    this._glDataType = o.glDataType;\n};\n\n\nTexture.setUpGlPixelFormat = function (cgl, pixelFormatStr)\n{\n    const o = {};\n\n    if (!pixelFormatStr)\n    {\n        console.log(\"no pixelformatstr!\");\n        console.log((new Error()).stack);\n        pixelFormatStr = Texture.PFORMATSTR_RGBA8UB;\n    }\n\n    o.pixelFormatBase = pixelFormatStr;\n\n    if (cgl.glUseHalfFloatTex)\n    {\n        if (pixelFormatStr == Texture.PFORMATSTR_RGBA32F) pixelFormatStr = Texture.PFORMATSTR_RGBA16F;\n        if (pixelFormatStr == Texture.PFORMATSTR_RG32F) pixelFormatStr = Texture.PFORMATSTR_RG16F;\n        if (pixelFormatStr == Texture.PFORMATSTR_R32F) pixelFormatStr = Texture.PFORMATSTR_R16F;\n    }\n\n    o.pixelFormat = pixelFormatStr;\n    o.glDataType = cgl.gl.UNSIGNED_BYTE;\n    o.glInternalFormat = cgl.gl.RGBA8;\n    o.glDataFormat = cgl.gl.RGBA;\n\n    let floatDatatype = cgl.gl.FLOAT;\n\n    if (cgl.glVersion == 1)\n    {\n        o.glInternalFormat = cgl.gl.RGBA;\n\n        if (pixelFormatStr == Texture.PFORMATSTR_RGBA16F || pixelFormatStr == Texture.PFORMATSTR_RG16F || pixelFormatStr == Texture.PFORMATSTR_R16F)\n        {\n            const ext = cgl.enableExtension(\"OES_texture_half_float\");\n            if (!ext) throw new Error(\"no half float texture extension\");\n\n            floatDatatype = ext.HALF_FLOAT_OES;\n        }\n    }\n\n\n    if (pixelFormatStr == Texture.PFORMATSTR_RGBA8UB)\n    {\n    }\n    else if (pixelFormatStr == Texture.PFORMATSTR_RGB565)\n    {\n        o.glInternalFormat = cgl.gl.RGB565;\n        o.glDataFormat = cgl.gl.RGB;\n    }\n    else if (pixelFormatStr == Texture.PFORMATSTR_R8UB)\n    {\n        o.glInternalFormat = cgl.gl.R8;\n        o.glDataFormat = cgl.gl.RED;\n    }\n    else if (pixelFormatStr == Texture.PFORMATSTR_RG8UB)\n    {\n        o.glInternalFormat = cgl.gl.RG8;\n        o.glDataFormat = cgl.gl.RG;\n    }\n    else if (pixelFormatStr == Texture.PFORMATSTR_RGB8UB)\n    {\n        o.glInternalFormat = cgl.gl.RGB8;\n        o.glDataFormat = cgl.gl.RGB;\n    }\n    else if (pixelFormatStr == Texture.PFORMATSTR_R32F)\n    {\n        o.glInternalFormat = cgl.gl.R32F;\n        o.glDataFormat = cgl.gl.RED;\n        o.glDataType = floatDatatype;\n    }\n    else if (pixelFormatStr == Texture.PFORMATSTR_R16F)\n    {\n        o.glInternalFormat = cgl.gl.R16F;\n        o.glDataType = floatDatatype;\n        o.glDataFormat = cgl.gl.RED;\n    }\n    else if (pixelFormatStr == Texture.PFORMATSTR_RG16F)\n    {\n        o.glInternalFormat = cgl.gl.RG16F;\n        o.glDataType = floatDatatype;\n        o.glDataFormat = cgl.gl.RG;\n    }\n    else if (pixelFormatStr == Texture.PFORMATSTR_RGBA16F)\n    {\n        if (cgl.glVersion == 1) o.glInternalFormat = cgl.gl.RGBA;\n        else o.glInternalFormat = cgl.gl.RGBA16F;\n        o.glDataType = floatDatatype;\n    }\n    else if (pixelFormatStr == Texture.PFORMATSTR_R11FG11FB10F)\n    {\n        o.glInternalFormat = cgl.gl.R11F_G11F_B10F;\n        o.glDataType = floatDatatype;\n        o.glDataFormat = cgl.gl.RGB;\n    }\n    else if (pixelFormatStr == Texture.PFORMATSTR_RGBA32F)\n    {\n        if (cgl.glVersion == 1) o.glInternalFormat = cgl.gl.RGBA;\n        else o.glInternalFormat = cgl.gl.RGBA32F;\n        o.glDataType = floatDatatype;\n    }\n\n    else if (pixelFormatStr == Texture.PFORMATSTR_DEPTH)\n    {\n        if (cgl.glVersion == 1)\n        {\n            o.glInternalFormat = cgl.gl.DEPTH_COMPONENT;\n            o.glDataType = cgl.gl.UNSIGNED_SHORT;\n            o.glDataFormat = cgl.gl.DEPTH_COMPONENT;\n        }\n        else\n        {\n            o.glInternalFormat = cgl.gl.DEPTH_COMPONENT32F;\n            o.glDataType = cgl.gl.FLOAT;\n            o.glDataFormat = cgl.gl.DEPTH_COMPONENT;\n        }\n    }\n    else\n    {\n        console.log(\"unknown pixelformat \", pixelFormatStr);\n    }\n    /// //////\n\n    if (pixelFormatStr.indexOf(\"32bit\") || pixelFormatStr == Texture.PFORMATSTR_R11FG11FB10F)\n    {\n        if (cgl.glVersion == 2) cgl.enableExtension(\"EXT_color_buffer_float\");\n        if (cgl.glVersion == 2) cgl.enableExtension(\"EXT_float_blend\");\n\n        cgl.enableExtension(\"OES_texture_float_linear\"); // yes, i am sure, this is a webgl 1 and 2 ext\n    }\n\n    if (pixelFormatStr.indexOf(\"16bit\"))\n    {\n        cgl.enableExtension(\"EXT_color_buffer_half_float\");\n        cgl.enableExtension(\"OES_texture_float_linear\");\n    }\n\n\n    o.numColorChannels = 1;\n    if (pixelFormatStr.indexOf(\"R\") == 0)o.numColorChannels = 1;\n    if (pixelFormatStr.indexOf(\"RG\") == 0)o.numColorChannels = 2;\n    if (pixelFormatStr.indexOf(\"RGB\") == 0)o.numColorChannels = 3;\n    if (pixelFormatStr.indexOf(\"RGBA\") == 0)o.numColorChannels = 4;\n\n\n    // console.log(pixelFormatStr, this.name);\n\n    if (!o.glDataType || !o.glInternalFormat || !o.glDataFormat) console.log(\"pixelformat wrong ?!\", pixelFormatStr, o.glDataType, o.glInternalFormat, o.glDataFormat, this);\n\n    return o;\n};\n\n/**\n * set pixel size of texture\n * @function setSize\n * @memberof Texture\n * @instance\n * @param {Number} width\n * @param {Number} height\n */\nTexture.prototype.setSize = function (w, h)\n{\n    if (this._cgl.aborted) return;\n    if (w != w || w <= 0 || !w) w = DEFAULT_TEXTURE_SIZE;\n    if (h != h || h <= 0 || !h) h = DEFAULT_TEXTURE_SIZE;\n\n    if (w > this._cgl.maxTexSize || h > this._cgl.maxTexSize) this._log.error(\"texture size too big! \" + w + \"x\" + h + \" / max: \" + this._cgl.maxTexSize);\n\n    w = Math.min(w, this._cgl.maxTexSize);\n    h = Math.min(h, this._cgl.maxTexSize);\n\n    w = Math.floor(w);\n    h = Math.floor(h);\n    if (this.width == w && this.height == h) return;\n\n    // console.log(\"tex setsize\", this.name, w, h, this.id);\n\n    this.width = w;\n    this.height = h;\n    this.deleted = false;\n\n\n    this.setFormat(Texture.setUpGlPixelFormat(this._cgl, this.pixelFormat));\n\n\n    this.shortInfoString = this.getInfoOneLine();// w + \"x\" + h + \"\";\n    // if (this.textureType == Texture.TYPE_FLOAT) this.shortInfoString += \" Float\";\n\n    // if (this._cgl.printError(\"cgltex before\"))\n    // {\n    //     this.printInfo();\n    //     console.log((new Error()).stack);\n    // }\n\n    this._cgl.gl.bindTexture(this.texTarget, this.tex);\n    this._cgl.profileData.profileTextureResize++;\n\n    const uarr = null;\n\n\n    // if (\n    //     this._cgl.glVersion == 1 &&\n    //     this.textureType == Texture.TYPE_FLOAT && this.filter == Texture.FILTER_LINEAR &&\n    //     (!this._cgl.enableExtension(\"OES_texture_float_linear\"))\n    // )\n    // {\n    //     console.warn(\"this graphics card does not support floating point texture linear interpolation! using NEAREST\");\n    //     this.filter = Texture.FILTER_NEAREST;\n    // }\n\n\n    // else\n    // {\n    //     dataType = this._cgl.gl.UNSIGNED_BYTE;\n    //     internalFormat = this._cgl.gl.RGBA;\n    //     dataFormat = this._cgl.gl.RGBA;\n    //     // this._cgl.gl.texImage2D(this.texTarget, 0, this._cgl.gl.RGBA, w, h, 0, this._cgl.gl.RGBA, this._cgl.gl.UNSIGNED_BYTE, uarr);\n    // }\n\n    this._cgl.gl.texImage2D(this.texTarget, 0, this._glInternalFormat, w, h, 0, this._glDataFormat, this._glDataType, uarr);\n\n    this._setFilter();\n\n    // if (this._cgl.printError(\"cgltex\"))\n    // {\n    //     this.printInfo();\n    //     console.log((new Error()).stack);\n    // }\n\n    this.updateMipMap();\n\n    this._cgl.gl.bindTexture(this.texTarget, null);\n};\n\n\n\n/**\n * @function initFromData\n * @memberof Texture\n * @instance\n * @description create texturem from rgb data\n * @param {Array<Number>} data rgb color array [r,g,b,a,r,g,b,a,...]\n * @param {Number} width\n * @param {Number} height\n * @param {Number} filter\n * @param {Number} wrap\n */\nTexture.prototype.initFromData = function (data, w, h, filter, wrap)\n{\n    this.filter = filter;\n    this.wrap = wrap;\n    if (filter == undefined) this.filter = Texture.FILTER_LINEAR;\n    if (wrap == undefined) this.wrap = Texture.WRAP_CLAMP_TO_EDGE;\n    this.width = w;\n    this.height = h;\n    this._fromData = true;\n    this.deleted = false;\n\n    if (this.height > this._cgl.maxTexSize || this.width > this._cgl.maxTexSize)\n    {\n        const t = CGL.Texture.getTempTexture(this._cgl);\n        this.width = t.width;\n        this.height = t.height;\n        this.tex = t.tex;\n        this._log.error(\"[cgl_texture] texture size to big!!!\", this.width, this.height, this._cgl.maxTexSize);\n        return;\n    }\n\n    if (this.flip) this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL, this.flip);\n\n    this._cgl.gl.bindTexture(this.texTarget, this.tex);\n\n    this.setFormat(Texture.setUpGlPixelFormat(this._cgl, this.pixelFormat));\n\n    this._cgl.gl.texImage2D(this.texTarget, 0, this._glInternalFormat, w, h, 0, this._glDataFormat, this._glDataType, data);\n\n    this._setFilter();\n    this.updateMipMap();\n\n    if (this.flip) this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL, false);\n    this._cgl.gl.bindTexture(this.texTarget, null);\n};\n\nTexture.prototype.updateMipMap = function ()\n{\n    if ((this._cgl.glVersion == 2 || this.isPowerOfTwo()) && this.filter == Texture.FILTER_MIPMAP)\n    {\n        this._cgl.gl.generateMipmap(this.texTarget);\n        this._cgl.profileData.profileGenMipMap++;\n    }\n};\n\n/**\n * set texture data from an image/canvas object\n * @function initTexture\n * @memberof Texture\n * @instance\n * @param {Object} image\n * @param {Number} filter\n */\nTexture.prototype.initTexture = function (img, filter)\n{\n    this._cgl.printError(\"before initTexture\");\n    this._cgl.checkFrameStarted(\"texture inittexture\");\n    this._fromData = false;\n    // if(filter) this.unpackAlpha=filter.unpackAlpha||this.unpackAlpha;\n\n    this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.unpackAlpha);\n    if (img.width) this.width = img.width;\n    if (img.height) this.height = img.height;\n    if (filter) this.filter = filter;\n\n    if (img.height > this._cgl.maxTexSize || img.width > this._cgl.maxTexSize)\n    {\n        const t = CGL.Texture.getTempTexture(this._cgl);\n        this.width = t.width;\n        this.height = t.height;\n        this.tex = t.tex;\n        this._log.error(\"[cgl_texture] texture size to big!!!\", img.width, img.height, this._cgl.maxTexSize);\n        return;\n    }\n\n\n    // console.log(\"loaded texture\", img.width, img.height);\n\n    this._cgl.gl.bindTexture(this.texTarget, this.tex);\n\n    this.deleted = false;\n    this.flipped = !this.flip;\n    if (this.flipped) this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL, this.flipped);\n\n\n    this.setFormat(Texture.setUpGlPixelFormat(this._cgl, this.pixelFormat));\n\n    this._cgl.gl.texImage2D(this.texTarget, 0, this._glInternalFormat, this._glDataFormat, this._glDataType, img);\n    // this._cgl.gl.texImage2D(this.texTarget, 0, this._cgl.gl.RGBA, this._cgl.gl.RGBA, this._cgl.gl.UNSIGNED_BYTE, img);\n\n    // if (this._cgl.printError(\"[cgl_texture] init \" + this.name));\n\n    this._setFilter();\n    this.updateMipMap();\n\n    // if (this._cgl.printError(\"[cgl_texture] init2\"));\n\n    this._cgl.gl.bindTexture(this.texTarget, null);\n    this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n    if (this.flipped) this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL, false);\n\n    this.getInfoOneLine();\n    this._cgl.printError(\"initTexture\");\n};\n\n/**\n * delete texture. use this when texture is no longer needed\n * @function delete\n * @memberof Texture\n * @instance\n */\nTexture.prototype.delete = function ()\n{\n    if (this.loading)\n    {\n        // cant delete texture when still loading\n        // setTimeout(this.delete.bind(this), 50);\n        return;\n    }\n\n    this.deleted = true;\n    this.width = 0;\n    this.height = 0;\n    this._cgl.profileData.profileTextureDelete++;\n    this._cgl.gl.deleteTexture(this.tex);\n    this.image = null;\n\n    this.tex = null;\n};\n\n/**\n * @function isPowerOfTwo\n * @memberof Texture\n * @instance\n * @description return true if texture width and height are both power of two\n * @return {Boolean}\n */\nTexture.prototype.isPowerOfTwo = function ()\n{\n    return Texture.isPowerOfTwo(this.width) && Texture.isPowerOfTwo(this.height);\n};\n\nTexture.prototype.printInfo = function ()\n{\n    console.log(this.getInfo());\n};\n\nTexture.prototype.getInfoReadable = function ()\n{\n    const info = this.getInfo();\n    let html = \"\";\n\n    info.name = info.name.substr(0, info.name.indexOf(\"?rnd=\"));\n\n    for (const i in info)\n    {\n        html += \"* \" + i + \":  **\" + info[i] + \"**\\n\";\n    }\n\n    return html;\n};\n\nTexture.prototype.getInfoOneLine = function ()\n{\n    let txt = \"\" + this.width + \"x\" + this.height;\n    txt += \" \";\n    // if (this.textureType === CGL.Texture.TYPE_FLOAT) txt += \" 32bit\"; else txt += \" 8bit\";\n    // if (this.textureType === CGL.Texture.TYPE_FLOAT) txt += \" 32bit\"; else txt += \" 8bit\";\n    txt += this.pixelFormat;\n\n    if (this.filter === CGL.Texture.FILTER_NEAREST) txt += \" nearest\";\n    if (this.filter === CGL.Texture.FILTER_LINEAR) txt += \" linear\";\n    if (this.filter === CGL.Texture.FILTER_MIPMAP) txt += \" mipmap\";\n\n    if (this.wrap === CGL.Texture.WRAP_CLAMP_TO_EDGE) txt += \" clamp\";\n    if (this.wrap === CGL.Texture.WRAP_REPEAT) txt += \" repeat\";\n    if (this.wrap === CGL.Texture.WRAP_MIRRORED_REPEAT) txt += \" repeatmir\";\n\n    this.shortInfoString = txt;\n\n    return txt;\n};\n\nTexture.prototype.getInfoOneLineShort = function ()\n{\n    let txt = \"\" + this.width + \"x\" + this.height;\n    // if (this.textureType === CGL.Texture.TYPE_FLOAT) txt += \" 32bit\"; else txt += \" 8bit\";\n    txt += \" \";\n    txt += this.pixelFormat;\n\n    this.shortInfoString = txt;\n\n    return txt;\n};\n\n\nTexture.prototype.getInfo = function ()\n{\n    return Texture.getTexInfo(this);\n};\n\n\nTexture.prototype._setFilter = function ()\n{\n    this._cgl.printError(\"before _setFilter\");\n\n    if (!this._fromData)\n    {\n        this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.unpackAlpha);\n    }\n\n    if (this.shadowMap)\n    {\n        this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D, this._cgl.gl.TEXTURE_COMPARE_MODE, this._cgl.gl.COMPARE_REF_TO_TEXTURE);\n        this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D, this._cgl.gl.TEXTURE_COMPARE_FUNC, this._cgl.gl.LEQUAL);\n    }\n\n    if (this.textureType == Texture.TYPE_FLOAT && this.filter == Texture.FILTER_MIPMAP)\n    {\n        this.filter = Texture.FILTER_LINEAR;\n        this._log.stack(\"texture: HDR and mipmap filtering at the same time is not possible\");\n    }\n\n    if (this._cgl.glVersion == 1 && !this.isPowerOfTwo())\n    {\n        this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MAG_FILTER, this._cgl.gl.NEAREST);\n        this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MIN_FILTER, this._cgl.gl.NEAREST);\n\n        this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_S, this._cgl.gl.CLAMP_TO_EDGE);\n        this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_T, this._cgl.gl.CLAMP_TO_EDGE);\n\n        this.filter = Texture.FILTER_NEAREST;\n        this.wrap = Texture.WRAP_CLAMP_TO_EDGE;\n    }\n    else\n    {\n        if (this.wrap == Texture.WRAP_CLAMP_TO_EDGE)\n        {\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_S, this._cgl.gl.CLAMP_TO_EDGE);\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_T, this._cgl.gl.CLAMP_TO_EDGE);\n        }\n        else if (this.wrap == Texture.WRAP_REPEAT)\n        {\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_S, this._cgl.gl.REPEAT);\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_T, this._cgl.gl.REPEAT);\n        }\n        else if (this.wrap == Texture.WRAP_MIRRORED_REPEAT)\n        {\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_S, this._cgl.gl.MIRRORED_REPEAT);\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_T, this._cgl.gl.MIRRORED_REPEAT);\n        }\n\n        if (this.filter == Texture.FILTER_NEAREST)\n        {\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MAG_FILTER, this._cgl.gl.NEAREST);\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MIN_FILTER, this._cgl.gl.NEAREST);\n        }\n        else if (this.filter == Texture.FILTER_LINEAR)\n        {\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MIN_FILTER, this._cgl.gl.LINEAR);\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MAG_FILTER, this._cgl.gl.LINEAR);\n        }\n        else if (this.filter == Texture.FILTER_MIPMAP)\n        {\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MAG_FILTER, this._cgl.gl.LINEAR);\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MIN_FILTER, this._cgl.gl.LINEAR_MIPMAP_LINEAR);\n        }\n        else\n        {\n            this._log.log(\"unknown texture filter!\", this.filter);\n            throw new Error(\"unknown texture filter!\" + this.filter);\n        }\n\n        if (this.anisotropic)\n        {\n            const ext = this._cgl.enableExtension(\"EXT_texture_filter_anisotropic\");\n            if (ext)\n            {\n                const max = this._cgl.gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n                this._cgl.gl.texParameterf(this._cgl.gl.TEXTURE_2D, ext.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(max, this.anisotropic));\n            }\n        }\n    }\n    this.getInfoOneLine();\n    this._cgl.printError(\"_setFilter\");\n};\n\n\n/**\n * @function load\n * @static\n * @memberof Texture\n * @description load an image from an url\n * @param {Context} cgl\n * @param {String} url\n * @param {Function} onFinished\n * @param {Object} options\n * @return {Texture}\n */\nTexture.load = function (cgl, url, finishedCallback, settings)\n{\n    if (!url) return finishedCallback({ \"error\": true });\n    let loadingId = null;\n    if (!cgl.patch.loading.existByName(url)) loadingId = cgl.patch.loading.start(\"texture\", url);\n\n    const texture = new Texture(cgl);\n    texture.name = url;\n\n    // texture.pixelFormat = Texture.PFORMATSTR_;\n\n    if (cgl.patch.isEditorMode()) gui.jobs().start({ \"id\": \"loadtexture\" + loadingId, \"title\": \"loading texture \" + CABLES.basename(url) });\n\n    texture.image = new Image();\n    texture.image.crossOrigin = \"anonymous\";\n    texture.loading = true;\n\n    if (settings && settings.hasOwnProperty(\"filter\")) texture.filter = settings.filter;\n    if (settings && settings.hasOwnProperty(\"flip\")) texture.flip = settings.flip;\n    if (settings && settings.hasOwnProperty(\"wrap\")) texture.wrap = settings.wrap;\n    if (settings && settings.hasOwnProperty(\"anisotropic\")) texture.anisotropic = settings.anisotropic;\n    if (settings && settings.hasOwnProperty(\"unpackAlpha\")) texture.unpackAlpha = settings.unpackAlpha;\n    if (settings && settings.hasOwnProperty(\"pixelFormat\")) texture.pixelFormat = settings.pixelFormat;\n\n    texture.image.onabort = texture.image.onerror = (e) =>\n    {\n        console.warn(\"[cgl.texture.load] error loading texture\", url, e);\n        texture.loading = false;\n        if (loadingId) cgl.patch.loading.finished(loadingId);\n        const error = { \"error\": true };\n        if (finishedCallback) finishedCallback(error, texture);\n        if (cgl.patch.isEditorMode()) gui.jobs().finish(\"loadtexture\" + loadingId);\n    };\n\n    texture.image.onload = function (e)\n    {\n        cgl.addNextFrameOnceCallback(() =>\n        {\n            texture.initTexture(texture.image);\n            if (loadingId) cgl.patch.loading.finished(loadingId);\n            texture.loading = false;\n            if (cgl.patch.isEditorMode()) gui.jobs().finish(\"loadtexture\" + loadingId);\n\n            if (finishedCallback) finishedCallback(null, texture);\n        });\n    };\n    texture.image.src = url;\n\n    return texture;\n};\n\n/**\n * @static\n * @function getTempTexture\n * @memberof Texture\n * @description returns the default temporary texture (grey diagonal stipes)\n * @param {Context} cgl\n * @return {Texture}\n */\nTexture.getTempTexture = function (cgl)\n{\n    if (!cgl) console.error(\"[getTempTexture] no cgl!\");\n    if (!cgl.tempTexture) cgl.tempTexture = Texture.getTemporaryTexture(cgl, 256, Texture.FILTER_LINEAR, Texture.REPEAT);\n    return cgl.tempTexture;\n};\n\n/**\n * @static\n * @function getErrorTexture\n * @memberof Texture\n * @description returns the default temporary texture (grey diagonal stipes)\n * @param {Context} cgl\n * @return {Texture}\n */\nTexture.getErrorTexture = function (cgl)\n{\n    if (!cgl) console.error(\"[getTempTexture] no cgl!\");\n    if (!cgl.errorTexture) cgl.errorTexture = Texture.getTemporaryTexture(cgl, 256, Texture.FILTER_LINEAR, Texture.REPEAT, 1, 0.2, 0.2);\n    return cgl.errorTexture;\n};\n\n\n/**\n * @function getEmptyTexture\n * @memberof Texture\n * @instance\n * @description returns a reference to a small empty (transparent) texture\n * @return {Texture}\n */\nTexture.getEmptyTexture = function (cgl, fp)\n{\n    if (fp) return Texture.getEmptyTextureFloat(cgl);\n    if (!cgl) console.error(\"[getEmptyTexture] no cgl!\");\n    if (cgl.tempTextureEmpty) return cgl.tempTextureEmpty;\n\n    cgl.tempTextureEmpty = new Texture(cgl, { \"name\": \"emptyTexture\" });\n    const data = new Uint8Array(8 * 8 * 4).fill(0);\n    for (let i = 0; i < 8 * 8 * 4; i += 4) data[i + 3] = 0;\n\n    cgl.tempTextureEmpty.initFromData(data, 8, 8, Texture.FILTER_NEAREST, Texture.WRAP_REPEAT);\n\n    return cgl.tempTextureEmpty;\n};\n\n/**\n * @function getEmptyTextureFloat\n * @memberof Texture\n * @instance\n * @description returns a reference to a small empty (transparent) 32bit texture\n * @return {Texture}\n */\nTexture.getEmptyTextureFloat = function (cgl)\n{\n    if (!cgl) console.error(\"[getEmptyTextureFloat] no cgl!\");\n    if (cgl.tempTextureEmptyFloat) return cgl.tempTextureEmptyFloat;\n\n    cgl.tempTextureEmptyFloat = new Texture(cgl, { \"name\": \"emptyTexture\", \"isFloatingPointTexture\": true });\n    const data = new Float32Array(8 * 8 * 4).fill(1);\n    for (let i = 0; i < 8 * 8 * 4; i += 4) data[i + 3] = 0;\n\n    cgl.tempTextureEmptyFloat.initFromData(data, 8, 8, Texture.FILTER_NEAREST, Texture.WRAP_REPEAT);\n\n    return cgl.tempTextureEmptyFloat;\n};\n\n\n/**\n * @function getRandomTexture\n * @memberof Texture\n * @static\n * @description returns a reference to a random texture\n * @return {Texture}\n */\nTexture.getRandomTexture = function (cgl)\n{\n    if (!cgl) console.error(\"[getRandomTexture] no cgl!\");\n    if (cgl.randomTexture) return cgl.randomTexture;\n\n    const size = 256;\n    const data = new Uint8Array(size * size * 4);\n\n    for (let x = 0; x < size * size; x++)\n    {\n        data[x * 4 + 0] = Math.random() * 255;\n        data[x * 4 + 1] = Math.random() * 255;\n        data[x * 4 + 2] = Math.random() * 255;\n        data[x * 4 + 3] = 255;\n    }\n\n    cgl.randomTexture = new Texture(cgl);\n    cgl.randomTexture.initFromData(data, size, size, Texture.FILTER_NEAREST, Texture.WRAP_REPEAT);\n\n    return cgl.randomTexture;\n};\n\n/**\n * @function getRandomFloatTexture\n * @memberof Texture\n * @static\n * @description returns a reference to a texture containing random numbers between -1 and 1\n * @return {Texture}\n */\nTexture.getRandomFloatTexture = function (cgl)\n{\n    if (!cgl) console.error(\"[getRandomTexture] no cgl!\");\n    if (cgl.getRandomFloatTexture) return cgl.getRandomFloatTexture;\n\n    const size = 256;\n    const data = new Float32Array(size * size * 4);\n\n    for (let x = 0; x < size * size; x++)\n    {\n        data[x * 4 + 0] = (Math.random() - 0.5) * 2.0;\n        data[x * 4 + 1] = (Math.random() - 0.5) * 2.0;\n        data[x * 4 + 2] = (Math.random() - 0.5) * 2.0;\n        data[x * 4 + 3] = 1;\n    }\n\n    cgl.getRandomFloatTexture = new Texture(cgl, { \"isFloatingPointTexture\": true });\n    cgl.getRandomFloatTexture.initFromData(data, size, size, Texture.FILTER_NEAREST, Texture.WRAP_REPEAT);\n\n    return cgl.getRandomFloatTexture;\n};\n\n/**\n * @function getBlackTexture\n * @memberof Texture\n * @static\n * @description returns a reference to a black texture\n * @return {Texture}\n */\nTexture.getBlackTexture = function (cgl)\n{\n    if (!cgl) this._log.error(\"[getBlackTexture] no cgl!\");\n    if (cgl.blackTexture) return cgl.blackTexture;\n\n    const size = 8;\n    const data = new Uint8Array(size * size * 4);\n\n    for (let x = 0; x < size * size; x++)\n    {\n        data[x * 4 + 0] = data[x * 4 + 1] = data[x * 4 + 2] = 0;\n        data[x * 4 + 3] = 255;\n    }\n\n    cgl.blackTexture = new Texture(cgl);\n    cgl.blackTexture.initFromData(data, size, size, Texture.FILTER_NEAREST, Texture.WRAP_REPEAT);\n\n    return cgl.blackTexture;\n};\n\n\n/**\n * @function getEmptyCubemapTexture\n * @memberof Texture\n * @static\n * @description returns an empty cubemap texture with rgba = [0, 0, 0, 0]\n * @return {Texture}\n */\nTexture.getEmptyCubemapTexture = function (cgl)\n{\n    const faces = [\n        cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n        cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n        cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n        cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n        cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n        cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\n    ];\n\n    const tex = cgl.gl.createTexture();\n    const target = cgl.gl.TEXTURE_CUBE_MAP;\n    const filter = Texture.FILTER_NEAREST;\n    const wrap = Texture.WRAP_CLAMP_TO_EDGE;\n    const width = 8;\n    const height = 8;\n\n    cgl.profileData.profileTextureNew++;\n\n\n    cgl.gl.bindTexture(target, tex);\n    cgl.profileData.profileTextureResize++;\n\n    for (let i = 0; i < 6; i += 1)\n    {\n        const data = new Uint8Array(8 * 8 * 4);\n\n        cgl.gl.texImage2D(faces[i], 0, cgl.gl.RGBA, 8, 8, 0, cgl.gl.RGBA, cgl.gl.UNSIGNED_BYTE, data);\n        cgl.gl.texParameteri(target, cgl.gl.TEXTURE_MAG_FILTER, cgl.gl.NEAREST);\n        cgl.gl.texParameteri(target, cgl.gl.TEXTURE_MIN_FILTER, cgl.gl.NEAREST);\n\n        cgl.gl.texParameteri(target, cgl.gl.TEXTURE_WRAP_S, cgl.gl.CLAMP_TO_EDGE);\n        cgl.gl.texParameteri(target, cgl.gl.TEXTURE_WRAP_T, cgl.gl.CLAMP_TO_EDGE);\n    }\n\n\n    cgl.gl.bindTexture(target, null);\n\n    return {\n        \"id\": CABLES.uuid(),\n        \"tex\": tex,\n        \"cubemap\": tex,\n        \"width\": width,\n        \"height\": height,\n        \"filter\": filter,\n        \"wrap\": wrap,\n        \"unpackAlpha\": true,\n        \"flip\": true,\n        \"_fromData\": true,\n        \"name\": \"emptyCubemapTexture\",\n        \"anisotropic\": 0,\n    };\n};\n\n/**\n * @static\n * @function getTempGradientTexture\n * @memberof Texture\n * @description returns a gradient texture from black to white\n * @param {Context} cgl\n * @return {Texture}\n */\nTexture.getTempGradientTexture = function (cgl)\n{\n    if (!cgl) console.error(\"[getTempGradientTexture] no cgl!\");\n\n    if (cgl.tempTextureGradient) return cgl.tempTextureGradient;\n    const temptex = new Texture(cgl);\n    const size = 256;\n    const data = new Uint8Array(size * size * 4); // .fill(0);\n\n    for (let y = 0; y < size; y++)\n    {\n        for (let x = 0; x < size; x++)\n        {\n            data[(x + y * size) * 4 + 0] = data[(x + y * size) * 4 + 1] = data[(x + y * size) * 4 + 2] = 255 - y;\n            data[(x + y * size) * 4 + 3] = 255;\n        }\n    }\n\n    temptex.initFromData(data, size, size, Texture.FILTER_NEAREST, Texture.WRAP_REPEAT);\n    cgl.tempTextureGradient = temptex;\n    return temptex;\n};\n\nTexture.getTemporaryTexture = function (cgl, size, filter, wrap, r, g, b)\n{\n    if (r === undefined)r = 1;\n    if (g === undefined)g = 1;\n    if (b === undefined)b = 1;\n    const temptex = new Texture(cgl);\n    const arr = [];\n    for (let y = 0; y < size; y++)\n    {\n        for (let x = 0; x < size; x++)\n        {\n            if ((x + y) % 64 < 32)\n            {\n                arr.push((200 + (y / size) * 25 + (x / size) * 25) * r);\n                arr.push((200 + (y / size) * 25 + (x / size) * 25) * g);\n                arr.push((200 + (y / size) * 25 + (x / size) * 25) * b);\n            }\n            else\n            {\n                arr.push((40 + (y / size) * 25 + (x / size) * 25) * r);\n                arr.push((40 + (y / size) * 25 + (x / size) * 25) * g);\n                arr.push((40 + (y / size) * 25 + (x / size) * 25) * b);\n            }\n            arr.push(255);\n        }\n    }\n\n    const data = new Uint8Array(arr);\n    temptex.initFromData(data, size, size, filter, wrap);\n\n    return temptex;\n};\n\n/**\n * @static\n * @function createFromImage\n * @memberof Texture\n * @description create texturem from image data (e.g. image or canvas)\n * @param {Context} cgl\n * @param {Object} image\n * @param {Object} options\n */\nTexture.createFromImage = function (cgl, img, options)\n{\n    options = options || {};\n    const texture = new Texture(cgl, options);\n    texture.flip = false;\n    texture.image = img;\n    texture.width = img.width;\n    texture.height = img.height;\n    if (options.hasOwnProperty(\"wrap\"))texture.wrap = options.wrap;\n    texture.initTexture(img, options.filter);\n\n    return texture;\n};\n\n// deprecated!\nTexture.fromImage = function (cgl, img, filter, wrap)\n{\n    console.error(\"deprecated texture from image...\");\n\n    const texture = new Texture(cgl);\n    texture.flip = false;\n    if (filter) texture.filter = filter;\n    if (wrap) texture.wrap = wrap;\n    texture.image = img;\n    texture.initTexture(img);\n    return texture;\n};\n\n/**\n * @static\n * @function isPowerOfTwo\n * @memberof Texture\n * @description returns true if x is power of two\n * @param {Number} x\n * @return {Boolean}\n */\nTexture.isPowerOfTwo = function (x)\n{\n    return x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384;\n};\n\nTexture.getTexInfo = function (tex)\n{\n    const obj = {};\n\n    obj.name = tex.name;\n    obj[\"power of two\"] = tex.isPowerOfTwo();\n    obj.size = tex.width + \" x \" + tex.height;\n\n    let targetString = tex.texTarget;\n    if (tex.texTarget == tex._cgl.gl.TEXTURE_2D) targetString = \"TEXTURE_2D\";\n    obj.target = targetString;\n\n    obj.unpackAlpha = tex.unpackAlpha;\n\n    if (tex.cubemap)obj.cubemap = true;\n\n    if (tex.textureType == Texture.TYPE_FLOAT) obj.textureType = \"TYPE_FLOAT\";\n    if (tex.textureType == Texture.TYPE_HALF_FLOAT) obj.textureType = \"TYPE_HALF_FLOAT\";\n    else if (tex.textureType == Texture.TYPE_DEPTH) obj.textureType = \"TYPE_DEPTH\";\n    else if (tex.textureType == Texture.TYPE_DEFAULT) obj.textureType = \"TYPE_DEFAULT\";\n    else obj.textureType = \"UNKNOWN \" + this.textureType;\n\n    if (tex.wrap == Texture.WRAP_CLAMP_TO_EDGE) obj.wrap = \"CLAMP_TO_EDGE\";\n    else if (tex.wrap == Texture.WRAP_REPEAT) obj.wrap = \"WRAP_REPEAT\";\n    else if (tex.wrap == Texture.WRAP_MIRRORED_REPEAT) obj.wrap = \"WRAP_MIRRORED_REPEAT\";\n    else obj.wrap = \"UNKNOWN\";\n\n    if (tex.filter == Texture.FILTER_NEAREST) obj.filter = \"FILTER_NEAREST\";\n    else if (tex.filter == Texture.FILTER_LINEAR) obj.filter = \"FILTER_LINEAR\";\n    else if (tex.filter == Texture.FILTER_MIPMAP) obj.filter = \"FILTER_MIPMAP\";\n    else obj.filter = \"UNKNOWN\";\n\n    obj.pixelFormat = tex.pixelFormat || \"unknown\";\n\n    return obj;\n};\n\n\nTexture.FILTER_NEAREST = 0;\nTexture.FILTER_LINEAR = 1;\nTexture.FILTER_MIPMAP = 2;\n\nTexture.WRAP_REPEAT = 0;\nTexture.WRAP_MIRRORED_REPEAT = 1;\nTexture.WRAP_CLAMP_TO_EDGE = 2;\n\nTexture.TYPE_DEFAULT = 0;\nTexture.TYPE_DEPTH = 1;\nTexture.TYPE_FLOAT = 2;\n\n\nTexture.PFORMATSTR_RGB565 = \"RGB 5/6/5bit ubyte\";\n\nTexture.PFORMATSTR_R8UB = \"R 8bit ubyte\";\nTexture.PFORMATSTR_RG8UB = \"RG 8bit ubyte\";\nTexture.PFORMATSTR_RGB8UB = \"RGB 8bit ubyte\";\nTexture.PFORMATSTR_RGBA8UB = \"RGBA 8bit ubyte\";\n\nTexture.PFORMATSTR_R11FG11FB10F = \"RGB 11/11/10bit float\";\n\nTexture.PFORMATSTR_R16F = \"R 16bit float\";\nTexture.PFORMATSTR_RG16F = \"RG 16bit float\";\nTexture.PFORMATSTR_RGB16F = \"RGB 16bit float\";\nTexture.PFORMATSTR_RGBA16F = \"RGBA 16bit float\";\n\n\nTexture.PFORMATSTR_R32F = \"R 32bit float\";\nTexture.PFORMATSTR_RGBA32F = \"RGBA 32bit float\";\n\nTexture.PFORMATSTR_DEPTH = \"DEPTH\";\n\n\nTexture.PIXELFORMATS = [\n\n    Texture.PFORMATSTR_RGB565,\n\n    Texture.PFORMATSTR_R8UB,\n    Texture.PFORMATSTR_RG8UB,\n    Texture.PFORMATSTR_RGB8UB,\n    Texture.PFORMATSTR_RGBA8UB,\n    Texture.PFORMATSTR_R11FG11FB10F,\n    Texture.PFORMATSTR_R16F,\n    Texture.PFORMATSTR_RG16F,\n    Texture.PFORMATSTR_RGBA16F,\n\n    Texture.PFORMATSTR_R32F,\n    Texture.PFORMATSTR_RGBA32F\n\n];\n\nTexture.isPixelFormatFloat =\n    (pxlfrmt) =>\n    {\n        return (pxlfrmt || \"\").indexOf(\"float\") > -1;\n    };\n\nTexture.isPixelFormatHalfFloat =\n    (pxlfrmt) =>\n    {\n        return (pxlfrmt || \"\").indexOf(\"float\") > -1 && (pxlfrmt || \"\").indexOf(\"16bit\") > -1;\n    };\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_texture.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_textureeffect.js":
/*!*******************************************!*\
  !*** ./src/core/cgl/cgl_textureeffect.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TextureEffect\": () => (/* binding */ TextureEffect)\n/* harmony export */ });\n/* harmony import */ var _cgl_texture__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cgl_texture */ \"./src/core/cgl/cgl_texture.js\");\n/* harmony import */ var _cgl_simplerect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cgl_simplerect */ \"./src/core/cgl/cgl_simplerect.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core_logger */ \"./src/core/core_logger.js\");\n\n\n\n\nconst TextureEffect = function (cgl, options)\n{\n    this._cgl = cgl;\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\"cgl_TextureEffect\");\n\n    if (!cgl.TextureEffectMesh) this.createMesh();\n\n    this._textureSource = null;\n    this._options = options;\n\n    // TODO: do we still need the options ?\n    // var opts=options ||\n    //     {\n    //         isFloatingPointTexture:false,\n    //         filter:CGL.Texture.FILTER_LINEAR\n    //     };\n    // if(options && options.fp)opts.isFloatingPointTexture=true;\n\n    this.imgCompVer = 0;\n    this.aspectRatio = 1;\n    this._textureTarget = null; // new CGL.Texture(this._cgl,opts);\n    this._frameBuf = this._cgl.gl.createFramebuffer();\n    this._frameBuf2 = this._cgl.gl.createFramebuffer();\n    this._renderbuffer = this._cgl.gl.createRenderbuffer();\n    this._renderbuffer2 = this._cgl.gl.createRenderbuffer();\n    this.switched = false;\n    this.depth = false;\n};\n\nTextureEffect.prototype.getWidth = function ()\n{\n    return this._textureSource.width;\n};\n\nTextureEffect.prototype.getHeight = function ()\n{\n    return this._textureSource.height;\n};\n\nTextureEffect.prototype.setSourceTexture = function (tex)\n{\n    // if (tex.pixelFormat == Texture.PFORMATSTR_R11FG11FB10F) this._cgl.gl.getExtension(\"EXT_color_buffer_float\");\n    // if (tex.pixelFormat == Texture.PFORMATSTR_RGBA32F) this._cgl.gl.getExtension(\"EXT_color_buffer_float\");\n    // if (tex.pixelFormat == Texture.PFORMATSTR_RGBA16F) this._cgl.gl.getExtension(\"EXT_color_buffer_half_float\");\n\n    if (tex === null)\n    {\n        this._textureSource = new _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture(this._cgl);\n        this._textureSource.setSize(16, 16);\n    }\n    else\n    {\n        this._textureSource = tex;\n    }\n\n\n    if (!this._textureSource.compareSettings(this._textureTarget))\n    {\n        if (this._textureTarget) this._textureTarget.delete();\n\n        this._textureTarget = this._textureSource.clone();\n\n        this._cgl.profileData.profileEffectBuffercreate++;\n\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuf);\n\n        this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, this._renderbuffer);\n\n        // if(tex.textureType==CGL.Texture.TYPE_FLOAT) this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.RGBA32F, this._textureSource.width,this._textureSource.height);\n        // else this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.RGBA8, this._textureSource.width,this._textureSource.height);\n\n        if (this.depth) this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER, this._cgl.gl.DEPTH_COMPONENT16, this._textureSource.width, this._textureSource.height);\n        this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0, this._cgl.gl.TEXTURE_2D, this._textureTarget.tex, 0);\n        if (this.depth) this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.DEPTH_ATTACHMENT, this._cgl.gl.RENDERBUFFER, this._renderbuffer);\n\n        // this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0, this._cgl.gl.TEXTURE_2D, this._textureTarget.tex, 0);\n\n        this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, null);\n        this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, null);\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuf2);\n\n        this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, this._renderbuffer2);\n\n        // if(tex.textureType==CGL.Texture.TYPE_FLOAT) this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.RGBA32F, this._textureSource.width,this._textureSource.height);\n        // else this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.RGBA8, this._textureSource.width,this._textureSource.height);\n\n        if (this.depth) this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER, this._cgl.gl.DEPTH_COMPONENT16, this._textureSource.width, this._textureSource.height);\n        this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0, this._cgl.gl.TEXTURE_2D, this._textureSource.tex, 0);\n\n        if (this.depth) this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.DEPTH_ATTACHMENT, this._cgl.gl.RENDERBUFFER, this._renderbuffer2);\n\n        // this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0, this._cgl.gl.TEXTURE_2D, this._textureSource.tex, 0);\n\n        this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, null);\n        this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, null);\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n    }\n\n    this.aspectRatio = this._textureSource.width / this._textureSource.height;\n};\nTextureEffect.prototype.continueEffect = function ()\n{\n    this._cgl.pushDepthTest(false);\n\n    this._cgl.pushModelMatrix();\n\n    this._cgl.pushPMatrix();\n\n    this._cgl.pushViewPort(0, 0, this.getCurrentTargetTexture().width, this.getCurrentTargetTexture().height);\n    // this._cgl.gl.viewport(0, 0, this.getCurrentTargetTexture().width, this.getCurrentTargetTexture().height);\n    mat4.perspective(this._cgl.pMatrix, 45, this.getCurrentTargetTexture().width / this.getCurrentTargetTexture().height, 0.1, 1100.0);\n\n    this._cgl.pushPMatrix();\n    mat4.identity(this._cgl.pMatrix);\n\n    this._cgl.pushViewMatrix();\n    mat4.identity(this._cgl.vMatrix);\n\n    this._cgl.pushModelMatrix();\n    mat4.identity(this._cgl.mMatrix);\n};\n\n\nTextureEffect.prototype.startEffect = function (bgTex)\n{\n    if (!this._textureTarget)\n    {\n        this._log.warn(\"effect has no target\");\n        return;\n    }\n\n    this.switched = false;\n\n    this.continueEffect();\n\n    if (bgTex)\n    {\n        this._bgTex = bgTex;\n    }\n    this._countEffects = 0;\n};\n\nTextureEffect.prototype.endEffect = function ()\n{\n    this._cgl.popDepthTest();\n    this._cgl.popModelMatrix();\n\n    this._cgl.popPMatrix();\n    this._cgl.popModelMatrix();\n    this._cgl.popViewMatrix();\n\n    this._cgl.popPMatrix();\n    this._cgl.popViewPort();\n};\n\nTextureEffect.prototype.bind = function ()\n{\n    if (this._textureSource === null)\n    {\n        this._log.warn(\"no base texture set!\");\n        return;\n    }\n\n    if (!this.switched)\n    {\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuf);\n        this._cgl.pushGlFrameBuffer(this._frameBuf);\n    }\n    else\n    {\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuf2);\n        this._cgl.pushGlFrameBuffer(this._frameBuf2);\n    }\n};\n\nTextureEffect.prototype.finish = function ()\n{\n    if (this._textureSource === null)\n    {\n        this._log.warn(\"no base texture set!\");\n        return;\n    }\n\n    this._cgl.TextureEffectMesh.render(this._cgl.getShader());\n\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.popGlFrameBuffer());\n\n    this._cgl.profileData.profileTextureEffect++;\n\n    // this._textureTarget.updateMipMap();\n\n    if (this._textureTarget.filter == _cgl_texture__WEBPACK_IMPORTED_MODULE_0__.Texture.FILTER_MIPMAP)\n    {\n        if (!this.switched)\n        {\n            this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, this._textureTarget.tex);\n            this._textureTarget.updateMipMap();\n        }\n        else\n        {\n            this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, this._textureSource.tex);\n            this._textureSource.updateMipMap();\n        }\n\n        this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, null);\n    }\n\n    this.switched = !this.switched;\n    this._countEffects++;\n};\n\nTextureEffect.prototype.getCurrentTargetTexture = function ()\n{\n    if (this.switched) return this._textureSource;\n    return this._textureTarget;\n};\n\nTextureEffect.prototype.getCurrentSourceTexture = function ()\n{\n    if (this._countEffects == 0 && this._bgTex) return this._bgTex;\n\n    if (this.switched) return this._textureTarget;\n    return this._textureSource;\n};\n\nTextureEffect.prototype.delete = function ()\n{\n    if (this._textureTarget) this._textureTarget.delete();\n    if (this._textureSource) this._textureSource.delete();\n    this._cgl.gl.deleteRenderbuffer(this._renderbuffer);\n    this._cgl.gl.deleteFramebuffer(this._frameBuf);\n};\n\nTextureEffect.prototype.createMesh = function ()\n{\n    this._cgl.TextureEffectMesh = _cgl_simplerect__WEBPACK_IMPORTED_MODULE_1__.MESHES.getSimpleRect(this._cgl, \"texEffectRect\");\n};\n\n// ---------------------------------------------------------------------------------\n\nTextureEffect.checkOpNotInTextureEffect = function (op)\n{\n    if (!op.patch.cgl) return true;\n    if (op.uiAttribs.error && !op.patch.cgl.currentTextureEffect)\n    {\n        op.setUiError(\"textureeffect\", null);\n        return true;\n    }\n    if (!op.patch.cgl.currentTextureEffect) return true;\n\n    if (op.patch.cgl.currentTextureEffect && !op.uiAttribs.error)\n    {\n        op.setUiError(\"textureeffect\", \"This op can not be a child of a ImageCompose/texture effect! imagecompose should only have textureeffect childs.\", 0);\n        return false;\n    }\n\n    if (op.patch.cgl.currentTextureEffect) return false;\n    return true;\n};\n\nTextureEffect.checkOpInEffect = function (op, minver)\n{\n    minver = minver || 0;\n\n    if (op.patch.cgl.currentTextureEffect)\n    {\n        if (op.uiAttribs.uierrors && op.patch.cgl.currentTextureEffect.imgCompVer >= minver)\n        {\n            op.setUiError(\"texeffect\", null);\n            return true;\n        }\n\n        if (minver && op.patch.cgl.currentTextureEffect.imgCompVer < minver)\n        {\n            op.setUiError(\"texeffect\", \"This op must be a child of an ImageCompose op with version >=\" + minver + \" <span class=\\\"button-small\\\" onclick=\\\"gui.patchView.downGradeOp('\" + op.id + \"','\" + op.name + \"')\\\">Downgrade</span> to previous version\", 1);\n        }\n    }\n\n    if (op.patch.cgl.currentTextureEffect) return true;\n\n    if (!op.patch.cgl.currentTextureEffect && (!op.uiAttribs.uierrors || op.uiAttribs.uierrors.length == 0))\n    {\n        op.setUiError(\"texeffect\", \"This op must be a child of an ImageCompose op! More infos <a href=\\\"https://docs.cables.gl/image_composition/image_composition.html\\\" target=\\\"_blank\\\">here</a>. \", 1);\n        return false;\n    }\n\n    if (!op.patch.cgl.currentTextureEffect) return false;\n    return true;\n};\n\nTextureEffect.getBlendCode = function (ver)\n{\n    let src = \"\".endl()\n        + \"vec3 _blend(vec3 base,vec3 blend)\".endl()\n        + \"{\".endl()\n        + \"   vec3 colNew=blend;\".endl()\n        + \"   #ifdef BM_MULTIPLY\".endl()\n        + \"       colNew=base*blend;\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_MULTIPLY_INV\".endl()\n        + \"       colNew=base* vec3(1.0)-blend;\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_AVERAGE\".endl()\n        + \"       colNew=((base + blend) / 2.0);\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_ADD\".endl()\n        + \"       colNew=min(base + blend, vec3(1.0));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_SUBTRACT_ONE\".endl()\n        + \"       colNew=max(base + blend - vec3(1.0), vec3(0.0));\".endl()\n        + \"   #endif\".endl()\n\n        + \"   #ifdef BM_SUBTRACT\".endl()\n        + \"       colNew=base - blend;\".endl()\n        + \"   #endif\".endl()\n\n        + \"   #ifdef BM_DIFFERENCE\".endl()\n        + \"       colNew=abs(base - blend);\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_NEGATION\".endl()\n        + \"       colNew=(vec3(1.0) - abs(vec3(1.0) - base - blend));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_EXCLUSION\".endl()\n        + \"       colNew=(base + blend - 2.0 * base * blend);\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_LIGHTEN\".endl()\n        + \"       colNew=max(blend, base);\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_DARKEN\".endl()\n        + \"       colNew=min(blend, base);\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_OVERLAY\".endl()\n        + \"      #define BlendOverlayf(base, blend)  (base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)))\"\n            // .endl()+'       #define BlendOverlay(base, blend)       Blend(base, blend, BlendOverlayf)'\n            //    .endl()+'      colNew=Blend(base, blend, BlendOverlayf);'\n            .endl()\n        + \"      colNew=vec3(BlendOverlayf(base.r, blend.r),BlendOverlayf(base.g, blend.g),BlendOverlayf(base.b, blend.b));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_SCREEN\".endl()\n        + \"      #define BlendScreenf(base, blend)       (1.0 - ((1.0 - base) * (1.0 - blend)))\"\n            // .endl()+'       #define BlendScreen(base, blend)        Blend(base, blend, BlendScreenf)'\n            // .endl()+'      colNew=Blend(base, blend, BlendScreenf);'\n            .endl()\n        + \"      colNew=vec3(BlendScreenf(base.r, blend.r),BlendScreenf(base.g, blend.g),BlendScreenf(base.b, blend.b));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_SOFTLIGHT\".endl()\n        + \"      #define BlendSoftLightf(base, blend)    ((blend < 0.5) ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend)) : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend)))\"\n            // .endl()+'       #define BlendSoftLight(base, blend)     Blend(base, blend, BlendSoftLightf)'\n            //    .endl()+'      colNew=Blend(base, blend, BlendSoftLightf);'\n            .endl()\n        + \"      colNew=vec3(BlendSoftLightf(base.r, blend.r),BlendSoftLightf(base.g, blend.g),BlendSoftLightf(base.b, blend.b));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_HARDLIGHT\".endl()\n        + \"      #define BlendOverlayf(base, blend)  (base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)))\"\n            // .endl()+'       #define BlendOverlay(base, blend)       Blend(base, blend, BlendOverlayf)'\n            // .endl()+'      colNew=Blend(blend, base, BlendOverlayf);'\n            .endl()\n        + \"      colNew=vec3(BlendOverlayf(base.r, blend.r),BlendOverlayf(base.g, blend.g),BlendOverlayf(base.b, blend.b));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_COLORDODGE\".endl()\n        + \"      #define BlendColorDodgef(base, blend)   ((blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0))\"\n            // .endl()+'      colNew=Blend(base, blend, BlendColorDodgef);'\n            .endl()\n        + \"      colNew=vec3(BlendColorDodgef(base.r, blend.r),BlendColorDodgef(base.g, blend.g),BlendColorDodgef(base.b, blend.b));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_COLORBURN\".endl()\n        + \"      #define BlendColorBurnf(base, blend)    ((blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0))\"\n            // .endl()+'      colNew=Blend(base, blend, BlendColorBurnf);'\n            .endl()\n        + \"      colNew=vec3(BlendColorBurnf(base.r, blend.r),BlendColorBurnf(base.g, blend.g),BlendColorBurnf(base.b, blend.b));\".endl()\n        + \"   #endif\".endl()\n\n\n\n\n\n\n\n\n\n\n        + \"   return colNew;\".endl()\n        + \"}\".endl();\n\n    if (!ver)\n        src += \"vec4 cgl_blend(vec4 oldColor,vec4 newColor,float amount)\".endl()\n                + \"{\".endl()\n                    + \"vec4 col=vec4( _blend(oldColor.rgb,newColor.rgb) ,1.0);\".endl()\n                    + \"col=vec4( mix( col.rgb, oldColor.rgb ,1.0-oldColor.a*amount),1.0);\".endl()\n                    + \"return col;\".endl()\n                + \"}\".endl();\n\n    if (ver >= 3)\n        src += \"vec4 cgl_blendPixel(vec4 base,vec4 col,float amount)\".endl() +\n                \"{\".endl() +\n\n                \"#ifdef BM_MATH_ADD\".endl() +\n                \"   return vec4(base.rgb+col.rgb*amount,1.0);\".endl() +\n                \"#endif\".endl() +\n\n                \"#ifdef BM_MATH_SUB\".endl() +\n                \"   return vec4(base.rgb-col.rgb*amount,1.0);\".endl() +\n                \"#endif\".endl() +\n\n                \"#ifdef BM_MATH_MUL\".endl() +\n                \"   return vec4(base.rgb*col.rgb*amount,1.0);\".endl() +\n                \"#endif\".endl() +\n\n                \"#ifdef BM_MATH_DIV\".endl() +\n                \"   return vec4(base.rgb/col.rgb*amount,1.0);\".endl() +\n                \"#endif\".endl() +\n\n\n                    \"#ifndef BM_MATH\".endl() +\n                        \"vec3 colNew=_blend(base.rgb,col.rgb);\".endl() +\n\n                        \"float newA=clamp(base.a+(col.a*amount),0.,1.);\".endl() +\n\n                        \"#ifdef BM_ALPHAMASKED\".endl() +\n                            \"newA=base.a;\".endl() +\n                        \"#endif\".endl() +\n\n                        \"return vec4(\".endl() +\n                            \"mix(colNew,base.rgb,1.0-(amount*col.a)),\".endl() +\n                            \"newA);\".endl() +\n\n                    \"#endif\".endl() +\n    \"}\".endl();\n\n    return src;\n};\n\nTextureEffect.onChangeBlendSelect = function (shader, blendName, maskAlpha = false)\n{\n    blendName = String(blendName);\n    shader.toggleDefine(\"BM_NORMAL\", blendName == \"normal\");\n    shader.toggleDefine(\"BM_MULTIPLY\", blendName == \"multiply\");\n    shader.toggleDefine(\"BM_MULTIPLY_INV\", blendName == \"multiply invert\");\n    shader.toggleDefine(\"BM_AVERAGE\", blendName == \"average\");\n    shader.toggleDefine(\"BM_ADD\", blendName == \"add\");\n    shader.toggleDefine(\"BM_SUBTRACT_ONE\", blendName == \"subtract one\");\n    shader.toggleDefine(\"BM_SUBTRACT\", blendName == \"subtract\");\n    shader.toggleDefine(\"BM_DIFFERENCE\", blendName == \"difference\");\n    shader.toggleDefine(\"BM_NEGATION\", blendName == \"negation\");\n    shader.toggleDefine(\"BM_EXCLUSION\", blendName == \"exclusion\");\n    shader.toggleDefine(\"BM_LIGHTEN\", blendName == \"lighten\");\n    shader.toggleDefine(\"BM_DARKEN\", blendName == \"darken\");\n    shader.toggleDefine(\"BM_OVERLAY\", blendName == \"overlay\");\n    shader.toggleDefine(\"BM_SCREEN\", blendName == \"screen\");\n    shader.toggleDefine(\"BM_SOFTLIGHT\", blendName == \"softlight\");\n    shader.toggleDefine(\"BM_HARDLIGHT\", blendName == \"hardlight\");\n    shader.toggleDefine(\"BM_COLORDODGE\", blendName == \"color dodge\");\n    shader.toggleDefine(\"BM_COLORBURN\", blendName == \"color burn\");\n\n    shader.toggleDefine(\"BM_MATH_ADD\", blendName == \"Math Add\");\n    shader.toggleDefine(\"BM_MATH_SUB\", blendName == \"Math Subtract\");\n    shader.toggleDefine(\"BM_MATH_MUL\", blendName == \"Math Multiply\");\n    shader.toggleDefine(\"BM_MATH_DIV\", blendName == \"Math Divide\");\n\n    shader.toggleDefine(\"BM_MATH\", blendName.indexOf(\"Math \") == 0);\n\n\n    shader.toggleDefine(\"BM_ALPHAMASKED\", maskAlpha);\n};\n\nTextureEffect.AddBlendSelect = function (op, name, defaultMode)\n{\n    const p = op.inValueSelect(name || \"Blend Mode\", [\n        \"normal\", \"lighten\", \"darken\", \"multiply\", \"multiply invert\", \"average\", \"add\", \"subtract\", \"difference\", \"negation\", \"exclusion\", \"overlay\", \"screen\", \"color dodge\", \"color burn\", \"softlight\", \"hardlight\", \"subtract one\",\n        \"Math Add\",\n        \"Math Subtract\",\n        \"Math Multiply\",\n        \"Math Divide\",\n\n    ], defaultMode || \"normal\");\n    return p;\n};\n\nTextureEffect.AddBlendAlphaMask = function (op, name, defaultMode)\n{\n    const p = op.inSwitch(name || \"Alpha Mask\", [\"Off\", \"On\"], defaultMode || \"Off\");\n    return p;\n};\n\nTextureEffect.setupBlending = function (op, shader, blendPort, amountPort, alphaMaskPort)\n{\n    const onChange = () =>\n    {\n        let maskAlpha = false;\n        if (alphaMaskPort) maskAlpha = alphaMaskPort.get() == \"On\";\n        TextureEffect.onChangeBlendSelect(shader, blendPort.get(), maskAlpha);\n\n        let str = blendPort.get();\n        if (str == \"normal\") str = null;\n        else if (str == \"multiply\") str = \"mul\";\n        else if (str == \"multiply invert\") str = \"mulinv\";\n        else if (str == \"lighten\") str = \"light\";\n        else if (str == \"darken\") str = \"darken\";\n        else if (str == \"average\") str = \"avg\";\n        else if (str == \"subtract one\") str = \"sub one\";\n        else if (str == \"subtract\") str = \"sub\";\n        else if (str == \"difference\") str = \"diff\";\n        else if (str == \"negation\") str = \"neg\";\n        else if (str == \"exclusion\") str = \"exc\";\n        else if (str == \"overlay\") str = \"ovl\";\n        else if (str == \"color dodge\") str = \"dodge\";\n        else if (str == \"color burn\") str = \"burn\";\n        else if (str == \"softlight\") str = \"soft\";\n        else if (str == \"hardlight\") str = \"hard\";\n        else if (str == \"Math Add\") str = \"+\";\n        else if (str == \"Math Subtract\") str = \"-\";\n        else if (str == \"Math Multiply\") str = \"*\";\n        else if (str == \"Math Divide\") str = \"/\";\n\n        op.setUiAttrib({ \"extendTitle\": str });\n    };\n    op.setPortGroup(\"Blending\", [blendPort, amountPort, alphaMaskPort]);\n\n    let maskAlpha = false;\n\n    blendPort.onChange = onChange;\n    if (alphaMaskPort)\n    {\n        alphaMaskPort.onChange = onChange;\n        maskAlpha = alphaMaskPort.get() == \"On\";\n    }\n\n    TextureEffect.onChangeBlendSelect(shader, blendPort.get(), maskAlpha);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_textureeffect.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_unicolorshader.js":
/*!********************************************!*\
  !*** ./src/core/cgl/cgl_unicolorshader.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UniColorShader\": () => (/* binding */ UniColorShader)\n/* harmony export */ });\n\n\nclass UniColorShader\n{\n    constructor(_cgl)\n    {\n        this.shader = new CGL.Shader(_cgl, \"markermaterial\");\n\n        const frag = \"\"\n            .endl() + \"void main()\"\n            .endl() + \"{\"\n            .endl() + \"    outColor = vec4(color.rgb,1.0);\"\n            .endl() + \"}\";\n\n\n        const vert = \"\"\n            .endl() + \"IN vec3 vPosition;\"\n            .endl() + \"UNI mat4 projMatrix;\"\n            .endl() + \"UNI mat4 mvMatrix;\"\n\n            .endl() + \"void main()\"\n            .endl() + \"{\"\n            .endl() + \"   gl_Position = projMatrix * mvMatrix * vec4(vPosition,1.0);\"\n            .endl() + \"}\";\n\n        this.shader.setSource(vert, frag);\n        this.coloruni = this.shader.addUniformFrag(\"4f\", \"color\", [1, 0.777, 1, 1]);\n    }\n\n    setColor(r, g, b, a)\n    {\n        this.coloruni.set(r, g, b, a);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ2wvY2dsX3VuaWNvbG9yc2hhZGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NnbC9jZ2xfdW5pY29sb3JzaGFkZXIuanM/NDY3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBVbmlDb2xvclNoYWRlciB9O1xuXG5jbGFzcyBVbmlDb2xvclNoYWRlclxue1xuICAgIGNvbnN0cnVjdG9yKF9jZ2wpXG4gICAge1xuICAgICAgICB0aGlzLnNoYWRlciA9IG5ldyBDR0wuU2hhZGVyKF9jZ2wsIFwibWFya2VybWF0ZXJpYWxcIik7XG5cbiAgICAgICAgY29uc3QgZnJhZyA9IFwiXCJcbiAgICAgICAgICAgIC5lbmRsKCkgKyBcInZvaWQgbWFpbigpXCJcbiAgICAgICAgICAgIC5lbmRsKCkgKyBcIntcIlxuICAgICAgICAgICAgLmVuZGwoKSArIFwiICAgIG91dENvbG9yID0gdmVjNChjb2xvci5yZ2IsMS4wKTtcIlxuICAgICAgICAgICAgLmVuZGwoKSArIFwifVwiO1xuXG5cbiAgICAgICAgY29uc3QgdmVydCA9IFwiXCJcbiAgICAgICAgICAgIC5lbmRsKCkgKyBcIklOIHZlYzMgdlBvc2l0aW9uO1wiXG4gICAgICAgICAgICAuZW5kbCgpICsgXCJVTkkgbWF0NCBwcm9qTWF0cml4O1wiXG4gICAgICAgICAgICAuZW5kbCgpICsgXCJVTkkgbWF0NCBtdk1hdHJpeDtcIlxuXG4gICAgICAgICAgICAuZW5kbCgpICsgXCJ2b2lkIG1haW4oKVwiXG4gICAgICAgICAgICAuZW5kbCgpICsgXCJ7XCJcbiAgICAgICAgICAgIC5lbmRsKCkgKyBcIiAgIGdsX1Bvc2l0aW9uID0gcHJvak1hdHJpeCAqIG12TWF0cml4ICogdmVjNCh2UG9zaXRpb24sMS4wKTtcIlxuICAgICAgICAgICAgLmVuZGwoKSArIFwifVwiO1xuXG4gICAgICAgIHRoaXMuc2hhZGVyLnNldFNvdXJjZSh2ZXJ0LCBmcmFnKTtcbiAgICAgICAgdGhpcy5jb2xvcnVuaSA9IHRoaXMuc2hhZGVyLmFkZFVuaWZvcm1GcmFnKFwiNGZcIiwgXCJjb2xvclwiLCBbMSwgMC43NzcsIDEsIDFdKTtcbiAgICB9XG5cbiAgICBzZXRDb2xvcihyLCBnLCBiLCBhKVxuICAgIHtcbiAgICAgICAgdGhpcy5jb2xvcnVuaS5zZXQociwgZywgYiwgYSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_unicolorshader.js\n");

/***/ }),

/***/ "./src/core/cgl/cgl_utils.js":
/*!***********************************!*\
  !*** ./src/core/cgl/cgl_utils.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEG2RAD\": () => (/* binding */ DEG2RAD),\n/* harmony export */   \"RAD2DEG\": () => (/* binding */ RAD2DEG),\n/* harmony export */   \"escapeHTML\": () => (/* binding */ escapeHTML),\n/* harmony export */   \"getWheelDelta\": () => (/* binding */ getWheelDelta),\n/* harmony export */   \"getWheelSpeed\": () => (/* binding */ getWheelSpeed),\n/* harmony export */   \"isWindows\": () => (/* binding */ isWindows),\n/* harmony export */   \"onLoadingAssetsFinished\": () => (/* binding */ onLoadingAssetsFinished)\n/* harmony export */ });\n/** @namespace CGL */\n\n/**\n * multiply to get radians from degree, e.g. `360 * CGL.DEG2RAD`\n * @const {Number}\n * @memberof CGL\n * @static\n */\nconst DEG2RAD = Math.PI / 180.0;\n\n/**\n * to get degrees from radians, e.g. `3.14 * CGL.RAD2DEG`\n * @const {number}\n * @memberof CGL\n */\nconst RAD2DEG = 180.0 / Math.PI;\n\nconst onLoadingAssetsFinished = null; // deprecated / remove later\n\n/**\n * get normalized mouse wheel delta (including browser specific adjustment)\n * @function getWheelDelta\n * @static\n * @memberof CGL\n * @param {MouseEvent} event\n * @return {Number} normalized delta\n */\nconst isWindows = window.navigator.userAgent.indexOf(\"Windows\") != -1;\nconst getWheelDelta_ = function (event)\n{\n    let normalized;\n    if (event.wheelDelta)\n    {\n        // chrome\n        normalized = (event.wheelDelta % 120) - 0 == -0 ? event.wheelDelta / 120 : event.wheelDelta / 30;\n        normalized *= -1.5;\n        if (isWindows) normalized *= 2;\n    }\n    else\n    {\n        // firefox\n        let d = event.deltaY;\n        if (event.shiftKey) d = event.deltaX;\n        const rawAmmount = d || event.detail;\n        normalized = -(rawAmmount % 3 ? rawAmmount * 10 : rawAmmount / 3);\n        normalized *= -3;\n    }\n\n    if (normalized > 20) normalized = 20;\n    if (normalized < -20) normalized = -20;\n\n    return normalized;\n};\n\nconst getWheelSpeed = getWheelDelta_;\nconst getWheelDelta = getWheelDelta_;\n\n// from https://github.com/lodash/lodash/blob/master/escape.js\n\nconst htmlEscapes = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    \"\\\"\": \"&quot;\",\n    \"'\": \"&#39;\",\n};\n\n/** Used to match HTML entities and HTML characters. */\nconst reUnescapedHtml = /[&<>\"']/g;\nconst reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n/*  eslint-disable */\nconst escapeHTML = function(string)\n{\n    return string && reHasUnescapedHtml.test(string) ?\n        string.replace(reUnescapedHtml, function(chr) { return htmlEscapes[chr]; })\n        : string || \"\";\n}\n/* eslint-enable */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ2wvY2dsX3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NnbC9jZ2xfdXRpbHMuanM/YzkyYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQG5hbWVzcGFjZSBDR0wgKi9cblxuLyoqXG4gKiBtdWx0aXBseSB0byBnZXQgcmFkaWFucyBmcm9tIGRlZ3JlZSwgZS5nLiBgMzYwICogQ0dMLkRFRzJSQURgXG4gKiBAY29uc3Qge051bWJlcn1cbiAqIEBtZW1iZXJvZiBDR0xcbiAqIEBzdGF0aWNcbiAqL1xuZXhwb3J0IGNvbnN0IERFRzJSQUQgPSBNYXRoLlBJIC8gMTgwLjA7XG5cbi8qKlxuICogdG8gZ2V0IGRlZ3JlZXMgZnJvbSByYWRpYW5zLCBlLmcuIGAzLjE0ICogQ0dMLlJBRDJERUdgXG4gKiBAY29uc3Qge251bWJlcn1cbiAqIEBtZW1iZXJvZiBDR0xcbiAqL1xuZXhwb3J0IGNvbnN0IFJBRDJERUcgPSAxODAuMCAvIE1hdGguUEk7XG5cbmV4cG9ydCBjb25zdCBvbkxvYWRpbmdBc3NldHNGaW5pc2hlZCA9IG51bGw7IC8vIGRlcHJlY2F0ZWQgLyByZW1vdmUgbGF0ZXJcblxuLyoqXG4gKiBnZXQgbm9ybWFsaXplZCBtb3VzZSB3aGVlbCBkZWx0YSAoaW5jbHVkaW5nIGJyb3dzZXIgc3BlY2lmaWMgYWRqdXN0bWVudClcbiAqIEBmdW5jdGlvbiBnZXRXaGVlbERlbHRhXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyb2YgQ0dMXG4gKiBAcGFyYW0ge01vdXNlRXZlbnR9IGV2ZW50XG4gKiBAcmV0dXJuIHtOdW1iZXJ9IG5vcm1hbGl6ZWQgZGVsdGFcbiAqL1xuZXhwb3J0IGNvbnN0IGlzV2luZG93cyA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoXCJXaW5kb3dzXCIpICE9IC0xO1xuY29uc3QgZ2V0V2hlZWxEZWx0YV8gPSBmdW5jdGlvbiAoZXZlbnQpXG57XG4gICAgbGV0IG5vcm1hbGl6ZWQ7XG4gICAgaWYgKGV2ZW50LndoZWVsRGVsdGEpXG4gICAge1xuICAgICAgICAvLyBjaHJvbWVcbiAgICAgICAgbm9ybWFsaXplZCA9IChldmVudC53aGVlbERlbHRhICUgMTIwKSAtIDAgPT0gLTAgPyBldmVudC53aGVlbERlbHRhIC8gMTIwIDogZXZlbnQud2hlZWxEZWx0YSAvIDMwO1xuICAgICAgICBub3JtYWxpemVkICo9IC0xLjU7XG4gICAgICAgIGlmIChpc1dpbmRvd3MpIG5vcm1hbGl6ZWQgKj0gMjtcbiAgICB9XG4gICAgZWxzZVxuICAgIHtcbiAgICAgICAgLy8gZmlyZWZveFxuICAgICAgICBsZXQgZCA9IGV2ZW50LmRlbHRhWTtcbiAgICAgICAgaWYgKGV2ZW50LnNoaWZ0S2V5KSBkID0gZXZlbnQuZGVsdGFYO1xuICAgICAgICBjb25zdCByYXdBbW1vdW50ID0gZCB8fCBldmVudC5kZXRhaWw7XG4gICAgICAgIG5vcm1hbGl6ZWQgPSAtKHJhd0FtbW91bnQgJSAzID8gcmF3QW1tb3VudCAqIDEwIDogcmF3QW1tb3VudCAvIDMpO1xuICAgICAgICBub3JtYWxpemVkICo9IC0zO1xuICAgIH1cblxuICAgIGlmIChub3JtYWxpemVkID4gMjApIG5vcm1hbGl6ZWQgPSAyMDtcbiAgICBpZiAobm9ybWFsaXplZCA8IC0yMCkgbm9ybWFsaXplZCA9IC0yMDtcblxuICAgIHJldHVybiBub3JtYWxpemVkO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFdoZWVsU3BlZWQgPSBnZXRXaGVlbERlbHRhXztcbmV4cG9ydCBjb25zdCBnZXRXaGVlbERlbHRhID0gZ2V0V2hlZWxEZWx0YV87XG5cbi8vIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2xvZGFzaC9sb2Rhc2gvYmxvYi9tYXN0ZXIvZXNjYXBlLmpzXG5cbmNvbnN0IGh0bWxFc2NhcGVzID0ge1xuICAgIFwiJlwiOiBcIiZhbXA7XCIsXG4gICAgXCI8XCI6IFwiJmx0O1wiLFxuICAgIFwiPlwiOiBcIiZndDtcIixcbiAgICBcIlxcXCJcIjogXCImcXVvdDtcIixcbiAgICBcIidcIjogXCImIzM5O1wiLFxufTtcblxuLyoqIFVzZWQgdG8gbWF0Y2ggSFRNTCBlbnRpdGllcyBhbmQgSFRNTCBjaGFyYWN0ZXJzLiAqL1xuY29uc3QgcmVVbmVzY2FwZWRIdG1sID0gL1smPD5cIiddL2c7XG5jb25zdCByZUhhc1VuZXNjYXBlZEh0bWwgPSBSZWdFeHAocmVVbmVzY2FwZWRIdG1sLnNvdXJjZSk7XG5cbi8qICBlc2xpbnQtZGlzYWJsZSAqL1xuZXhwb3J0IGNvbnN0IGVzY2FwZUhUTUwgPSBmdW5jdGlvbihzdHJpbmcpXG57XG4gICAgcmV0dXJuIHN0cmluZyAmJiByZUhhc1VuZXNjYXBlZEh0bWwudGVzdChzdHJpbmcpID9cbiAgICAgICAgc3RyaW5nLnJlcGxhY2UocmVVbmVzY2FwZWRIdG1sLCBmdW5jdGlvbihjaHIpIHsgcmV0dXJuIGh0bWxFc2NhcGVzW2Nocl07IH0pXG4gICAgICAgIDogc3RyaW5nIHx8IFwiXCI7XG59XG4vKiBlc2xpbnQtZW5hYmxlICovXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/cgl/cgl_utils.js\n");

/***/ }),

/***/ "./src/core/cgl/constants.js":
/*!***********************************!*\
  !*** ./src/core/cgl/constants.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONSTANTS\": () => (/* binding */ CONSTANTS)\n/* harmony export */ });\nconst SHADER = {\n    // default attributes\n    \"SHADERVAR_VERTEX_POSITION\": \"vPosition\",\n    \"SHADERVAR_VERTEX_NUMBER\": \"attrVertIndex\",\n    \"SHADERVAR_VERTEX_NORMAL\": \"attrVertNormal\",\n    \"SHADERVAR_VERTEX_TEXCOORD\": \"attrTexCoord\",\n    \"SHADERVAR_INSTANCE_MMATRIX\": \"instMat\",\n    \"SHADERVAR_VERTEX_COLOR\": \"attrVertColor\",\n\n    \"SHADERVAR_INSTANCE_INDEX\": \"instanceIndex\",\n\n    // default uniforms\n    \"SHADERVAR_UNI_PROJMAT\": \"projMatrix\",\n    \"SHADERVAR_UNI_VIEWMAT\": \"viewMatrix\",\n    \"SHADERVAR_UNI_MODELMAT\": \"modelMatrix\",\n    \"SHADERVAR_UNI_NORMALMAT\": \"normalMatrix\",\n    \"SHADERVAR_UNI_INVVIEWMAT\": \"inverseViewMatrix\",\n    \"SHADERVAR_UNI_INVPROJMAT\": \"invProjMatrix\",\n    \"SHADERVAR_UNI_MATERIALID\": \"materialId\",\n    \"SHADERVAR_UNI_OBJECTID\": \"objectId\",\n\n    \"SHADERVAR_UNI_VIEWPOS\": \"camPos\",\n};\n\n\nconst BLEND_MODES = {\n    \"BLEND_NONE\": 0,\n    \"BLEND_NORMAL\": 1,\n    \"BLEND_ADD\": 2,\n    \"BLEND_SUB\": 3,\n    \"BLEND_MUL\": 4,\n};\n\n\n\n\n\nconst RAD2DEG = 180.0 / Math.PI;\nconst DEG2RAD = Math.PI / 180.0;\n\nconst CONSTANTS = {\n    \"MATH\": {\n        \"DEG2RAD\": DEG2RAD,\n        \"RAD2DEG\": RAD2DEG,\n    },\n    \"SHADER\": SHADER,\n    \"BLEND_MODES\": BLEND_MODES,\n};\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ2wvY29uc3RhbnRzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DQUJMRVMvLi9zcmMvY29yZS9jZ2wvY29uc3RhbnRzLmpzPzhkNWIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU0hBREVSID0ge1xuICAgIC8vIGRlZmF1bHQgYXR0cmlidXRlc1xuICAgIFwiU0hBREVSVkFSX1ZFUlRFWF9QT1NJVElPTlwiOiBcInZQb3NpdGlvblwiLFxuICAgIFwiU0hBREVSVkFSX1ZFUlRFWF9OVU1CRVJcIjogXCJhdHRyVmVydEluZGV4XCIsXG4gICAgXCJTSEFERVJWQVJfVkVSVEVYX05PUk1BTFwiOiBcImF0dHJWZXJ0Tm9ybWFsXCIsXG4gICAgXCJTSEFERVJWQVJfVkVSVEVYX1RFWENPT1JEXCI6IFwiYXR0clRleENvb3JkXCIsXG4gICAgXCJTSEFERVJWQVJfSU5TVEFOQ0VfTU1BVFJJWFwiOiBcImluc3RNYXRcIixcbiAgICBcIlNIQURFUlZBUl9WRVJURVhfQ09MT1JcIjogXCJhdHRyVmVydENvbG9yXCIsXG5cbiAgICBcIlNIQURFUlZBUl9JTlNUQU5DRV9JTkRFWFwiOiBcImluc3RhbmNlSW5kZXhcIixcblxuICAgIC8vIGRlZmF1bHQgdW5pZm9ybXNcbiAgICBcIlNIQURFUlZBUl9VTklfUFJPSk1BVFwiOiBcInByb2pNYXRyaXhcIixcbiAgICBcIlNIQURFUlZBUl9VTklfVklFV01BVFwiOiBcInZpZXdNYXRyaXhcIixcbiAgICBcIlNIQURFUlZBUl9VTklfTU9ERUxNQVRcIjogXCJtb2RlbE1hdHJpeFwiLFxuICAgIFwiU0hBREVSVkFSX1VOSV9OT1JNQUxNQVRcIjogXCJub3JtYWxNYXRyaXhcIixcbiAgICBcIlNIQURFUlZBUl9VTklfSU5WVklFV01BVFwiOiBcImludmVyc2VWaWV3TWF0cml4XCIsXG4gICAgXCJTSEFERVJWQVJfVU5JX0lOVlBST0pNQVRcIjogXCJpbnZQcm9qTWF0cml4XCIsXG4gICAgXCJTSEFERVJWQVJfVU5JX01BVEVSSUFMSURcIjogXCJtYXRlcmlhbElkXCIsXG4gICAgXCJTSEFERVJWQVJfVU5JX09CSkVDVElEXCI6IFwib2JqZWN0SWRcIixcblxuICAgIFwiU0hBREVSVkFSX1VOSV9WSUVXUE9TXCI6IFwiY2FtUG9zXCIsXG59O1xuXG5cbmNvbnN0IEJMRU5EX01PREVTID0ge1xuICAgIFwiQkxFTkRfTk9ORVwiOiAwLFxuICAgIFwiQkxFTkRfTk9STUFMXCI6IDEsXG4gICAgXCJCTEVORF9BRERcIjogMixcbiAgICBcIkJMRU5EX1NVQlwiOiAzLFxuICAgIFwiQkxFTkRfTVVMXCI6IDQsXG59O1xuXG5cblxuXG5cbmNvbnN0IFJBRDJERUcgPSAxODAuMCAvIE1hdGguUEk7XG5jb25zdCBERUcyUkFEID0gTWF0aC5QSSAvIDE4MC4wO1xuXG5jb25zdCBDT05TVEFOVFMgPSB7XG4gICAgXCJNQVRIXCI6IHtcbiAgICAgICAgXCJERUcyUkFEXCI6IERFRzJSQUQsXG4gICAgICAgIFwiUkFEMkRFR1wiOiBSQUQyREVHLFxuICAgIH0sXG4gICAgXCJTSEFERVJcIjogU0hBREVSLFxuICAgIFwiQkxFTkRfTU9ERVNcIjogQkxFTkRfTU9ERVMsXG59O1xuXG5cbmV4cG9ydCB7IENPTlNUQU5UUyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/cgl/constants.js\n");

/***/ }),

/***/ "./src/core/cgl/index.js":
/*!*******************************!*\
  !*** ./src/core/cgl/index.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CGL\": () => (/* binding */ CGL)\n/* harmony export */ });\n/* harmony import */ var _cgl_framebuffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cgl_framebuffer */ \"./src/core/cgl/cgl_framebuffer.js\");\n/* harmony import */ var _cgl_framebuffer2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cgl_framebuffer2 */ \"./src/core/cgl/cgl_framebuffer2.js\");\n/* harmony import */ var _cgl_marker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cgl_marker */ \"./src/core/cgl/cgl_marker.js\");\n/* harmony import */ var _cgl_mesh__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cgl_mesh */ \"./src/core/cgl/cgl_mesh.js\");\n/* harmony import */ var _cgl_shader_uniform__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cgl_shader_uniform */ \"./src/core/cgl/cgl_shader_uniform.js\");\n/* harmony import */ var _cgl_shader_lib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cgl_shader_lib */ \"./src/core/cgl/cgl_shader_lib.js\");\n/* harmony import */ var _cgl_unicolorshader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cgl_unicolorshader */ \"./src/core/cgl/cgl_unicolorshader.js\");\n/* harmony import */ var _cgl_shader__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cgl_shader */ \"./src/core/cgl/cgl_shader.js\");\n/* harmony import */ var _cgl_simplerect__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./cgl_simplerect */ \"./src/core/cgl/cgl_simplerect.js\");\n/* harmony import */ var _cgl_state__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./cgl_state */ \"./src/core/cgl/cgl_state.js\");\n/* harmony import */ var _cgl_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./cgl_utils */ \"./src/core/cgl/cgl_utils.js\");\n/* harmony import */ var _cgl_texture__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./cgl_texture */ \"./src/core/cgl/cgl_texture.js\");\n/* harmony import */ var _cgl_textureeffect__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cgl_textureeffect */ \"./src/core/cgl/cgl_textureeffect.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./constants */ \"./src/core/cgl/constants.js\");\n/* harmony import */ var _cgl_profiledata__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./cgl_profiledata */ \"./src/core/cgl/cgl_profiledata.js\");\n/* harmony import */ var _cg_cg_matrixstack__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../cg/cg_matrixstack */ \"./src/core/cg/cg_matrixstack.js\");\n/* harmony import */ var _cg_cg_geom__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../cg/cg_geom */ \"./src/core/cg/cg_geom.js\");\n/* harmony import */ var _cg_cg_boundingbox__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../cg/cg_boundingbox */ \"./src/core/cg/cg_boundingbox.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst CGL = {\n    \"Framebuffer\": _cgl_framebuffer__WEBPACK_IMPORTED_MODULE_0__.Framebuffer,\n    \"Framebuffer2\": _cgl_framebuffer2__WEBPACK_IMPORTED_MODULE_1__.Framebuffer2,\n    \"Geometry\": _cg_cg_geom__WEBPACK_IMPORTED_MODULE_16__.Geometry,\n    \"BoundingBox\": _cg_cg_boundingbox__WEBPACK_IMPORTED_MODULE_17__.BoundingBox,\n    \"Marker\": _cgl_marker__WEBPACK_IMPORTED_MODULE_2__.Marker,\n    \"WirePoint\": _cgl_marker__WEBPACK_IMPORTED_MODULE_2__.WirePoint,\n    \"WireCube\": _cgl_marker__WEBPACK_IMPORTED_MODULE_2__.WireCube,\n    \"MatrixStack\": _cg_cg_matrixstack__WEBPACK_IMPORTED_MODULE_15__.MatrixStack,\n    \"Mesh\": _cgl_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh,\n    \"MESH\": _cgl_mesh__WEBPACK_IMPORTED_MODULE_3__.MESH,\n    \"ShaderLibMods\": _cgl_shader_lib__WEBPACK_IMPORTED_MODULE_5__.ShaderLibMods,\n    \"Shader\": _cgl_shader__WEBPACK_IMPORTED_MODULE_7__.Shader,\n    \"Uniform\": _cgl_shader_uniform__WEBPACK_IMPORTED_MODULE_4__.Uniform,\n    \"MESHES\": _cgl_simplerect__WEBPACK_IMPORTED_MODULE_8__.MESHES,\n    \"Context\": _cgl_state__WEBPACK_IMPORTED_MODULE_9__.Context,\n    \"Texture\": _cgl_texture__WEBPACK_IMPORTED_MODULE_11__.Texture,\n    \"TextureEffect\": _cgl_textureeffect__WEBPACK_IMPORTED_MODULE_12__.TextureEffect,\n    \"isWindows\": _cgl_utils__WEBPACK_IMPORTED_MODULE_10__.isWindows,\n    \"getWheelSpeed\": _cgl_utils__WEBPACK_IMPORTED_MODULE_10__.getWheelSpeed,\n    \"getWheelDelta\": _cgl_utils__WEBPACK_IMPORTED_MODULE_10__.getWheelDelta,\n    \"onLoadingAssetsFinished\": _cgl_utils__WEBPACK_IMPORTED_MODULE_10__.onLoadingAssetsFinished,\n    \"ProfileData\": _cgl_profiledata__WEBPACK_IMPORTED_MODULE_14__.ProfileData,\n    \"UniColorShader\": _cgl_unicolorshader__WEBPACK_IMPORTED_MODULE_6__.UniColorShader,\n    ..._constants__WEBPACK_IMPORTED_MODULE_13__.CONSTANTS.BLEND_MODES,\n    ..._constants__WEBPACK_IMPORTED_MODULE_13__.CONSTANTS.SHADER,\n    ..._constants__WEBPACK_IMPORTED_MODULE_13__.CONSTANTS.MATH,\n    ..._constants__WEBPACK_IMPORTED_MODULE_13__.CONSTANTS.BLEND_MODES,\n};\n\nwindow.CGL = CGL;\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ2wvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NnbC9pbmRleC5qcz82NjE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZyYW1lYnVmZmVyIH0gZnJvbSBcIi4vY2dsX2ZyYW1lYnVmZmVyXCI7XG5pbXBvcnQgeyBGcmFtZWJ1ZmZlcjIgfSBmcm9tIFwiLi9jZ2xfZnJhbWVidWZmZXIyXCI7XG5pbXBvcnQgeyBNYXJrZXIsIFdpcmVDdWJlLCBXaXJlUG9pbnQgfSBmcm9tIFwiLi9jZ2xfbWFya2VyXCI7XG5pbXBvcnQgeyBNZXNoLCBNRVNIIH0gZnJvbSBcIi4vY2dsX21lc2hcIjtcbmltcG9ydCB7IFVuaWZvcm0gfSBmcm9tIFwiLi9jZ2xfc2hhZGVyX3VuaWZvcm1cIjtcbmltcG9ydCB7IFNoYWRlckxpYk1vZHMgfSBmcm9tIFwiLi9jZ2xfc2hhZGVyX2xpYlwiO1xuaW1wb3J0IHsgVW5pQ29sb3JTaGFkZXIgfSBmcm9tIFwiLi9jZ2xfdW5pY29sb3JzaGFkZXJcIjtcblxuXG5pbXBvcnQgeyBTaGFkZXIgfSBmcm9tIFwiLi9jZ2xfc2hhZGVyXCI7XG5pbXBvcnQgeyBNRVNIRVMgfSBmcm9tIFwiLi9jZ2xfc2ltcGxlcmVjdFwiO1xuaW1wb3J0IHsgQ29udGV4dCB9IGZyb20gXCIuL2NnbF9zdGF0ZVwiO1xuaW1wb3J0IHtcbiAgICBpc1dpbmRvd3MsIGdldFdoZWVsU3BlZWQsIGdldFdoZWVsRGVsdGEsIG9uTG9hZGluZ0Fzc2V0c0ZpbmlzaGVkLFxufSBmcm9tIFwiLi9jZ2xfdXRpbHNcIjtcbmltcG9ydCB7XG4gICAgVGV4dHVyZSxcbn0gZnJvbSBcIi4vY2dsX3RleHR1cmVcIjtcblxuaW1wb3J0IHsgVGV4dHVyZUVmZmVjdCB9IGZyb20gXCIuL2NnbF90ZXh0dXJlZWZmZWN0XCI7XG5pbXBvcnQgeyBDT05TVEFOVFMgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmltcG9ydCB7IFByb2ZpbGVEYXRhIH0gZnJvbSBcIi4vY2dsX3Byb2ZpbGVkYXRhXCI7XG5pbXBvcnQgeyBNYXRyaXhTdGFjayB9IGZyb20gXCIuLi9jZy9jZ19tYXRyaXhzdGFja1wiO1xuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vY2cvY2dfZ2VvbVwiO1xuaW1wb3J0IHsgQm91bmRpbmdCb3ggfSBmcm9tIFwiLi4vY2cvY2dfYm91bmRpbmdib3hcIjtcblxuY29uc3QgQ0dMID0ge1xuICAgIFwiRnJhbWVidWZmZXJcIjogRnJhbWVidWZmZXIsXG4gICAgXCJGcmFtZWJ1ZmZlcjJcIjogRnJhbWVidWZmZXIyLFxuICAgIFwiR2VvbWV0cnlcIjogR2VvbWV0cnksXG4gICAgXCJCb3VuZGluZ0JveFwiOiBCb3VuZGluZ0JveCxcbiAgICBcIk1hcmtlclwiOiBNYXJrZXIsXG4gICAgXCJXaXJlUG9pbnRcIjogV2lyZVBvaW50LFxuICAgIFwiV2lyZUN1YmVcIjogV2lyZUN1YmUsXG4gICAgXCJNYXRyaXhTdGFja1wiOiBNYXRyaXhTdGFjayxcbiAgICBcIk1lc2hcIjogTWVzaCxcbiAgICBcIk1FU0hcIjogTUVTSCxcbiAgICBcIlNoYWRlckxpYk1vZHNcIjogU2hhZGVyTGliTW9kcyxcbiAgICBcIlNoYWRlclwiOiBTaGFkZXIsXG4gICAgXCJVbmlmb3JtXCI6IFVuaWZvcm0sXG4gICAgXCJNRVNIRVNcIjogTUVTSEVTLFxuICAgIFwiQ29udGV4dFwiOiBDb250ZXh0LFxuICAgIFwiVGV4dHVyZVwiOiBUZXh0dXJlLFxuICAgIFwiVGV4dHVyZUVmZmVjdFwiOiBUZXh0dXJlRWZmZWN0LFxuICAgIFwiaXNXaW5kb3dzXCI6IGlzV2luZG93cyxcbiAgICBcImdldFdoZWVsU3BlZWRcIjogZ2V0V2hlZWxTcGVlZCxcbiAgICBcImdldFdoZWVsRGVsdGFcIjogZ2V0V2hlZWxEZWx0YSxcbiAgICBcIm9uTG9hZGluZ0Fzc2V0c0ZpbmlzaGVkXCI6IG9uTG9hZGluZ0Fzc2V0c0ZpbmlzaGVkLFxuICAgIFwiUHJvZmlsZURhdGFcIjogUHJvZmlsZURhdGEsXG4gICAgXCJVbmlDb2xvclNoYWRlclwiOiBVbmlDb2xvclNoYWRlcixcbiAgICAuLi5DT05TVEFOVFMuQkxFTkRfTU9ERVMsXG4gICAgLi4uQ09OU1RBTlRTLlNIQURFUixcbiAgICAuLi5DT05TVEFOVFMuTUFUSCxcbiAgICAuLi5DT05TVEFOVFMuQkxFTkRfTU9ERVMsXG59O1xuXG53aW5kb3cuQ0dMID0gQ0dMO1xuXG5leHBvcnQgeyBDR0wgfTtcblxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/cgl/index.js\n");

/***/ }),

/***/ "./src/core/cgp/cgp_mesh.js":
/*!**********************************!*\
  !*** ./src/core/cgp/cgp_mesh.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Mesh)\n/* harmony export */ });\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core_logger */ \"./src/core/core_logger.js\");\n/* harmony import */ var _cgp_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cgp_pipeline */ \"./src/core/cgp/cgp_pipeline.js\");\n\n\n\nclass Mesh\n{\n    constructor(_cgp, __geom)\n    {\n        this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"cgl_mesh\");\n        this._cgp = _cgp;\n        this._geom = null;\n        this.numIndex = 0;\n\n        this._pipe = new _cgp_pipeline__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this._cgp);\n\n        this._numNonIndexed = 0;\n        this._positionBuffer = null;\n        this._bufVerticesIndizes = null;\n        this._attributes = [];\n\n        this._needsPipelineUpdate = false;\n\n        if (__geom) this.setGeom(__geom);\n    }\n\n    _createBuffer(device, data, usage)\n    {\n        const buffer = device.createBuffer({\n            \"size\": data.byteLength,\n            \"usage\": usage,\n            \"mappedAtCreation\": true,\n        });\n        const dst = new data.constructor(buffer.getMappedRange());\n        dst.set(data);\n        buffer.unmap();\n        return buffer;\n    }\n\n    /**\n     * @function setGeom\n     * @memberof Mesh\n     * @instance\n     * @description set geometry for mesh\n     * @param {Geometry} geometry\n     */\n    setGeom(geom, removeRef)\n    {\n        this._needsPipelineUpdate = true;\n        this._geom = geom;\n        this._disposeAttributes();\n\n        this._positionBuffer = this._createBuffer(this._cgp.device, new Float32Array(geom.vertices), GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST);\n\n        let vi = geom.verticesIndices;\n        if (!geom.isIndexed()) vi = Array.from(Array(geom.vertices.length / 3).keys());\n        this._numIndices = vi.length;\n        this._indicesBuffer = this._createBuffer(this._cgp.device, new Uint32Array(vi), GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST);\n\n        if (geom.texCoords && geom.texCoords.length) this.setAttribute(\"texCoords\", geom.texCoords, 2);\n        if (geom.vertexNormals && geom.vertexNormals.length) this.setAttribute(\"normals\", geom.vertexNormals, 3);\n    }\n\n\n    _disposeAttributes()\n    {\n        this._needsPipelineUpdate = true;\n        for (let i = 0; i < this._attributes.length; i++)\n        {\n            this._attributes[i].buffer.destroy();\n        }\n        this._attributes.length = 0;\n    }\n\n    dispose()\n    {\n        this._disposeAttributes();\n    }\n\n    /**\n     * @function setAttribute\n     * @description update attribute\n     * @memberof Mesh\n     * @instance\n     * @param {String} attribute name\n     * @param {Array} data\n     * @param {Number} itemSize\n     * @param {Object} options\n     */\n    setAttribute(name, array, itemSize, options)\n    {\n        if (!array)\n        {\n            this._log.error(\"mesh addAttribute - no array given! \" + name);\n            throw new Error();\n        }\n\n        for (let i = 0; i < this._attributes.length; i++)\n        {\n            const attr = this._attributes[i];\n            if (attr.name == name)\n            {\n                // if (attr.numItems === numItems)\n                // {\n                // }\n                // else\n                // {\n                //     // this._log.log(\"wrong buffer size\", this._geom.name, attr.name, attr.numItems, numItems);\n                //     this._resizeAttr(array, attr);\n                // }\n                // normalBuffer = this._createBuffer(this._cgp.device, new Float32Array(geom.vertexNormals), GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST);\n\n                // this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, attr.buffer);\n                // this._bufferArray(array, attr);\n\n                return attr;\n            }\n        }\n\n        const buffer = this._createBuffer(this._cgp.device, new Float32Array(array), GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST);\n\n        const attr = {\n            \"buffer\": buffer,\n            \"name\": name,\n            // \"cb\": cb,\n            // \"itemSize\": itemSize,\n            // \"numItems\": numItems,\n            // \"startItem\": 0,\n            // \"instanced\": instanced,\n            // \"type\": type\n        };\n        this._attributes.push(attr);\n\n        return attr;\n    }\n\n    // setPipeline()\n    // {\n\n    //     this._cgp.passEncoder.setPipeline(this._pipe.getPiplelineObject(this._cgp.getShader(),this));\n\n\n    // }\n\n    render()\n    {\n        if (!this._positionBuffer) return;\n\n        // this.setPipeline();\n\n        const shader = this._cgp.getShader();\n        if (shader)shader.bind();\n\n        if (!this._cgp.getShader() || !this._cgp.getShader().isValid)\n        {\n            // console.log(\"invalid\");\n            return;\n        }\n\n        this._pipe.setPipeline(this._cgp.getShader(), this);\n\n        if (!this._pipe.isValid)\n        {\n            // console.log(\"invalid\");\n            return;\n        }\n\n\n        this._cgp.passEncoder.setVertexBuffer(0, this._positionBuffer);\n        for (let i = 0; i < this._attributes.length; i++)\n        {\n            this._cgp.passEncoder.setVertexBuffer(i + 1, this._attributes[i].buffer);\n        }\n\n        this._cgp.passEncoder.setIndexBuffer(this._indicesBuffer, \"uint32\");\n\n        if (this._numNonIndexed)\n            this._cgp.passEncoder.draw(this._numIndices);\n        else\n            this._cgp.passEncoder.drawIndexed(this._numIndices);\n\n        // if (shader)shader.unbind();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cgp/cgp_mesh.js\n");

/***/ }),

/***/ "./src/core/cgp/cgp_pipeline.js":
/*!**************************************!*\
  !*** ./src/core/cgp/cgp_pipeline.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Pipeline)\n/* harmony export */ });\n/* harmony import */ var _cgl_cgl_shader_uniform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cgl/cgl_shader_uniform */ \"./src/core/cgl/cgl_shader_uniform.js\");\n/* harmony import */ var _cgp_uniformbuffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cgp_uniformbuffer */ \"./src/core/cgp/cgp_uniformbuffer.js\");\n\n\n\nclass Pipeline\n{\n    constructor(_cgp, _name)\n    {\n        if (!_cgp) throw new Error(\"Pipeline constructed without cgp \" + _name);\n        this._cgp = _cgp;\n        this._isValid = true;\n\n        this._pipeCfg = null;\n        this._renderPipeline = null;\n\n        this._fsUniformBuffer = null;\n        this._vsUniformBuffer = null;\n\n        this._old = {};\n\n\n        this.DEPTH_COMPARE_FUNCS_STRINGS = [\n            \"never\",\n            \"less\",\n            \"equal\",\n            \"lessequal\",\n            \"greater\",\n            \"notequal\",\n            \"greaterequal\",\n            \"always\"];\n    }\n\n    get isValid() { return this._isValid; }\n\n    setPipeline(shader, mesh)\n    {\n        if (!mesh || !shader)\n        {\n            console.log(\"pipeline unknown shader/mesh\");\n            return;\n        }\n\n        let needsRebuild =\n            !this._renderPipeline ||\n            !this._pipeCfg ||\n            this._old.mesh != mesh ||\n            this._old.shader != shader ||\n            mesh.needsPipelineUpdate ||\n            shader.needsPipelineUpdate;\n\n        if (this._pipeCfg)\n        {\n            if (this._pipeCfg.depthStencil.depthWriteEnabled != this._cgp.stateDepthWrite())\n            {\n                needsRebuild = true;\n                this._pipeCfg.depthStencil.depthWriteEnabled = this._cgp.stateDepthWrite();\n            }\n\n            if (this._cgp.stateDepthTest() === false)\n            {\n                if (this._pipeCfg.depthStencil.depthCompare != \"never\")\n                {\n                    this._pipeCfg.depthStencil.depthCompare = \"never\";\n                    needsRebuild = true;\n                }\n            }\n            else\n            if (this._pipeCfg.depthStencil.depthCompare != this._cgp.stateDepthFunc())\n            {\n                needsRebuild = true;\n                this._pipeCfg.depthStencil.depthCompare = this._cgp.stateDepthFunc();\n            }\n\n\n            if (this._cgp.stateCullFace() === false)\n            {\n                if (this._pipeCfg.primitive.cullMode != \"none\")\n                {\n                    needsRebuild = true;\n                    this._pipeCfg.primitive.cullMode = \"none\";\n                }\n            }\n            else\n            {\n                needsRebuild = true;\n                this._pipeCfg.primitive.cullMode = this._cgp.stateCullFaceFacing();\n            }\n        }\n\n        if (needsRebuild)\n        {\n            if (!this._pipeCfg || this._old.shader != shader) this._pipeCfg = this.getPiplelineObject(shader, mesh);\n\n            this._old.shader = shader;\n            this._old.mesh = mesh;\n\n\n            // try\n            // {\n            this._renderPipeline = this._cgp.device.createRenderPipeline(this._pipeCfg);\n            // }\n            // catch (e)\n            // {\n            //     console.error(e.message);\n            // }\n\n            this._bindUniforms(shader);\n        }\n\n        if (this._renderPipeline && this._isValid)\n        {\n            mat4.copy(this._matModel, this._cgp.mMatrix);\n            mat4.copy(this._matView, this._cgp.vMatrix);\n            mat4.copy(this._matProj, this._cgp.pMatrix);\n\n            this._cgp.device.queue.writeBuffer(\n                this._vsUniformBuffer,\n                0,\n                this._vsUniformValues.buffer,\n                this._vsUniformValues.byteOffset,\n                this._vsUniformValues.byteLength\n            );\n\n            this._uniBufFrag.updateUniformValues();\n\n            this._cgp.passEncoder.setPipeline(this._renderPipeline);\n            this._cgp.passEncoder.setBindGroup(0, this._bindGroup);\n            // this._pipeline = this._cgp.device.createRenderPipeline(this._pipeCfg);\n        }\n    }\n\n    getPiplelineObject(shader, mesh)\n    {\n        const pipeCfg = {\n            \"layout\": \"auto\",\n            \"vertex\": {\n                \"module\": shader.shaderModule,\n                \"entryPoint\": \"myVSMain\",\n                \"buffers\": [\n                    // position\n                    {\n                        \"arrayStride\": 3 * 4, // 3 floats, 4 bytes each\n                        \"attributes\": [\n                            { \"shaderLocation\": 0, \"offset\": 0, \"format\": \"float32x3\" },\n                        ],\n                    },\n                    // normals\n                    {\n                        \"arrayStride\": 3 * 4, // 3 floats, 4 bytes each\n                        \"attributes\": [\n                            { \"shaderLocation\": 1, \"offset\": 0, \"format\": \"float32x3\" },\n                        ],\n                    },\n                    // texcoords\n                    {\n                        \"arrayStride\": 2 * 4, // 2 floats, 4 bytes each\n                        \"attributes\": [\n                            { \"shaderLocation\": 2, \"offset\": 0, \"format\": \"float32x2\", },\n                        ],\n                    },\n                ],\n            },\n            \"fragment\": {\n                \"module\": shader.shaderModule,\n                \"entryPoint\": \"myFSMain\",\n                \"targets\": [\n                    { \"format\": this._cgp.presentationFormat },\n                ],\n            },\n            \"primitive\": {\n                \"topology\": \"triangle-list\",\n                \"cullMode\": \"back\", // back/none/front\n\n                // \"point-list\",\n                // \"line-list\",\n                // \"line-strip\",\n                // \"triangle-list\",\n                // \"triangle-strip\"\n            },\n            \"depthStencil\": {\n                \"depthWriteEnabled\": true,\n                \"depthCompare\": \"less\",\n                \"format\": \"depth24plus\",\n            },\n\n        };\n\n        return pipeCfg;\n    }\n\n\n    _bindUniforms(shader)\n    {\n        this._cgp.pushErrorScope();\n\n\n        const counts = { };\n\n        this._uniBufFrag = new _cgp_uniformbuffer__WEBPACK_IMPORTED_MODULE_1__[\"default\"](shader, \"frag\");\n\n        // for (let i = 0; i < shader.uniforms.length; i++)\n        // {\n        //     const uni = shader.uniforms[i];\n        //     const type = uni.shaderType;\n        //     counts[type] = counts[type] || 0;\n\n\n        //     counts[type] += uni.getSizeBytes();\n        // }\n        // console.log(counts, counts.frag);\n\n\n        const vUniformBufferSize = 3 * 16 * 4; // 2 mat4s * 16 floats per mat * 4 bytes per float\n        // const fUniformBufferSize = counts.frag;// 2 * 3 * 4; // 1 vec3 * 3 floats per vec3 * 4 bytes per float\n\n        this._vsUniformBuffer = this._cgp.device.createBuffer({\n            \"size\": vUniformBufferSize,\n            \"usage\": GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n\n        // this._fsUniformBuffer = this._cgp.device.createBuffer({\n        //     \"size\": fUniformBufferSize,\n        //     \"usage\": GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        // });\n\n        // this._fsUniformValues = new Float32Array(counts.frag / 4);\n\n        this._vsUniformValues = new Float32Array(vUniformBufferSize / 4);\n\n        this._matModel = this._vsUniformValues.subarray(0, 16);\n        this._matView = this._vsUniformValues.subarray(16, 32);\n        this._matProj = this._vsUniformValues.subarray(32, 48);\n\n\n        // this._fsUniformValues[1] = 1.0;\n        // this._fsUniformValues[0] = 1.0;\n        // const lightDirection = this._fsUniformValues.subarray(0, 3);\n\n        // console.log(\"pipeline bindgrouplayout \", pipeline.getBindGroupLayout(0));\n\n        this._bindGroup = this._cgp.device.createBindGroup(\n            {\n                \"layout\": this._renderPipeline.getBindGroupLayout(0),\n                \"entries\": [\n                    { \"binding\": 0, \"resource\": { \"buffer\": this._vsUniformBuffer } },\n                    { \"binding\": 1, \"resource\": { \"buffer\": this._uniBufFrag._gpuBuffer } }\n                    //   { binding: 2, resource: sampler },\n                    //   { binding: 3, resource: tex.createView() },\n                ],\n            });\n\n        this._cgp.device.queue.writeBuffer(\n            this._vsUniformBuffer,\n            0,\n            this._vsUniformValues.buffer,\n            this._vsUniformValues.byteOffset,\n            this._vsUniformValues.byteLength\n        );\n\n        this._uniBufFrag.updateUniformValues();\n        this._cgp.popErrorScope(\"cgp_pipeline end\", (e) =>\n        {\n            this._isValid = false;\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/cgp/cgp_pipeline.js\n");

/***/ }),

/***/ "./src/core/cgp/cgp_shader.js":
/*!************************************!*\
  !*** ./src/core/cgp/cgp_shader.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Shader)\n/* harmony export */ });\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core_logger */ \"./src/core/core_logger.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"./src/core/utils.js\");\n/* harmony import */ var _cgp_uniform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cgp_uniform */ \"./src/core/cgp/cgp_uniform.js\");\n/* harmony import */ var _cgl_shader_default_wgsl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cgl_shader_default.wgsl */ \"./src/core/cgp/cgl_shader_default.wgsl\");\n\n\n\n\n\nclass Shader\n{\n    constructor(_cgp, _name)\n    {\n        if (!_cgp) throw new Error(\"shader constructed without cgp \" + _name);\n        this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"cgp_shader\");\n        this._cgp = _cgp;\n        this._name = _name;\n        this._uniforms = [];\n\n        if (!_name) this._log.stack(\"no shader name given\");\n        this._name = _name || \"unknown\";\n        this.id = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.simpleId)();\n        this._isValid = true;\n        this._compileReason = \"\";\n        this.shaderModule = null;\n        this._needsRecompile = true;\n\n        this._src = \"\";\n    }\n\n    get isValid()\n    {\n        return this._isValid;\n    }\n\n    get uniforms()\n    {\n        return this._uniforms;\n    }\n\n    getName()\n    {\n        return this._name;\n    }\n\n    setWhyCompile(why)\n    {\n        this._compileReason = why;\n    }\n\n    setSource(src)\n    {\n        this._src = src;\n        this.setWhyCompile(\"Source changed\");\n        this._needsRecompile = true;\n    }\n\n    compile()\n    {\n        this._isValid = true;\n        console.log(\"compiling shader...\", this._compileReason);\n        this._cgp.pushErrorScope();\n        this.shaderModule = this._cgp.device.createShaderModule({ \"code\": this._src });\n        this._cgp.popErrorScope(\"cgp_shader \" + this._name, this.error.bind(this));\n        this._needsRecompile = false;\n    }\n\n    error(e)\n    {\n        this._isValid = false;\n    }\n\n\n    bind()\n    {\n        let sizes = {};\n        for (let i = 0; i < this._uniforms.length; i++)\n        {\n            // console.log(this._uniforms[i]);\n        }\n\n        if (this._needsRecompile) this.compile();\n    }\n\n    /**\n     * add a uniform to the fragment shader\n     * @param {String} type ['f','t', etc]\n     * @param {String} name\n     * @param {any} value or port\n     * @memberof Shader\n     * @instance\n     * @function addUniformFrag\n     * @returns {Uniform}\n     */\n    addUniformFrag(type, name, valueOrPort, p2, p3, p4)\n    {\n        const uni = new _cgp_uniform__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, type, name, valueOrPort, p2, p3, p4);\n        uni.shaderType = \"frag\";\n        return uni;\n    }\n\n    /**\n     * add a uniform to the vertex shader\n     * @param {String} type ['f','t', etc]\n     * @param {String} name\n     * @param {any} value or port\n     * @memberof Shader\n     * @instance\n     * @function addUniformVert\n     * @returns {Uniform}\n     */\n    addUniformVert(type, name, valueOrPort, p2, p3, p4)\n    {\n        const uni = new _cgp_uniform__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, type, name, valueOrPort, p2, p3, p4);\n        uni.shaderType = \"vert\";\n        return uni;\n    }\n\n    /**\n     * add a uniform to all shader programs\n     * @param {String} type ['f','t', etc]\n     * @param {String} name\n     * @param {any} value or port\n     * @memberof Shader\n     * @instance\n     * @function addUniform\n     * @returns {Uniform}\n     */\n    addUniform(type, name, valueOrPort, p2, p3, p4)\n    {\n        const uni = new _cgp_uniform__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, type, name, valueOrPort, p2, p3, p4);\n        uni.shaderType = \"both\";\n        return uni;\n    }\n\n\n    _addUniform(uni)\n    {\n        this._uniforms.push(uni);\n        this.setWhyCompile(\"add uniform \" + name);\n        this._needsRecompile = true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ3AvY2dwX3NoYWRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ0FCTEVTLy4vc3JjL2NvcmUvY2dwL2NncF9zaGFkZXIuanM/MGM1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTG9nZ2VyIGZyb20gXCIuLi9jb3JlX2xvZ2dlclwiO1xuaW1wb3J0IHsgc2ltcGxlSWQgfSBmcm9tIFwiLi4vdXRpbHNcIjtcbmltcG9ydCBVbmlmb3JtIGZyb20gXCIuL2NncF91bmlmb3JtXCI7XG5pbXBvcnQgZGVmYXVsdFNoYWRlclNyY1ZlcnQgZnJvbSBcIi4vY2dsX3NoYWRlcl9kZWZhdWx0Lndnc2xcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hhZGVyXG57XG4gICAgY29uc3RydWN0b3IoX2NncCwgX25hbWUpXG4gICAge1xuICAgICAgICBpZiAoIV9jZ3ApIHRocm93IG5ldyBFcnJvcihcInNoYWRlciBjb25zdHJ1Y3RlZCB3aXRob3V0IGNncCBcIiArIF9uYW1lKTtcbiAgICAgICAgdGhpcy5fbG9nID0gbmV3IExvZ2dlcihcImNncF9zaGFkZXJcIik7XG4gICAgICAgIHRoaXMuX2NncCA9IF9jZ3A7XG4gICAgICAgIHRoaXMuX25hbWUgPSBfbmFtZTtcbiAgICAgICAgdGhpcy5fdW5pZm9ybXMgPSBbXTtcblxuICAgICAgICBpZiAoIV9uYW1lKSB0aGlzLl9sb2cuc3RhY2soXCJubyBzaGFkZXIgbmFtZSBnaXZlblwiKTtcbiAgICAgICAgdGhpcy5fbmFtZSA9IF9uYW1lIHx8IFwidW5rbm93blwiO1xuICAgICAgICB0aGlzLmlkID0gc2ltcGxlSWQoKTtcbiAgICAgICAgdGhpcy5faXNWYWxpZCA9IHRydWU7XG4gICAgICAgIHRoaXMuX2NvbXBpbGVSZWFzb24gPSBcIlwiO1xuICAgICAgICB0aGlzLnNoYWRlck1vZHVsZSA9IG51bGw7XG4gICAgICAgIHRoaXMuX25lZWRzUmVjb21waWxlID0gdHJ1ZTtcblxuICAgICAgICB0aGlzLl9zcmMgPSBcIlwiO1xuICAgIH1cblxuICAgIGdldCBpc1ZhbGlkKClcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc1ZhbGlkO1xuICAgIH1cblxuICAgIGdldCB1bmlmb3JtcygpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5fdW5pZm9ybXM7XG4gICAgfVxuXG4gICAgZ2V0TmFtZSgpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5fbmFtZTtcbiAgICB9XG5cbiAgICBzZXRXaHlDb21waWxlKHdoeSlcbiAgICB7XG4gICAgICAgIHRoaXMuX2NvbXBpbGVSZWFzb24gPSB3aHk7XG4gICAgfVxuXG4gICAgc2V0U291cmNlKHNyYylcbiAgICB7XG4gICAgICAgIHRoaXMuX3NyYyA9IHNyYztcbiAgICAgICAgdGhpcy5zZXRXaHlDb21waWxlKFwiU291cmNlIGNoYW5nZWRcIik7XG4gICAgICAgIHRoaXMuX25lZWRzUmVjb21waWxlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBjb21waWxlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX2lzVmFsaWQgPSB0cnVlO1xuICAgICAgICBjb25zb2xlLmxvZyhcImNvbXBpbGluZyBzaGFkZXIuLi5cIiwgdGhpcy5fY29tcGlsZVJlYXNvbik7XG4gICAgICAgIHRoaXMuX2NncC5wdXNoRXJyb3JTY29wZSgpO1xuICAgICAgICB0aGlzLnNoYWRlck1vZHVsZSA9IHRoaXMuX2NncC5kZXZpY2UuY3JlYXRlU2hhZGVyTW9kdWxlKHsgXCJjb2RlXCI6IHRoaXMuX3NyYyB9KTtcbiAgICAgICAgdGhpcy5fY2dwLnBvcEVycm9yU2NvcGUoXCJjZ3Bfc2hhZGVyIFwiICsgdGhpcy5fbmFtZSwgdGhpcy5lcnJvci5iaW5kKHRoaXMpKTtcbiAgICAgICAgdGhpcy5fbmVlZHNSZWNvbXBpbGUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBlcnJvcihlKVxuICAgIHtcbiAgICAgICAgdGhpcy5faXNWYWxpZCA9IGZhbHNlO1xuICAgIH1cblxuXG4gICAgYmluZCgpXG4gICAge1xuICAgICAgICBsZXQgc2l6ZXMgPSB7fTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl91bmlmb3Jtcy5sZW5ndGg7IGkrKylcbiAgICAgICAge1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5fdW5pZm9ybXNbaV0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuX25lZWRzUmVjb21waWxlKSB0aGlzLmNvbXBpbGUoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBhZGQgYSB1bmlmb3JtIHRvIHRoZSBmcmFnbWVudCBzaGFkZXJcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gdHlwZSBbJ2YnLCd0JywgZXRjXVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gICAgICogQHBhcmFtIHthbnl9IHZhbHVlIG9yIHBvcnRcbiAgICAgKiBAbWVtYmVyb2YgU2hhZGVyXG4gICAgICogQGluc3RhbmNlXG4gICAgICogQGZ1bmN0aW9uIGFkZFVuaWZvcm1GcmFnXG4gICAgICogQHJldHVybnMge1VuaWZvcm19XG4gICAgICovXG4gICAgYWRkVW5pZm9ybUZyYWcodHlwZSwgbmFtZSwgdmFsdWVPclBvcnQsIHAyLCBwMywgcDQpXG4gICAge1xuICAgICAgICBjb25zdCB1bmkgPSBuZXcgVW5pZm9ybSh0aGlzLCB0eXBlLCBuYW1lLCB2YWx1ZU9yUG9ydCwgcDIsIHAzLCBwNCk7XG4gICAgICAgIHVuaS5zaGFkZXJUeXBlID0gXCJmcmFnXCI7XG4gICAgICAgIHJldHVybiB1bmk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogYWRkIGEgdW5pZm9ybSB0byB0aGUgdmVydGV4IHNoYWRlclxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIFsnZicsJ3QnLCBldGNdXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAgICAgKiBAcGFyYW0ge2FueX0gdmFsdWUgb3IgcG9ydFxuICAgICAqIEBtZW1iZXJvZiBTaGFkZXJcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKiBAZnVuY3Rpb24gYWRkVW5pZm9ybVZlcnRcbiAgICAgKiBAcmV0dXJucyB7VW5pZm9ybX1cbiAgICAgKi9cbiAgICBhZGRVbmlmb3JtVmVydCh0eXBlLCBuYW1lLCB2YWx1ZU9yUG9ydCwgcDIsIHAzLCBwNClcbiAgICB7XG4gICAgICAgIGNvbnN0IHVuaSA9IG5ldyBVbmlmb3JtKHRoaXMsIHR5cGUsIG5hbWUsIHZhbHVlT3JQb3J0LCBwMiwgcDMsIHA0KTtcbiAgICAgICAgdW5pLnNoYWRlclR5cGUgPSBcInZlcnRcIjtcbiAgICAgICAgcmV0dXJuIHVuaTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBhZGQgYSB1bmlmb3JtIHRvIGFsbCBzaGFkZXIgcHJvZ3JhbXNcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gdHlwZSBbJ2YnLCd0JywgZXRjXVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gICAgICogQHBhcmFtIHthbnl9IHZhbHVlIG9yIHBvcnRcbiAgICAgKiBAbWVtYmVyb2YgU2hhZGVyXG4gICAgICogQGluc3RhbmNlXG4gICAgICogQGZ1bmN0aW9uIGFkZFVuaWZvcm1cbiAgICAgKiBAcmV0dXJucyB7VW5pZm9ybX1cbiAgICAgKi9cbiAgICBhZGRVbmlmb3JtKHR5cGUsIG5hbWUsIHZhbHVlT3JQb3J0LCBwMiwgcDMsIHA0KVxuICAgIHtcbiAgICAgICAgY29uc3QgdW5pID0gbmV3IFVuaWZvcm0odGhpcywgdHlwZSwgbmFtZSwgdmFsdWVPclBvcnQsIHAyLCBwMywgcDQpO1xuICAgICAgICB1bmkuc2hhZGVyVHlwZSA9IFwiYm90aFwiO1xuICAgICAgICByZXR1cm4gdW5pO1xuICAgIH1cblxuXG4gICAgX2FkZFVuaWZvcm0odW5pKVxuICAgIHtcbiAgICAgICAgdGhpcy5fdW5pZm9ybXMucHVzaCh1bmkpO1xuICAgICAgICB0aGlzLnNldFdoeUNvbXBpbGUoXCJhZGQgdW5pZm9ybSBcIiArIG5hbWUpO1xuICAgICAgICB0aGlzLl9uZWVkc1JlY29tcGlsZSA9IHRydWU7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/cgp/cgp_shader.js\n");

/***/ }),

/***/ "./src/core/cgp/cgp_state.js":
/*!***********************************!*\
  !*** ./src/core/cgp/cgp_state.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WebGpuContext\": () => (/* binding */ WebGpuContext)\n/* harmony export */ });\n/* harmony import */ var _cg_cg_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cg/cg_constants */ \"./src/core/cg/cg_constants.js\");\n/* harmony import */ var _cg_cg_state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cg/cg_state */ \"./src/core/cg/cg_state.js\");\n/* harmony import */ var _cgp_shader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cgp_shader */ \"./src/core/cgp/cgp_shader.js\");\n/* harmony import */ var _cgl_shader_default_wgsl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cgl_shader_default.wgsl */ \"./src/core/cgp/cgl_shader_default.wgsl\");\n\n\n\n\n\n/**\n * cables webgpu context/state manager\n * @external CGP\n * @namespace Context\n * @class\n * @hideconstructor\n */\n// const Context = function (_patch)\nclass WebGpuContext extends _cg_cg_state__WEBPACK_IMPORTED_MODULE_1__.CGState\n{\n    constructor(_patch)\n    {\n        super();\n\n        this.patch = _patch;\n\n        this.gApi = _cg_cg_constants__WEBPACK_IMPORTED_MODULE_0__.CG.GAPI_WEBGPU;\n        this._viewport = [0, 0, 256, 256];\n        this._shaderStack = [];\n        this._simpleShader = null;\n\n        this._stackCullFaceFacing = [];\n        this._stackDepthTest = [];\n        this._stackCullFace = [];\n        this._stackDepthFunc = [];\n        this._stackDepthWrite = [];\n\n        this.DEPTH_FUNCS = [\n            \"never\",\n            \"always\",\n            \"less\",\n            \"less-equal\",\n            \"greater\",\n            \"greater-equal\",\n            \"equal\",\n            \"not-equal\"\n        ];\n\n        this.CULL_MODES = [\n            \"none\",\n            \"back\",\n            \"front\",\n            \"none\" // both does not exist in webgpu\n        ];\n    }\n\n\n    /// ////////////////////\n\n    getViewPort()\n    {\n        return [0, 0, this.canvasWidth, this.canvasHeight];\n    }\n\n    renderStart(cgp, identTranslate, identTranslateView)\n    {\n        if (!this._simpleShader)\n        {\n            this._simpleShader = new _cgp_shader__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, \"simple default shader\");\n            this._simpleShader.setSource(_cgl_shader_default_wgsl__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n            this._simpleShader.addUniformFrag(\"4f\", \"color\", 1, 1, 0, 1);\n        }\n\n        this.fpsCounter.startFrame();\n\n        this._startMatrixStacks(identTranslate, identTranslateView);\n        this.setViewPort(0, 0, this.canvasWidth, this.canvasHeight);\n\n        this.pushShader(this._simpleShader);\n        this.pushDepthTest(true);\n        this.pushDepthWrite(true);\n        this.pushDepthFunc(\"less-equal\");\n\n        this.emitEvent(\"beginFrame\");\n    }\n\n    renderEnd()\n    {\n        this._endMatrixStacks();\n\n        this.popShader();\n        this.popDepthFunc();\n        this.popDepthWrite();\n        this.popDepthTest();\n\n        this.emitEvent(\"endFrame\");\n        this.fpsCounter.endFrame();\n    }\n\n\n    setViewPort(x, y, w, h)\n    {\n        this._viewport = [x, y, w, h];\n    }\n\n    /**\n     * @function getViewPort\n     * @memberof Context\n     * @instance\n     * @description get current gl viewport\n     * @returns {Array} array [x,y,w,h]\n     */\n    getViewPort()\n    {\n        return this._viewPort;\n    }\n\n\n    createMesh(geom, glPrimitive)\n    {\n        return new CGP.Mesh(this, geom, glPrimitive);\n    }\n\n    getShader()\n    {\n        return {};\n    }\n\n    /**\n     * push a shader to the shader stack\n     * @function pushShader\n     * @memberof Context\n     * @instance\n     * @param {Object} shader\n     * @function\n    */\n    pushShader(shader)\n    {\n        this._shaderStack.push(shader);\n        // currentShader = shader;\n    }\n\n    /**\n     * pop current used shader from shader stack\n     * @function popShader\n     * @memberof Context\n     * @instance\n     * @function\n     */\n    popShader()\n    {\n        if (this._shaderStack.length === 0) throw new Error(\"Invalid shader stack pop!\");\n        this._shaderStack.pop();\n        // currentShader = this._shaderStack[this._shaderStack.length - 1];\n    }\n\n    getShader()\n    {\n        return this._shaderStack[this._shaderStack.length - 1];\n        // if (currentShader) if (!this.frameStore || ((this.frameStore.renderOffscreen === true) == currentShader.offScreenPass) === true) return currentShader;\n        // for (let i = this._shaderStack.length - 1; i >= 0; i--) if (this._shaderStack[i]) if (this.frameStore.renderOffscreen == this._shaderStack[i].offScreenPass) return this._shaderStack[i];\n    }\n\n    pushErrorScope()\n    {\n        this.device.pushErrorScope(\"validation\");\n    }\n\n    popErrorScope(name, cb)\n    {\n        this.device.popErrorScope().then((error) =>\n        {\n            if (error)\n            {\n                this.patch.emitEvent(\"criticalError\", { \"title\": \"WebGPU error \\\"\" + name + \"\\\"\", \"codeText\": error.message });\n                // if (this.patch.isEditorMode())console.log(\"WebGPU error \" + this._name, error.message);\n\n                console.warn(\"[cgp]\", name, error.message, error, cb);\n                if (cb)cb(error);\n            }\n        });\n    }\n\n    /**\n     * push depth testing enabled state\n     * @function pushDepthTest\n     * @param {Boolean} enabled\n     * @memberof Context\n     * @instance\n     */\n\n    pushDepthTest(b)\n    {\n        this._stackDepthTest.push(b);\n    }\n\n    /**\n     * current state of depth testing\n     * @function stateDepthTest\n     * @returns {Boolean} enabled\n     * @memberof Context\n     * @instance\n     */\n    stateDepthTest()\n    {\n        return this._stackDepthTest[this._stackDepthTest.length - 1];\n    }\n\n    /**\n     * pop depth testing state\n     * @function popDepthTest\n     * @memberof Context\n     * @instance\n     */\n    popDepthTest()\n    {\n        this._stackDepthTest.pop();\n    }\n\n    // --------------------------------------\n    // state depthwrite\n\n    /**\n     * push depth write enabled state\n     * @function pushDepthTest\n     * @param {Boolean} enabled\n     * @memberof Context\n     * @instance\n     */\n\n    pushDepthWrite(b)\n    {\n        b = b || false;\n        this._stackDepthWrite.push(b);\n    }\n\n    /**\n     * current state of depth writing\n     * @function stateCullFace\n     * @returns {Boolean} enabled\n     * @memberof Context\n     * @instance\n     */\n    stateDepthWrite()\n    {\n        return this._stackDepthWrite[this._stackDepthWrite.length - 1];\n    }\n\n    /**\n     * pop depth writing state\n     * @function popCullFace\n     * @memberof Context\n     * @instance\n     */\n    popDepthWrite()\n    {\n        this._stackDepthWrite.pop();\n    }\n\n\n    // --------------------------------------\n    // state depthfunc\n\n\n    /**\n     * @function pushDepthFunc\n     * @memberof Context\n     * @instance\n     * @param {string} depth compare func\n     */\n    pushDepthFunc(f)\n    {\n        this._stackDepthFunc.push(f);\n    }\n\n    /**\n     * @function stateDepthFunc\n     * @memberof Context\n     * @instance\n     * @returns {string}\n     */\n    stateDepthFunc()\n    {\n        if (this._stackDepthFunc.length > 0) return this._stackDepthFunc[this._stackDepthFunc.length - 1];\n        return false;\n    }\n\n    /**\n     * pop depth compare func\n     * @function popDepthFunc\n     * @memberof Context\n     * @instance\n     */\n    popDepthFunc()\n    {\n        this._stackDepthFunc.pop();\n    }\n\n\n\n    // --------------------------------------\n    // state CullFace\n\n    /**\n     * push face culling face enabled state\n     * @function pushCullFaceFacing\n     * @param {Boolean} enabled\n     * @memberof Context\n     * @instance\n     */\n    pushCullFace(b)\n    {\n        this._stackCullFace.push(b);\n    }\n\n    /**\n * current state of face culling\n * @function stateCullFace\n * @returns {Boolean} enabled\n * @memberof Context\n * @instance\n */\n    stateCullFace()\n    {\n        return this._stackCullFace[this._stackCullFace.length - 1];\n    }\n\n    /**\n * pop face culling enabled state\n * @function popCullFace\n * @memberof Context\n * @instance\n */\n    popCullFace()\n    {\n        this._stackCullFace.pop();\n    }\n\n\n    // --------------------------------------\n    // state CullFace Facing\n\n\n    /**\n     * push face culling face side\n     * @function pushCullFaceFacing\n     * @memberof Context\n     * @instance\n     */\n\n    pushCullFaceFacing(b)\n    {\n        this._stackCullFaceFacing.push(b);\n    }\n\n    /**\n     * current state of face culling side\n     * @function stateCullFaceFacing\n     * @returns {Boolean} enabled\n     * @memberof Context\n     * @instance\n     */\n    stateCullFaceFacing()\n    {\n        return this._stackCullFaceFacing[this._stackCullFaceFacing.length - 1];\n    }\n\n    /**\n     * pop face culling face side\n     * @function popCullFaceFacing\n     * @memberof Context\n     * @instance\n     */\n    popCullFaceFacing()\n    {\n        this._stackCullFaceFacing.pop();\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ3AvY2dwX3N0YXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NncC9jZ3Bfc3RhdGUuanM/NDliMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDRyB9IGZyb20gXCIuLi9jZy9jZ19jb25zdGFudHNcIjtcbmltcG9ydCB7IENHU3RhdGUgfSBmcm9tIFwiLi4vY2cvY2dfc3RhdGVcIjtcbmltcG9ydCBTaGFkZXIgZnJvbSBcIi4vY2dwX3NoYWRlclwiO1xuaW1wb3J0IGRlZmF1bHRTaGFkZXJTcmNWZXJ0IGZyb20gXCIuL2NnbF9zaGFkZXJfZGVmYXVsdC53Z3NsXCI7XG5cbi8qKlxuICogY2FibGVzIHdlYmdwdSBjb250ZXh0L3N0YXRlIG1hbmFnZXJcbiAqIEBleHRlcm5hbCBDR1BcbiAqIEBuYW1lc3BhY2UgQ29udGV4dFxuICogQGNsYXNzXG4gKiBAaGlkZWNvbnN0cnVjdG9yXG4gKi9cbi8vIGNvbnN0IENvbnRleHQgPSBmdW5jdGlvbiAoX3BhdGNoKVxuY2xhc3MgV2ViR3B1Q29udGV4dCBleHRlbmRzIENHU3RhdGVcbntcbiAgICBjb25zdHJ1Y3RvcihfcGF0Y2gpXG4gICAge1xuICAgICAgICBzdXBlcigpO1xuXG4gICAgICAgIHRoaXMucGF0Y2ggPSBfcGF0Y2g7XG5cbiAgICAgICAgdGhpcy5nQXBpID0gQ0cuR0FQSV9XRUJHUFU7XG4gICAgICAgIHRoaXMuX3ZpZXdwb3J0ID0gWzAsIDAsIDI1NiwgMjU2XTtcbiAgICAgICAgdGhpcy5fc2hhZGVyU3RhY2sgPSBbXTtcbiAgICAgICAgdGhpcy5fc2ltcGxlU2hhZGVyID0gbnVsbDtcblxuICAgICAgICB0aGlzLl9zdGFja0N1bGxGYWNlRmFjaW5nID0gW107XG4gICAgICAgIHRoaXMuX3N0YWNrRGVwdGhUZXN0ID0gW107XG4gICAgICAgIHRoaXMuX3N0YWNrQ3VsbEZhY2UgPSBbXTtcbiAgICAgICAgdGhpcy5fc3RhY2tEZXB0aEZ1bmMgPSBbXTtcbiAgICAgICAgdGhpcy5fc3RhY2tEZXB0aFdyaXRlID0gW107XG5cbiAgICAgICAgdGhpcy5ERVBUSF9GVU5DUyA9IFtcbiAgICAgICAgICAgIFwibmV2ZXJcIixcbiAgICAgICAgICAgIFwiYWx3YXlzXCIsXG4gICAgICAgICAgICBcImxlc3NcIixcbiAgICAgICAgICAgIFwibGVzcy1lcXVhbFwiLFxuICAgICAgICAgICAgXCJncmVhdGVyXCIsXG4gICAgICAgICAgICBcImdyZWF0ZXItZXF1YWxcIixcbiAgICAgICAgICAgIFwiZXF1YWxcIixcbiAgICAgICAgICAgIFwibm90LWVxdWFsXCJcbiAgICAgICAgXTtcblxuICAgICAgICB0aGlzLkNVTExfTU9ERVMgPSBbXG4gICAgICAgICAgICBcIm5vbmVcIixcbiAgICAgICAgICAgIFwiYmFja1wiLFxuICAgICAgICAgICAgXCJmcm9udFwiLFxuICAgICAgICAgICAgXCJub25lXCIgLy8gYm90aCBkb2VzIG5vdCBleGlzdCBpbiB3ZWJncHVcbiAgICAgICAgXTtcbiAgICB9XG5cblxuICAgIC8vLyAvLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4gICAgZ2V0Vmlld1BvcnQoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIFswLCAwLCB0aGlzLmNhbnZhc1dpZHRoLCB0aGlzLmNhbnZhc0hlaWdodF07XG4gICAgfVxuXG4gICAgcmVuZGVyU3RhcnQoY2dwLCBpZGVudFRyYW5zbGF0ZSwgaWRlbnRUcmFuc2xhdGVWaWV3KVxuICAgIHtcbiAgICAgICAgaWYgKCF0aGlzLl9zaW1wbGVTaGFkZXIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX3NpbXBsZVNoYWRlciA9IG5ldyBTaGFkZXIodGhpcywgXCJzaW1wbGUgZGVmYXVsdCBzaGFkZXJcIik7XG4gICAgICAgICAgICB0aGlzLl9zaW1wbGVTaGFkZXIuc2V0U291cmNlKGRlZmF1bHRTaGFkZXJTcmNWZXJ0KTtcbiAgICAgICAgICAgIHRoaXMuX3NpbXBsZVNoYWRlci5hZGRVbmlmb3JtRnJhZyhcIjRmXCIsIFwiY29sb3JcIiwgMSwgMSwgMCwgMSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmZwc0NvdW50ZXIuc3RhcnRGcmFtZSgpO1xuXG4gICAgICAgIHRoaXMuX3N0YXJ0TWF0cml4U3RhY2tzKGlkZW50VHJhbnNsYXRlLCBpZGVudFRyYW5zbGF0ZVZpZXcpO1xuICAgICAgICB0aGlzLnNldFZpZXdQb3J0KDAsIDAsIHRoaXMuY2FudmFzV2lkdGgsIHRoaXMuY2FudmFzSGVpZ2h0KTtcblxuICAgICAgICB0aGlzLnB1c2hTaGFkZXIodGhpcy5fc2ltcGxlU2hhZGVyKTtcbiAgICAgICAgdGhpcy5wdXNoRGVwdGhUZXN0KHRydWUpO1xuICAgICAgICB0aGlzLnB1c2hEZXB0aFdyaXRlKHRydWUpO1xuICAgICAgICB0aGlzLnB1c2hEZXB0aEZ1bmMoXCJsZXNzLWVxdWFsXCIpO1xuXG4gICAgICAgIHRoaXMuZW1pdEV2ZW50KFwiYmVnaW5GcmFtZVwiKTtcbiAgICB9XG5cbiAgICByZW5kZXJFbmQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fZW5kTWF0cml4U3RhY2tzKCk7XG5cbiAgICAgICAgdGhpcy5wb3BTaGFkZXIoKTtcbiAgICAgICAgdGhpcy5wb3BEZXB0aEZ1bmMoKTtcbiAgICAgICAgdGhpcy5wb3BEZXB0aFdyaXRlKCk7XG4gICAgICAgIHRoaXMucG9wRGVwdGhUZXN0KCk7XG5cbiAgICAgICAgdGhpcy5lbWl0RXZlbnQoXCJlbmRGcmFtZVwiKTtcbiAgICAgICAgdGhpcy5mcHNDb3VudGVyLmVuZEZyYW1lKCk7XG4gICAgfVxuXG5cbiAgICBzZXRWaWV3UG9ydCh4LCB5LCB3LCBoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fdmlld3BvcnQgPSBbeCwgeSwgdywgaF07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGZ1bmN0aW9uIGdldFZpZXdQb3J0XG4gICAgICogQG1lbWJlcm9mIENvbnRleHRcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKiBAZGVzY3JpcHRpb24gZ2V0IGN1cnJlbnQgZ2wgdmlld3BvcnRcbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IGFycmF5IFt4LHksdyxoXVxuICAgICAqL1xuICAgIGdldFZpZXdQb3J0KClcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl92aWV3UG9ydDtcbiAgICB9XG5cblxuICAgIGNyZWF0ZU1lc2goZ2VvbSwgZ2xQcmltaXRpdmUpXG4gICAge1xuICAgICAgICByZXR1cm4gbmV3IENHUC5NZXNoKHRoaXMsIGdlb20sIGdsUHJpbWl0aXZlKTtcbiAgICB9XG5cbiAgICBnZXRTaGFkZXIoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHB1c2ggYSBzaGFkZXIgdG8gdGhlIHNoYWRlciBzdGFja1xuICAgICAqIEBmdW5jdGlvbiBwdXNoU2hhZGVyXG4gICAgICogQG1lbWJlcm9mIENvbnRleHRcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gc2hhZGVyXG4gICAgICogQGZ1bmN0aW9uXG4gICAgKi9cbiAgICBwdXNoU2hhZGVyKHNoYWRlcilcbiAgICB7XG4gICAgICAgIHRoaXMuX3NoYWRlclN0YWNrLnB1c2goc2hhZGVyKTtcbiAgICAgICAgLy8gY3VycmVudFNoYWRlciA9IHNoYWRlcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBwb3AgY3VycmVudCB1c2VkIHNoYWRlciBmcm9tIHNoYWRlciBzdGFja1xuICAgICAqIEBmdW5jdGlvbiBwb3BTaGFkZXJcbiAgICAgKiBAbWVtYmVyb2YgQ29udGV4dFxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqIEBmdW5jdGlvblxuICAgICAqL1xuICAgIHBvcFNoYWRlcigpXG4gICAge1xuICAgICAgICBpZiAodGhpcy5fc2hhZGVyU3RhY2subGVuZ3RoID09PSAwKSB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHNoYWRlciBzdGFjayBwb3AhXCIpO1xuICAgICAgICB0aGlzLl9zaGFkZXJTdGFjay5wb3AoKTtcbiAgICAgICAgLy8gY3VycmVudFNoYWRlciA9IHRoaXMuX3NoYWRlclN0YWNrW3RoaXMuX3NoYWRlclN0YWNrLmxlbmd0aCAtIDFdO1xuICAgIH1cblxuICAgIGdldFNoYWRlcigpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5fc2hhZGVyU3RhY2tbdGhpcy5fc2hhZGVyU3RhY2subGVuZ3RoIC0gMV07XG4gICAgICAgIC8vIGlmIChjdXJyZW50U2hhZGVyKSBpZiAoIXRoaXMuZnJhbWVTdG9yZSB8fCAoKHRoaXMuZnJhbWVTdG9yZS5yZW5kZXJPZmZzY3JlZW4gPT09IHRydWUpID09IGN1cnJlbnRTaGFkZXIub2ZmU2NyZWVuUGFzcykgPT09IHRydWUpIHJldHVybiBjdXJyZW50U2hhZGVyO1xuICAgICAgICAvLyBmb3IgKGxldCBpID0gdGhpcy5fc2hhZGVyU3RhY2subGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmICh0aGlzLl9zaGFkZXJTdGFja1tpXSkgaWYgKHRoaXMuZnJhbWVTdG9yZS5yZW5kZXJPZmZzY3JlZW4gPT0gdGhpcy5fc2hhZGVyU3RhY2tbaV0ub2ZmU2NyZWVuUGFzcykgcmV0dXJuIHRoaXMuX3NoYWRlclN0YWNrW2ldO1xuICAgIH1cblxuICAgIHB1c2hFcnJvclNjb3BlKClcbiAgICB7XG4gICAgICAgIHRoaXMuZGV2aWNlLnB1c2hFcnJvclNjb3BlKFwidmFsaWRhdGlvblwiKTtcbiAgICB9XG5cbiAgICBwb3BFcnJvclNjb3BlKG5hbWUsIGNiKVxuICAgIHtcbiAgICAgICAgdGhpcy5kZXZpY2UucG9wRXJyb3JTY29wZSgpLnRoZW4oKGVycm9yKSA9PlxuICAgICAgICB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXRjaC5lbWl0RXZlbnQoXCJjcml0aWNhbEVycm9yXCIsIHsgXCJ0aXRsZVwiOiBcIldlYkdQVSBlcnJvciBcXFwiXCIgKyBuYW1lICsgXCJcXFwiXCIsIFwiY29kZVRleHRcIjogZXJyb3IubWVzc2FnZSB9KTtcbiAgICAgICAgICAgICAgICAvLyBpZiAodGhpcy5wYXRjaC5pc0VkaXRvck1vZGUoKSljb25zb2xlLmxvZyhcIldlYkdQVSBlcnJvciBcIiArIHRoaXMuX25hbWUsIGVycm9yLm1lc3NhZ2UpO1xuXG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKFwiW2NncF1cIiwgbmFtZSwgZXJyb3IubWVzc2FnZSwgZXJyb3IsIGNiKTtcbiAgICAgICAgICAgICAgICBpZiAoY2IpY2IoZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBwdXNoIGRlcHRoIHRlc3RpbmcgZW5hYmxlZCBzdGF0ZVxuICAgICAqIEBmdW5jdGlvbiBwdXNoRGVwdGhUZXN0XG4gICAgICogQHBhcmFtIHtCb29sZWFufSBlbmFibGVkXG4gICAgICogQG1lbWJlcm9mIENvbnRleHRcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKi9cblxuICAgIHB1c2hEZXB0aFRlc3QoYilcbiAgICB7XG4gICAgICAgIHRoaXMuX3N0YWNrRGVwdGhUZXN0LnB1c2goYik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogY3VycmVudCBzdGF0ZSBvZiBkZXB0aCB0ZXN0aW5nXG4gICAgICogQGZ1bmN0aW9uIHN0YXRlRGVwdGhUZXN0XG4gICAgICogQHJldHVybnMge0Jvb2xlYW59IGVuYWJsZWRcbiAgICAgKiBAbWVtYmVyb2YgQ29udGV4dFxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqL1xuICAgIHN0YXRlRGVwdGhUZXN0KClcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zdGFja0RlcHRoVGVzdFt0aGlzLl9zdGFja0RlcHRoVGVzdC5sZW5ndGggLSAxXTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBwb3AgZGVwdGggdGVzdGluZyBzdGF0ZVxuICAgICAqIEBmdW5jdGlvbiBwb3BEZXB0aFRlc3RcbiAgICAgKiBAbWVtYmVyb2YgQ29udGV4dFxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqL1xuICAgIHBvcERlcHRoVGVzdCgpXG4gICAge1xuICAgICAgICB0aGlzLl9zdGFja0RlcHRoVGVzdC5wb3AoKTtcbiAgICB9XG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIHN0YXRlIGRlcHRod3JpdGVcblxuICAgIC8qKlxuICAgICAqIHB1c2ggZGVwdGggd3JpdGUgZW5hYmxlZCBzdGF0ZVxuICAgICAqIEBmdW5jdGlvbiBwdXNoRGVwdGhUZXN0XG4gICAgICogQHBhcmFtIHtCb29sZWFufSBlbmFibGVkXG4gICAgICogQG1lbWJlcm9mIENvbnRleHRcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKi9cblxuICAgIHB1c2hEZXB0aFdyaXRlKGIpXG4gICAge1xuICAgICAgICBiID0gYiB8fCBmYWxzZTtcbiAgICAgICAgdGhpcy5fc3RhY2tEZXB0aFdyaXRlLnB1c2goYik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogY3VycmVudCBzdGF0ZSBvZiBkZXB0aCB3cml0aW5nXG4gICAgICogQGZ1bmN0aW9uIHN0YXRlQ3VsbEZhY2VcbiAgICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gZW5hYmxlZFxuICAgICAqIEBtZW1iZXJvZiBDb250ZXh0XG4gICAgICogQGluc3RhbmNlXG4gICAgICovXG4gICAgc3RhdGVEZXB0aFdyaXRlKClcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zdGFja0RlcHRoV3JpdGVbdGhpcy5fc3RhY2tEZXB0aFdyaXRlLmxlbmd0aCAtIDFdO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHBvcCBkZXB0aCB3cml0aW5nIHN0YXRlXG4gICAgICogQGZ1bmN0aW9uIHBvcEN1bGxGYWNlXG4gICAgICogQG1lbWJlcm9mIENvbnRleHRcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKi9cbiAgICBwb3BEZXB0aFdyaXRlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX3N0YWNrRGVwdGhXcml0ZS5wb3AoKTtcbiAgICB9XG5cblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gc3RhdGUgZGVwdGhmdW5jXG5cblxuICAgIC8qKlxuICAgICAqIEBmdW5jdGlvbiBwdXNoRGVwdGhGdW5jXG4gICAgICogQG1lbWJlcm9mIENvbnRleHRcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZGVwdGggY29tcGFyZSBmdW5jXG4gICAgICovXG4gICAgcHVzaERlcHRoRnVuYyhmKVxuICAgIHtcbiAgICAgICAgdGhpcy5fc3RhY2tEZXB0aEZ1bmMucHVzaChmKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAZnVuY3Rpb24gc3RhdGVEZXB0aEZ1bmNcbiAgICAgKiBAbWVtYmVyb2YgQ29udGV4dFxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgc3RhdGVEZXB0aEZ1bmMoKVxuICAgIHtcbiAgICAgICAgaWYgKHRoaXMuX3N0YWNrRGVwdGhGdW5jLmxlbmd0aCA+IDApIHJldHVybiB0aGlzLl9zdGFja0RlcHRoRnVuY1t0aGlzLl9zdGFja0RlcHRoRnVuYy5sZW5ndGggLSAxXTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHBvcCBkZXB0aCBjb21wYXJlIGZ1bmNcbiAgICAgKiBAZnVuY3Rpb24gcG9wRGVwdGhGdW5jXG4gICAgICogQG1lbWJlcm9mIENvbnRleHRcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKi9cbiAgICBwb3BEZXB0aEZ1bmMoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fc3RhY2tEZXB0aEZ1bmMucG9wKCk7XG4gICAgfVxuXG5cblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gc3RhdGUgQ3VsbEZhY2VcblxuICAgIC8qKlxuICAgICAqIHB1c2ggZmFjZSBjdWxsaW5nIGZhY2UgZW5hYmxlZCBzdGF0ZVxuICAgICAqIEBmdW5jdGlvbiBwdXNoQ3VsbEZhY2VGYWNpbmdcbiAgICAgKiBAcGFyYW0ge0Jvb2xlYW59IGVuYWJsZWRcbiAgICAgKiBAbWVtYmVyb2YgQ29udGV4dFxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqL1xuICAgIHB1c2hDdWxsRmFjZShiKVxuICAgIHtcbiAgICAgICAgdGhpcy5fc3RhY2tDdWxsRmFjZS5wdXNoKGIpO1xuICAgIH1cblxuICAgIC8qKlxuICogY3VycmVudCBzdGF0ZSBvZiBmYWNlIGN1bGxpbmdcbiAqIEBmdW5jdGlvbiBzdGF0ZUN1bGxGYWNlXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gZW5hYmxlZFxuICogQG1lbWJlcm9mIENvbnRleHRcbiAqIEBpbnN0YW5jZVxuICovXG4gICAgc3RhdGVDdWxsRmFjZSgpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5fc3RhY2tDdWxsRmFjZVt0aGlzLl9zdGFja0N1bGxGYWNlLmxlbmd0aCAtIDFdO1xuICAgIH1cblxuICAgIC8qKlxuICogcG9wIGZhY2UgY3VsbGluZyBlbmFibGVkIHN0YXRlXG4gKiBAZnVuY3Rpb24gcG9wQ3VsbEZhY2VcbiAqIEBtZW1iZXJvZiBDb250ZXh0XG4gKiBAaW5zdGFuY2VcbiAqL1xuICAgIHBvcEN1bGxGYWNlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX3N0YWNrQ3VsbEZhY2UucG9wKCk7XG4gICAgfVxuXG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIHN0YXRlIEN1bGxGYWNlIEZhY2luZ1xuXG5cbiAgICAvKipcbiAgICAgKiBwdXNoIGZhY2UgY3VsbGluZyBmYWNlIHNpZGVcbiAgICAgKiBAZnVuY3Rpb24gcHVzaEN1bGxGYWNlRmFjaW5nXG4gICAgICogQG1lbWJlcm9mIENvbnRleHRcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKi9cblxuICAgIHB1c2hDdWxsRmFjZUZhY2luZyhiKVxuICAgIHtcbiAgICAgICAgdGhpcy5fc3RhY2tDdWxsRmFjZUZhY2luZy5wdXNoKGIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGN1cnJlbnQgc3RhdGUgb2YgZmFjZSBjdWxsaW5nIHNpZGVcbiAgICAgKiBAZnVuY3Rpb24gc3RhdGVDdWxsRmFjZUZhY2luZ1xuICAgICAqIEByZXR1cm5zIHtCb29sZWFufSBlbmFibGVkXG4gICAgICogQG1lbWJlcm9mIENvbnRleHRcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKi9cbiAgICBzdGF0ZUN1bGxGYWNlRmFjaW5nKClcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zdGFja0N1bGxGYWNlRmFjaW5nW3RoaXMuX3N0YWNrQ3VsbEZhY2VGYWNpbmcubGVuZ3RoIC0gMV07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogcG9wIGZhY2UgY3VsbGluZyBmYWNlIHNpZGVcbiAgICAgKiBAZnVuY3Rpb24gcG9wQ3VsbEZhY2VGYWNpbmdcbiAgICAgKiBAbWVtYmVyb2YgQ29udGV4dFxuICAgICAqIEBpbnN0YW5jZVxuICAgICAqL1xuICAgIHBvcEN1bGxGYWNlRmFjaW5nKClcbiAgICB7XG4gICAgICAgIHRoaXMuX3N0YWNrQ3VsbEZhY2VGYWNpbmcucG9wKCk7XG4gICAgfVxufVxuZXhwb3J0IHsgV2ViR3B1Q29udGV4dCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/cgp/cgp_state.js\n");

/***/ }),

/***/ "./src/core/cgp/cgp_texture.js":
/*!*************************************!*\
  !*** ./src/core/cgp/cgp_texture.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Texture)\n/* harmony export */ });\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core_logger */ \"./src/core/core_logger.js\");\n\n\nclass Texture\n{\n    constructor(_cgp, options)\n    {\n        if (!_cgp) throw new Error(\"no cgp\");\n        this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"cgp_texture\");\n        this._cgp = _cgp;\n        this.id = CABLES.uuid();\n\n        options = options || {};\n\n        this.name = options.name || \"unknown\";\n    }\n\n    /**\n     * set texture data from an image/canvas object\n     * @function initTexture\n     * @memberof Texture\n     * @instance\n     * @param {Object} image\n     * @param {Number} filter\n     */\n    initTexture(img, filter)\n    {\n        this.width = img.width;\n        this.height = img.height;\n\n        this.textureType = \"rgba8unorm\";\n\n        const textureDescriptor = {\n            // Unlike in WebGL, the size of our texture must be set at texture creation time.\n            // This means we have to wait until the image is loaded to create the texture, since we won't\n            // know the size until then.\n            \"size\": { \"width\": img.width, \"height\": img.height },\n            \"format\": this.textureType,\n            \"usage\": GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST\n        };\n        const texture = this._cgp.device.createTexture(textureDescriptor);\n\n        this._cgp.device.queue.copyExternalImageToTexture({ \"source\": img }, { \"texture\": texture }, textureDescriptor.size);\n\n        return texture;\n    }\n\n    getInfo()\n    {\n        const tex = this;\n        const obj = {};\n\n        obj.name = tex.name;\n        obj.size = tex.width + \" x \" + tex.height;\n\n        obj.textureType = tex.textureType;\n\n        return obj;\n    }\n}\n\n\n/**\n * @function load\n * @static\n * @memberof Texture\n * @description load an image from an url\n * @param {Context} cgl\n * @param {String} url\n * @param {Function} onFinished\n * @param {Object} options\n * @return {Texture}\n */\nTexture.load = function (cgp, url, onFinished, settings)\n{\n    fetch(url).then((response) =>\n    {\n        response.blob().then((blob) =>\n        {\n            createImageBitmap(blob).then((imgBitmap) =>\n            {\n                const texture = new Texture(cgp, { \"name\": url });\n                texture.initTexture(imgBitmap);\n                if (onFinished)onFinished(texture);\n                else console.log(\"Texture.load no onFinished callback\");\n            });\n        });\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ3AvY2dwX3RleHR1cmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NncC9jZ3BfdGV4dHVyZS5qcz8xMGYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMb2dnZXIgZnJvbSBcIi4uL2NvcmVfbG9nZ2VyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRleHR1cmVcbntcbiAgICBjb25zdHJ1Y3RvcihfY2dwLCBvcHRpb25zKVxuICAgIHtcbiAgICAgICAgaWYgKCFfY2dwKSB0aHJvdyBuZXcgRXJyb3IoXCJubyBjZ3BcIik7XG4gICAgICAgIHRoaXMuX2xvZyA9IG5ldyBMb2dnZXIoXCJjZ3BfdGV4dHVyZVwiKTtcbiAgICAgICAgdGhpcy5fY2dwID0gX2NncDtcbiAgICAgICAgdGhpcy5pZCA9IENBQkxFUy51dWlkKCk7XG5cbiAgICAgICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgICAgICAgdGhpcy5uYW1lID0gb3B0aW9ucy5uYW1lIHx8IFwidW5rbm93blwiO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHNldCB0ZXh0dXJlIGRhdGEgZnJvbSBhbiBpbWFnZS9jYW52YXMgb2JqZWN0XG4gICAgICogQGZ1bmN0aW9uIGluaXRUZXh0dXJlXG4gICAgICogQG1lbWJlcm9mIFRleHR1cmVcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gaW1hZ2VcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gZmlsdGVyXG4gICAgICovXG4gICAgaW5pdFRleHR1cmUoaW1nLCBmaWx0ZXIpXG4gICAge1xuICAgICAgICB0aGlzLndpZHRoID0gaW1nLndpZHRoO1xuICAgICAgICB0aGlzLmhlaWdodCA9IGltZy5oZWlnaHQ7XG5cbiAgICAgICAgdGhpcy50ZXh0dXJlVHlwZSA9IFwicmdiYTh1bm9ybVwiO1xuXG4gICAgICAgIGNvbnN0IHRleHR1cmVEZXNjcmlwdG9yID0ge1xuICAgICAgICAgICAgLy8gVW5saWtlIGluIFdlYkdMLCB0aGUgc2l6ZSBvZiBvdXIgdGV4dHVyZSBtdXN0IGJlIHNldCBhdCB0ZXh0dXJlIGNyZWF0aW9uIHRpbWUuXG4gICAgICAgICAgICAvLyBUaGlzIG1lYW5zIHdlIGhhdmUgdG8gd2FpdCB1bnRpbCB0aGUgaW1hZ2UgaXMgbG9hZGVkIHRvIGNyZWF0ZSB0aGUgdGV4dHVyZSwgc2luY2Ugd2Ugd29uJ3RcbiAgICAgICAgICAgIC8vIGtub3cgdGhlIHNpemUgdW50aWwgdGhlbi5cbiAgICAgICAgICAgIFwic2l6ZVwiOiB7IFwid2lkdGhcIjogaW1nLndpZHRoLCBcImhlaWdodFwiOiBpbWcuaGVpZ2h0IH0sXG4gICAgICAgICAgICBcImZvcm1hdFwiOiB0aGlzLnRleHR1cmVUeXBlLFxuICAgICAgICAgICAgXCJ1c2FnZVwiOiBHUFVUZXh0dXJlVXNhZ2UuVEVYVFVSRV9CSU5ESU5HIHwgR1BVVGV4dHVyZVVzYWdlLkNPUFlfRFNUXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHRleHR1cmUgPSB0aGlzLl9jZ3AuZGV2aWNlLmNyZWF0ZVRleHR1cmUodGV4dHVyZURlc2NyaXB0b3IpO1xuXG4gICAgICAgIHRoaXMuX2NncC5kZXZpY2UucXVldWUuY29weUV4dGVybmFsSW1hZ2VUb1RleHR1cmUoeyBcInNvdXJjZVwiOiBpbWcgfSwgeyBcInRleHR1cmVcIjogdGV4dHVyZSB9LCB0ZXh0dXJlRGVzY3JpcHRvci5zaXplKTtcblxuICAgICAgICByZXR1cm4gdGV4dHVyZTtcbiAgICB9XG5cbiAgICBnZXRJbmZvKClcbiAgICB7XG4gICAgICAgIGNvbnN0IHRleCA9IHRoaXM7XG4gICAgICAgIGNvbnN0IG9iaiA9IHt9O1xuXG4gICAgICAgIG9iai5uYW1lID0gdGV4Lm5hbWU7XG4gICAgICAgIG9iai5zaXplID0gdGV4LndpZHRoICsgXCIgeCBcIiArIHRleC5oZWlnaHQ7XG5cbiAgICAgICAgb2JqLnRleHR1cmVUeXBlID0gdGV4LnRleHR1cmVUeXBlO1xuXG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfVxufVxuXG5cbi8qKlxuICogQGZ1bmN0aW9uIGxvYWRcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJvZiBUZXh0dXJlXG4gKiBAZGVzY3JpcHRpb24gbG9hZCBhbiBpbWFnZSBmcm9tIGFuIHVybFxuICogQHBhcmFtIHtDb250ZXh0fSBjZ2xcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmxcbiAqIEBwYXJhbSB7RnVuY3Rpb259IG9uRmluaXNoZWRcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtUZXh0dXJlfVxuICovXG5UZXh0dXJlLmxvYWQgPSBmdW5jdGlvbiAoY2dwLCB1cmwsIG9uRmluaXNoZWQsIHNldHRpbmdzKVxue1xuICAgIGZldGNoKHVybCkudGhlbigocmVzcG9uc2UpID0+XG4gICAge1xuICAgICAgICByZXNwb25zZS5ibG9iKCkudGhlbigoYmxvYikgPT5cbiAgICAgICAge1xuICAgICAgICAgICAgY3JlYXRlSW1hZ2VCaXRtYXAoYmxvYikudGhlbigoaW1nQml0bWFwKSA9PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRleHR1cmUgPSBuZXcgVGV4dHVyZShjZ3AsIHsgXCJuYW1lXCI6IHVybCB9KTtcbiAgICAgICAgICAgICAgICB0ZXh0dXJlLmluaXRUZXh0dXJlKGltZ0JpdG1hcCk7XG4gICAgICAgICAgICAgICAgaWYgKG9uRmluaXNoZWQpb25GaW5pc2hlZCh0ZXh0dXJlKTtcbiAgICAgICAgICAgICAgICBlbHNlIGNvbnNvbGUubG9nKFwiVGV4dHVyZS5sb2FkIG5vIG9uRmluaXNoZWQgY2FsbGJhY2tcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/cgp/cgp_texture.js\n");

/***/ }),

/***/ "./src/core/cgp/cgp_uniform.js":
/*!*************************************!*\
  !*** ./src/core/cgp/cgp_uniform.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Uniform)\n/* harmony export */ });\n/* harmony import */ var _cg_cg_uniform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cg/cg_uniform */ \"./src/core/cg/cg_uniform.js\");\n\n\nclass Uniform extends _cg_cg_uniform__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n{\n    constructor(__shader, __type, __name, _value, _port2, _port3, _port4, _structUniformName, _structName, _propertyName)\n    {\n        super(__shader, __type, __name, _value, _port2, _port3, _port4, _structUniformName, _structName, _propertyName);\n        this._loc = -1;\n        this._cgl = __shader._cgl;\n    }\n\n\n    updateValueF() { }\n\n    setValueF(v)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n\n    updateValue2F() { }\n\n    setValue2F(v)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n\n    updateValue3F() { }\n\n    setValue3F(v)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n\n    updateValue4F() { }\n\n    setValue4F(v)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n\n    getSizeBytes()\n    {\n        if (this._type == \"f\") return 1 * 4;\n        if (this._type == \"i\") return 1 * 4;\n        if (this._type == \"2i\") return 2 * 4;\n        if (this._type == \"2f\") return 2 * 4;\n        if (this._type == \"3f\") return 3 * 4;\n        if (this._type == \"4f\") return 4 * 4;\n        if (this._type == \"m4\") return 4 * 4 * 4;\n\n        this._log.warn(\"unknown type getSizeBytes\");\n        // if (this._type == \"t\") return \"sampler2D\";\n        // if (this._type == \"tc\") return \"samplerCube\";\n        // if (this._type == \"b\") return \"bool\";\n\n        // if (t == \"3f[]\") return null; // ignore this for now...\n        // if (t == \"m4[]\") return null; // ignore this for now...\n        // if (t == \"f[]\") return null; // ignore this for now...\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ3AvY2dwX3VuaWZvcm0uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NncC9jZ3BfdW5pZm9ybS5qcz83ZTdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDZ1VuaWZvcm0gZnJvbSBcIi4uL2NnL2NnX3VuaWZvcm1cIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVW5pZm9ybSBleHRlbmRzIENnVW5pZm9ybVxue1xuICAgIGNvbnN0cnVjdG9yKF9fc2hhZGVyLCBfX3R5cGUsIF9fbmFtZSwgX3ZhbHVlLCBfcG9ydDIsIF9wb3J0MywgX3BvcnQ0LCBfc3RydWN0VW5pZm9ybU5hbWUsIF9zdHJ1Y3ROYW1lLCBfcHJvcGVydHlOYW1lKVxuICAgIHtcbiAgICAgICAgc3VwZXIoX19zaGFkZXIsIF9fdHlwZSwgX19uYW1lLCBfdmFsdWUsIF9wb3J0MiwgX3BvcnQzLCBfcG9ydDQsIF9zdHJ1Y3RVbmlmb3JtTmFtZSwgX3N0cnVjdE5hbWUsIF9wcm9wZXJ0eU5hbWUpO1xuICAgICAgICB0aGlzLl9sb2MgPSAtMTtcbiAgICAgICAgdGhpcy5fY2dsID0gX19zaGFkZXIuX2NnbDtcbiAgICB9XG5cblxuICAgIHVwZGF0ZVZhbHVlRigpIHsgfVxuXG4gICAgc2V0VmFsdWVGKHYpXG4gICAge1xuICAgICAgICB0aGlzLm5lZWRzVXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fdmFsdWUgPSB2O1xuICAgIH1cblxuICAgIHVwZGF0ZVZhbHVlMkYoKSB7IH1cblxuICAgIHNldFZhbHVlMkYodilcbiAgICB7XG4gICAgICAgIHRoaXMubmVlZHNVcGRhdGUgPSB0cnVlO1xuICAgICAgICB0aGlzLl92YWx1ZSA9IHY7XG4gICAgfVxuXG4gICAgdXBkYXRlVmFsdWUzRigpIHsgfVxuXG4gICAgc2V0VmFsdWUzRih2KVxuICAgIHtcbiAgICAgICAgdGhpcy5uZWVkc1VwZGF0ZSA9IHRydWU7XG4gICAgICAgIHRoaXMuX3ZhbHVlID0gdjtcbiAgICB9XG5cbiAgICB1cGRhdGVWYWx1ZTRGKCkgeyB9XG5cbiAgICBzZXRWYWx1ZTRGKHYpXG4gICAge1xuICAgICAgICB0aGlzLm5lZWRzVXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fdmFsdWUgPSB2O1xuICAgIH1cblxuICAgIGdldFNpemVCeXRlcygpXG4gICAge1xuICAgICAgICBpZiAodGhpcy5fdHlwZSA9PSBcImZcIikgcmV0dXJuIDEgKiA0O1xuICAgICAgICBpZiAodGhpcy5fdHlwZSA9PSBcImlcIikgcmV0dXJuIDEgKiA0O1xuICAgICAgICBpZiAodGhpcy5fdHlwZSA9PSBcIjJpXCIpIHJldHVybiAyICogNDtcbiAgICAgICAgaWYgKHRoaXMuX3R5cGUgPT0gXCIyZlwiKSByZXR1cm4gMiAqIDQ7XG4gICAgICAgIGlmICh0aGlzLl90eXBlID09IFwiM2ZcIikgcmV0dXJuIDMgKiA0O1xuICAgICAgICBpZiAodGhpcy5fdHlwZSA9PSBcIjRmXCIpIHJldHVybiA0ICogNDtcbiAgICAgICAgaWYgKHRoaXMuX3R5cGUgPT0gXCJtNFwiKSByZXR1cm4gNCAqIDQgKiA0O1xuXG4gICAgICAgIHRoaXMuX2xvZy53YXJuKFwidW5rbm93biB0eXBlIGdldFNpemVCeXRlc1wiKTtcbiAgICAgICAgLy8gaWYgKHRoaXMuX3R5cGUgPT0gXCJ0XCIpIHJldHVybiBcInNhbXBsZXIyRFwiO1xuICAgICAgICAvLyBpZiAodGhpcy5fdHlwZSA9PSBcInRjXCIpIHJldHVybiBcInNhbXBsZXJDdWJlXCI7XG4gICAgICAgIC8vIGlmICh0aGlzLl90eXBlID09IFwiYlwiKSByZXR1cm4gXCJib29sXCI7XG5cbiAgICAgICAgLy8gaWYgKHQgPT0gXCIzZltdXCIpIHJldHVybiBudWxsOyAvLyBpZ25vcmUgdGhpcyBmb3Igbm93Li4uXG4gICAgICAgIC8vIGlmICh0ID09IFwibTRbXVwiKSByZXR1cm4gbnVsbDsgLy8gaWdub3JlIHRoaXMgZm9yIG5vdy4uLlxuICAgICAgICAvLyBpZiAodCA9PSBcImZbXVwiKSByZXR1cm4gbnVsbDsgLy8gaWdub3JlIHRoaXMgZm9yIG5vdy4uLlxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/cgp/cgp_uniform.js\n");

/***/ }),

/***/ "./src/core/cgp/cgp_uniformbuffer.js":
/*!*******************************************!*\
  !*** ./src/core/cgp/cgp_uniformbuffer.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UniformBuffer)\n/* harmony export */ });\nclass UniformBuffer\n{\n    constructor(shader, shaderType)\n    {\n        this._shaderType = shaderType; // frag, vert...\n        this._shader = shader;\n        this._cgp = shader._cgp;\n\n        this._gpuBuffer = null;\n        this._values = null;\n\n        this._sizeBytes = 0;\n        this.update();\n    }\n\n    update()\n    {\n        this._sizeBytes = 0;\n\n        for (let i = 0; i < this._shader.uniforms.length; i++)\n        {\n            const uni = this._shader.uniforms[i];\n\n            if (this._shaderType == uni.shaderType)\n                this._sizeBytes += uni.getSizeBytes();\n        }\n\n        this._gpuBuffer = this._cgp.device.createBuffer(\n            {\n                \"size\": this._sizeBytes,\n                \"usage\": GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n            });\n\n\n        this._values = new Float32Array(this._sizeBytes / 4);\n        this.updateUniformValues();\n    }\n\n    updateUniformValues()\n    {\n        let count = 0;\n        for (let i = 0; i < this._shader.uniforms.length; i++)\n        {\n            const uni = this._shader.uniforms[i];\n            if (uni.shaderType == this._shaderType)\n            {\n                if (uni.getSizeBytes() / 4 > 1)\n                {\n                    for (let j = 0; j < uni.getValue().length; j++)\n                    {\n                        this._values[count] = uni.getValue()[j];\n                        count++;\n                    }\n                }\n                else\n                {\n                    this._values[count] = uni.getValue();\n                    count++;\n                }\n            }\n        }\n\n\n        this._cgp.device.queue.writeBuffer(\n            this._gpuBuffer,\n            0,\n            this._values.buffer,\n            this._values.byteOffset,\n            this._values.byteLength\n        );\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ3AvY2dwX3VuaWZvcm1idWZmZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NncC9jZ3BfdW5pZm9ybWJ1ZmZlci5qcz9hYzU1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVuaWZvcm1CdWZmZXJcbntcbiAgICBjb25zdHJ1Y3RvcihzaGFkZXIsIHNoYWRlclR5cGUpXG4gICAge1xuICAgICAgICB0aGlzLl9zaGFkZXJUeXBlID0gc2hhZGVyVHlwZTsgLy8gZnJhZywgdmVydC4uLlxuICAgICAgICB0aGlzLl9zaGFkZXIgPSBzaGFkZXI7XG4gICAgICAgIHRoaXMuX2NncCA9IHNoYWRlci5fY2dwO1xuXG4gICAgICAgIHRoaXMuX2dwdUJ1ZmZlciA9IG51bGw7XG4gICAgICAgIHRoaXMuX3ZhbHVlcyA9IG51bGw7XG5cbiAgICAgICAgdGhpcy5fc2l6ZUJ5dGVzID0gMDtcbiAgICAgICAgdGhpcy51cGRhdGUoKTtcbiAgICB9XG5cbiAgICB1cGRhdGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fc2l6ZUJ5dGVzID0gMDtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX3NoYWRlci51bmlmb3Jtcy5sZW5ndGg7IGkrKylcbiAgICAgICAge1xuICAgICAgICAgICAgY29uc3QgdW5pID0gdGhpcy5fc2hhZGVyLnVuaWZvcm1zW2ldO1xuXG4gICAgICAgICAgICBpZiAodGhpcy5fc2hhZGVyVHlwZSA9PSB1bmkuc2hhZGVyVHlwZSlcbiAgICAgICAgICAgICAgICB0aGlzLl9zaXplQnl0ZXMgKz0gdW5pLmdldFNpemVCeXRlcygpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fZ3B1QnVmZmVyID0gdGhpcy5fY2dwLmRldmljZS5jcmVhdGVCdWZmZXIoXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCJzaXplXCI6IHRoaXMuX3NpemVCeXRlcyxcbiAgICAgICAgICAgICAgICBcInVzYWdlXCI6IEdQVUJ1ZmZlclVzYWdlLlVOSUZPUk0gfCBHUFVCdWZmZXJVc2FnZS5DT1BZX0RTVCxcbiAgICAgICAgICAgIH0pO1xuXG5cbiAgICAgICAgdGhpcy5fdmFsdWVzID0gbmV3IEZsb2F0MzJBcnJheSh0aGlzLl9zaXplQnl0ZXMgLyA0KTtcbiAgICAgICAgdGhpcy51cGRhdGVVbmlmb3JtVmFsdWVzKCk7XG4gICAgfVxuXG4gICAgdXBkYXRlVW5pZm9ybVZhbHVlcygpXG4gICAge1xuICAgICAgICBsZXQgY291bnQgPSAwO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX3NoYWRlci51bmlmb3Jtcy5sZW5ndGg7IGkrKylcbiAgICAgICAge1xuICAgICAgICAgICAgY29uc3QgdW5pID0gdGhpcy5fc2hhZGVyLnVuaWZvcm1zW2ldO1xuICAgICAgICAgICAgaWYgKHVuaS5zaGFkZXJUeXBlID09IHRoaXMuX3NoYWRlclR5cGUpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYgKHVuaS5nZXRTaXplQnl0ZXMoKSAvIDQgPiAxKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB1bmkuZ2V0VmFsdWUoKS5sZW5ndGg7IGorKylcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fdmFsdWVzW2NvdW50XSA9IHVuaS5nZXRWYWx1ZSgpW2pdO1xuICAgICAgICAgICAgICAgICAgICAgICAgY291bnQrKztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl92YWx1ZXNbY291bnRdID0gdW5pLmdldFZhbHVlKCk7XG4gICAgICAgICAgICAgICAgICAgIGNvdW50Kys7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cblxuICAgICAgICB0aGlzLl9jZ3AuZGV2aWNlLnF1ZXVlLndyaXRlQnVmZmVyKFxuICAgICAgICAgICAgdGhpcy5fZ3B1QnVmZmVyLFxuICAgICAgICAgICAgMCxcbiAgICAgICAgICAgIHRoaXMuX3ZhbHVlcy5idWZmZXIsXG4gICAgICAgICAgICB0aGlzLl92YWx1ZXMuYnl0ZU9mZnNldCxcbiAgICAgICAgICAgIHRoaXMuX3ZhbHVlcy5ieXRlTGVuZ3RoXG4gICAgICAgICk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/cgp/cgp_uniformbuffer.js\n");

/***/ }),

/***/ "./src/core/cgp/index.js":
/*!*******************************!*\
  !*** ./src/core/cgp/index.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CGP\": () => (/* binding */ CGP)\n/* harmony export */ });\n/* harmony import */ var _cgp_state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cgp_state */ \"./src/core/cgp/cgp_state.js\");\n/* harmony import */ var _cgp_shader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cgp_shader */ \"./src/core/cgp/cgp_shader.js\");\n/* harmony import */ var _cgp_mesh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cgp_mesh */ \"./src/core/cgp/cgp_mesh.js\");\n/* harmony import */ var _cgp_pipeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cgp_pipeline */ \"./src/core/cgp/cgp_pipeline.js\");\n/* harmony import */ var _cgp_texture__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cgp_texture */ \"./src/core/cgp/cgp_texture.js\");\n\n\n\n\n\n\nconst CGP = {\n    \"Context\": _cgp_state__WEBPACK_IMPORTED_MODULE_0__.WebGpuContext,\n    \"Shader\": _cgp_shader__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    \"Mesh\": _cgp_mesh__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    \"Pipeline\": _cgp_pipeline__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    \"Texture\": _cgp_texture__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n};\n\nwindow.CGP = CGP;\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jZ3AvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ0FCTEVTLy4vc3JjL2NvcmUvY2dwL2luZGV4LmpzPzM2NjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2ViR3B1Q29udGV4dCB9IGZyb20gXCIuL2NncF9zdGF0ZVwiO1xuaW1wb3J0IFNoYWRlciBmcm9tIFwiLi9jZ3Bfc2hhZGVyXCI7XG5pbXBvcnQgTWVzaCBmcm9tIFwiLi9jZ3BfbWVzaFwiO1xuaW1wb3J0IFBpcGVsaW5lIGZyb20gXCIuL2NncF9waXBlbGluZVwiO1xuaW1wb3J0IFRleHR1cmUgZnJvbSBcIi4vY2dwX3RleHR1cmVcIjtcblxuY29uc3QgQ0dQID0ge1xuICAgIFwiQ29udGV4dFwiOiBXZWJHcHVDb250ZXh0LFxuICAgIFwiU2hhZGVyXCI6IFNoYWRlcixcbiAgICBcIk1lc2hcIjogTWVzaCxcbiAgICBcIlBpcGVsaW5lXCI6IFBpcGVsaW5lLFxuICAgIFwiVGV4dHVyZVwiOiBUZXh0dXJlLFxufTtcblxud2luZG93LkNHUCA9IENHUDtcblxuXG5leHBvcnQgeyBDR1AgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/cgp/index.js\n");

/***/ }),

/***/ "./src/core/constants.js":
/*!*******************************!*\
  !*** ./src/core/constants.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONSTANTS\": () => (/* binding */ CONSTANTS)\n/* harmony export */ });\nconst CONSTANTS = {\n    \"ANIM\": {\n        \"EASINGS\": [\n            \"linear\",\n            \"absolute\",\n            \"smoothstep\",\n            \"smootherstep\",\n            \"Cubic In\",\n            \"Cubic Out\",\n            \"Cubic In Out\",\n            \"Expo In\",\n            \"Expo Out\",\n            \"Expo In Out\",\n            \"Sin In\",\n            \"Sin Out\",\n            \"Sin In Out\",\n            \"Quart In\",\n            \"Quart Out\",\n            \"Quart In Out\",\n            \"Quint In\",\n            \"Quint Out\",\n            \"Quint In Out\",\n            \"Back In\",\n            \"Back Out\",\n            \"Back In Out\",\n            \"Elastic In\",\n            \"Elastic Out\",\n            \"Bounce In\",\n            \"Bounce Out\",\n        ],\n        \"EASING_LINEAR\": 0,\n        \"EASING_ABSOLUTE\": 1,\n        \"EASING_SMOOTHSTEP\": 2,\n        \"EASING_SMOOTHERSTEP\": 3,\n        \"EASING_CUBICSPLINE\": 4,\n\n        \"EASING_CUBIC_IN\": 5,\n        \"EASING_CUBIC_OUT\": 6,\n        \"EASING_CUBIC_INOUT\": 7,\n\n        \"EASING_EXPO_IN\": 8,\n        \"EASING_EXPO_OUT\": 9,\n        \"EASING_EXPO_INOUT\": 10,\n\n        \"EASING_SIN_IN\": 11,\n        \"EASING_SIN_OUT\": 12,\n        \"EASING_SIN_INOUT\": 13,\n\n        \"EASING_BACK_IN\": 14,\n        \"EASING_BACK_OUT\": 15,\n        \"EASING_BACK_INOUT\": 16,\n\n        \"EASING_ELASTIC_IN\": 17,\n        \"EASING_ELASTIC_OUT\": 18,\n\n        \"EASING_BOUNCE_IN\": 19,\n        \"EASING_BOUNCE_OUT\": 21,\n\n        \"EASING_QUART_IN\": 22,\n        \"EASING_QUART_OUT\": 23,\n        \"EASING_QUART_INOUT\": 24,\n\n        \"EASING_QUINT_IN\": 25,\n        \"EASING_QUINT_OUT\": 26,\n        \"EASING_QUINT_INOUT\": 27,\n    },\n\n    \"OP\": {\n        \"OP_PORT_TYPE_VALUE\": 0,\n        \"OP_PORT_TYPE_FUNCTION\": 1,\n        \"OP_PORT_TYPE_TRIGGER\": 1,\n        \"OP_PORT_TYPE_OBJECT\": 2,\n        \"OP_PORT_TYPE_TEXTURE\": 2,\n        \"OP_PORT_TYPE_ARRAY\": 3,\n        \"OP_PORT_TYPE_DYNAMIC\": 4,\n        \"OP_PORT_TYPE_STRING\": 5,\n\n        \"OP_VERSION_PREFIX\": \"_v\",\n    },\n\n    \"PORT\": {\n        \"PORT_DIR_IN\": 0,\n        \"PORT_DIR_OUT\": 1,\n    },\n\n    \"PACO\": {\n        \"PACO_CLEAR\": 0,\n        \"PACO_VALUECHANGE\": 1,\n        \"PACO_OP_DELETE\": 2,\n        \"PACO_UNLINK\": 3,\n        \"PACO_LINK\": 4,\n        \"PACO_LOAD\": 5,\n        \"PACO_OP_CREATE\": 6,\n        \"PACO_OP_ENABLE\": 7,\n        \"PACO_OP_DISABLE\": 8,\n        \"PACO_UIATTRIBS\": 9,\n        \"PACO_VARIABLES\": 10,\n        \"PACO_TRIGGERS\": 11,\n        \"PACO_PORT_SETVARIABLE\": 12,\n        \"PACO_PORT_SETANIMATED\": 13,\n        \"PACO_PORT_ANIM_UPDATED\": 14,\n        \"PACO_DESERIALIZE\": 15\n\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NvbnN0YW50cy5qcz82MTE5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBDT05TVEFOVFMgPSB7XG4gICAgXCJBTklNXCI6IHtcbiAgICAgICAgXCJFQVNJTkdTXCI6IFtcbiAgICAgICAgICAgIFwibGluZWFyXCIsXG4gICAgICAgICAgICBcImFic29sdXRlXCIsXG4gICAgICAgICAgICBcInNtb290aHN0ZXBcIixcbiAgICAgICAgICAgIFwic21vb3RoZXJzdGVwXCIsXG4gICAgICAgICAgICBcIkN1YmljIEluXCIsXG4gICAgICAgICAgICBcIkN1YmljIE91dFwiLFxuICAgICAgICAgICAgXCJDdWJpYyBJbiBPdXRcIixcbiAgICAgICAgICAgIFwiRXhwbyBJblwiLFxuICAgICAgICAgICAgXCJFeHBvIE91dFwiLFxuICAgICAgICAgICAgXCJFeHBvIEluIE91dFwiLFxuICAgICAgICAgICAgXCJTaW4gSW5cIixcbiAgICAgICAgICAgIFwiU2luIE91dFwiLFxuICAgICAgICAgICAgXCJTaW4gSW4gT3V0XCIsXG4gICAgICAgICAgICBcIlF1YXJ0IEluXCIsXG4gICAgICAgICAgICBcIlF1YXJ0IE91dFwiLFxuICAgICAgICAgICAgXCJRdWFydCBJbiBPdXRcIixcbiAgICAgICAgICAgIFwiUXVpbnQgSW5cIixcbiAgICAgICAgICAgIFwiUXVpbnQgT3V0XCIsXG4gICAgICAgICAgICBcIlF1aW50IEluIE91dFwiLFxuICAgICAgICAgICAgXCJCYWNrIEluXCIsXG4gICAgICAgICAgICBcIkJhY2sgT3V0XCIsXG4gICAgICAgICAgICBcIkJhY2sgSW4gT3V0XCIsXG4gICAgICAgICAgICBcIkVsYXN0aWMgSW5cIixcbiAgICAgICAgICAgIFwiRWxhc3RpYyBPdXRcIixcbiAgICAgICAgICAgIFwiQm91bmNlIEluXCIsXG4gICAgICAgICAgICBcIkJvdW5jZSBPdXRcIixcbiAgICAgICAgXSxcbiAgICAgICAgXCJFQVNJTkdfTElORUFSXCI6IDAsXG4gICAgICAgIFwiRUFTSU5HX0FCU09MVVRFXCI6IDEsXG4gICAgICAgIFwiRUFTSU5HX1NNT09USFNURVBcIjogMixcbiAgICAgICAgXCJFQVNJTkdfU01PT1RIRVJTVEVQXCI6IDMsXG4gICAgICAgIFwiRUFTSU5HX0NVQklDU1BMSU5FXCI6IDQsXG5cbiAgICAgICAgXCJFQVNJTkdfQ1VCSUNfSU5cIjogNSxcbiAgICAgICAgXCJFQVNJTkdfQ1VCSUNfT1VUXCI6IDYsXG4gICAgICAgIFwiRUFTSU5HX0NVQklDX0lOT1VUXCI6IDcsXG5cbiAgICAgICAgXCJFQVNJTkdfRVhQT19JTlwiOiA4LFxuICAgICAgICBcIkVBU0lOR19FWFBPX09VVFwiOiA5LFxuICAgICAgICBcIkVBU0lOR19FWFBPX0lOT1VUXCI6IDEwLFxuXG4gICAgICAgIFwiRUFTSU5HX1NJTl9JTlwiOiAxMSxcbiAgICAgICAgXCJFQVNJTkdfU0lOX09VVFwiOiAxMixcbiAgICAgICAgXCJFQVNJTkdfU0lOX0lOT1VUXCI6IDEzLFxuXG4gICAgICAgIFwiRUFTSU5HX0JBQ0tfSU5cIjogMTQsXG4gICAgICAgIFwiRUFTSU5HX0JBQ0tfT1VUXCI6IDE1LFxuICAgICAgICBcIkVBU0lOR19CQUNLX0lOT1VUXCI6IDE2LFxuXG4gICAgICAgIFwiRUFTSU5HX0VMQVNUSUNfSU5cIjogMTcsXG4gICAgICAgIFwiRUFTSU5HX0VMQVNUSUNfT1VUXCI6IDE4LFxuXG4gICAgICAgIFwiRUFTSU5HX0JPVU5DRV9JTlwiOiAxOSxcbiAgICAgICAgXCJFQVNJTkdfQk9VTkNFX09VVFwiOiAyMSxcblxuICAgICAgICBcIkVBU0lOR19RVUFSVF9JTlwiOiAyMixcbiAgICAgICAgXCJFQVNJTkdfUVVBUlRfT1VUXCI6IDIzLFxuICAgICAgICBcIkVBU0lOR19RVUFSVF9JTk9VVFwiOiAyNCxcblxuICAgICAgICBcIkVBU0lOR19RVUlOVF9JTlwiOiAyNSxcbiAgICAgICAgXCJFQVNJTkdfUVVJTlRfT1VUXCI6IDI2LFxuICAgICAgICBcIkVBU0lOR19RVUlOVF9JTk9VVFwiOiAyNyxcbiAgICB9LFxuXG4gICAgXCJPUFwiOiB7XG4gICAgICAgIFwiT1BfUE9SVF9UWVBFX1ZBTFVFXCI6IDAsXG4gICAgICAgIFwiT1BfUE9SVF9UWVBFX0ZVTkNUSU9OXCI6IDEsXG4gICAgICAgIFwiT1BfUE9SVF9UWVBFX1RSSUdHRVJcIjogMSxcbiAgICAgICAgXCJPUF9QT1JUX1RZUEVfT0JKRUNUXCI6IDIsXG4gICAgICAgIFwiT1BfUE9SVF9UWVBFX1RFWFRVUkVcIjogMixcbiAgICAgICAgXCJPUF9QT1JUX1RZUEVfQVJSQVlcIjogMyxcbiAgICAgICAgXCJPUF9QT1JUX1RZUEVfRFlOQU1JQ1wiOiA0LFxuICAgICAgICBcIk9QX1BPUlRfVFlQRV9TVFJJTkdcIjogNSxcblxuICAgICAgICBcIk9QX1ZFUlNJT05fUFJFRklYXCI6IFwiX3ZcIixcbiAgICB9LFxuXG4gICAgXCJQT1JUXCI6IHtcbiAgICAgICAgXCJQT1JUX0RJUl9JTlwiOiAwLFxuICAgICAgICBcIlBPUlRfRElSX09VVFwiOiAxLFxuICAgIH0sXG5cbiAgICBcIlBBQ09cIjoge1xuICAgICAgICBcIlBBQ09fQ0xFQVJcIjogMCxcbiAgICAgICAgXCJQQUNPX1ZBTFVFQ0hBTkdFXCI6IDEsXG4gICAgICAgIFwiUEFDT19PUF9ERUxFVEVcIjogMixcbiAgICAgICAgXCJQQUNPX1VOTElOS1wiOiAzLFxuICAgICAgICBcIlBBQ09fTElOS1wiOiA0LFxuICAgICAgICBcIlBBQ09fTE9BRFwiOiA1LFxuICAgICAgICBcIlBBQ09fT1BfQ1JFQVRFXCI6IDYsXG4gICAgICAgIFwiUEFDT19PUF9FTkFCTEVcIjogNyxcbiAgICAgICAgXCJQQUNPX09QX0RJU0FCTEVcIjogOCxcbiAgICAgICAgXCJQQUNPX1VJQVRUUklCU1wiOiA5LFxuICAgICAgICBcIlBBQ09fVkFSSUFCTEVTXCI6IDEwLFxuICAgICAgICBcIlBBQ09fVFJJR0dFUlNcIjogMTEsXG4gICAgICAgIFwiUEFDT19QT1JUX1NFVFZBUklBQkxFXCI6IDEyLFxuICAgICAgICBcIlBBQ09fUE9SVF9TRVRBTklNQVRFRFwiOiAxMyxcbiAgICAgICAgXCJQQUNPX1BPUlRfQU5JTV9VUERBVEVEXCI6IDE0LFxuICAgICAgICBcIlBBQ09fREVTRVJJQUxJWkVcIjogMTVcblxuICAgIH0sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/constants.js\n");

/***/ }),

/***/ "./src/core/core_link.js":
/*!*******************************!*\
  !*** ./src/core/core_link.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Link\": () => (/* binding */ Link)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/core/constants.js\");\n/* harmony import */ var _eventtarget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eventtarget */ \"./src/core/eventtarget.js\");\n\n\n\n/**\n * @external CABLES\n * @namespace Link\n * @param {Object} patch The patch object\n * @description a link is a connection between two ops/ports -> one input and one output port\n * @hideconstructor\n * @class\n */\nconst Link = function (scene)\n{\n    _eventtarget__WEBPACK_IMPORTED_MODULE_1__.EventTarget.apply(this);\n\n    this.id = CABLES.simpleId();\n    this.portIn = null;\n    this.portOut = null;\n    this.scene = scene; // todo: make private and rename to patch\n    this.activityCounter = 0;\n    this.ignoreInSerialize = false;\n};\n\nLink.prototype.setValue = function (v)\n{\n    if (v === undefined) this._setValue();\n    else this.portIn.set(v);\n};\n\nLink.prototype.activity = function ()\n{\n    this.activityCounter++;\n    // if(Date.now()-this.lastTime>100)\n    // {\n    //     // this.lastTime=Date.now();\n    //     // this.changesPerSecond=this.changesCounter*10;\n    //     this.changesCounter=0;\n    // }\n};\n\nLink.prototype._setValue = function ()\n{\n    if (!this.portOut)\n    {\n        this.remove();\n        return;\n    }\n    const v = this.portOut.get();\n\n    if (v == v) // NaN is the only JavaScript value that is treated as unequal to itself\n    {\n        if (this.portIn.type != _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION) this.activity();\n\n        if (this.portIn.get() !== v)\n        {\n            this.portIn.set(v);\n        }\n        else\n        {\n            if (this.portIn.changeAlways) this.portIn.set(v);\n            if (this.portOut.forceRefChange) this.portIn.forceChange();\n        }\n    }\n};\n\n/**\n * @function getOtherPort\n * @memberof Link\n * @instance\n * @param {Port} port\n * @description returns the port of the link, which is not port\n */\nLink.prototype.getOtherPort = function (p)\n{\n    if (p == this.portIn) return this.portOut;\n    return this.portIn;\n};\n\n/**\n * @function remove\n * @memberof Link\n * @instance\n * @description unlink/remove this link from all ports\n */\nLink.prototype.remove = function ()\n{\n    if (this.portIn) this.portIn.removeLink(this);\n    if (this.portOut) this.portOut.removeLink(this);\n    if (this.scene)\n    {\n        this.scene.emitEvent(\"onUnLink\", this.portIn, this.portOut, this);\n    }\n\n    if (this.portIn && (this.portIn.type == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT || this.portIn.type == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_ARRAY))\n    {\n        this.portIn.set(null);\n        if (this.portIn.links.length > 0) this.portIn.set(this.portIn.links[0].getOtherPort(this.portIn).get());\n    }\n\n    if (this.portIn) this.portIn.op._checkLinksNeededToWork();\n    if (this.portOut) this.portOut.op._checkLinksNeededToWork();\n\n    this.portIn = null;\n    this.portOut = null;\n    this.scene = null;\n};\n\n/**\n * @function link\n * @memberof Link\n * @instance\n * @description link those two ports\n * @param {Port} port1\n * @param {Port} port2\n */\nLink.prototype.link = function (p1, p2)\n{\n    if (!Link.canLink(p1, p2))\n    {\n        console.warn(\"[core_link] cannot link ports!\", p1, p2);\n        return false;\n    }\n\n    if (p1.direction == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PORT.PORT_DIR_IN)\n    {\n        this.portIn = p1;\n        this.portOut = p2;\n    }\n    else\n    {\n        this.portIn = p2;\n        this.portOut = p1;\n    }\n\n    p1.addLink(this);\n    p2.addLink(this);\n\n    this.setValue();\n\n    if (p1.onLink) p1.onLink(this);\n    if (p2.onLink) p2.onLink(this);\n\n    p1.op._checkLinksNeededToWork();\n    p2.op._checkLinksNeededToWork();\n};\n\nLink.prototype.getSerialized = function ()\n{\n    const obj = {};\n\n    obj.portIn = this.portIn.getName();\n    obj.portOut = this.portOut.getName();\n    obj.objIn = this.portIn.op.id;\n    obj.objOut = this.portOut.op.id;\n\n    return obj;\n};\n\n// --------------------------------------------\n\n/**\n * @function canLinkText\n * @memberof Link\n * @instance\n * @description return a text message with human readable reason if ports can not be linked, or can be\n * @param {Port} port1\n * @param {Port} port2\n */\nLink.canLinkText = function (p1, p2)\n{\n    if (p1.direction == p2.direction)\n    {\n        let txt = \"(out)\";\n        if (p2.direction == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PORT.PORT_DIR_IN) txt = \"(in)\";\n        return \"can not link: same direction \" + txt;\n    }\n    if (p1.op == p2.op) return \"can not link: same op\";\n    if (p1.type != _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC && p2.type != _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC)\n    {\n        if (p1.type != p2.type) return \"can not link: different type\";\n    }\n\n    if (CABLES.UI && p1.type == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT && p2.type == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT)\n    {\n        if (p1.uiAttribs.objType && p2.uiAttribs.objType)\n            if (p1.uiAttribs.objType != p2.uiAttribs.objType)\n                return \"incompatible objects\";\n    }\n\n\n    if (!p1) return \"can not link: port 1 invalid\";\n    if (!p2) return \"can not link: port 2 invalid\";\n\n    if (p1.direction == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PORT.PORT_DIR_IN && p1.isAnimated()) return \"can not link: is animated\";\n    if (p2.direction == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PORT.PORT_DIR_IN && p2.isAnimated()) return \"can not link: is animated\";\n\n    // if(p1.direction==CABLES.CONSTANTS.PORT.PORT_DIR_IN && p1.links.length>0)return 'input port already busy';\n    // if(p2.direction==CABLES.CONSTANTS.PORT.PORT_DIR_IN && p2.links.length>0)return 'input port already busy';\n    if (p1.isLinkedTo(p2)) return \"ports already linked\";\n\n    if ((p1.canLink && !p1.canLink(p2)) || (p2.canLink && !p2.canLink(p1))) return \"Incompatible\";\n\n    return \"can link\";\n};\n\n/**\n * @function canLink\n * @memberof Link\n * @instance\n * @description return true if ports can be linked\n * @param {Port} port1\n * @param {Port} port2\n * @returns {Boolean}\n */\nLink.canLink = function (p1, p2)\n{\n    if (!p1) return false;\n    if (!p2) return false;\n    if (p1.direction == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PORT.PORT_DIR_IN && p1.isAnimated()) return false;\n    if (p2.direction == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PORT.PORT_DIR_IN && p2.isAnimated()) return false;\n\n    if (p1.isHidden() || p2.isHidden()) return false;\n\n    if (p1.isLinkedTo(p2)) return false;\n\n    if (p1.direction == p2.direction) return false;\n\n    if (CABLES.UI && p1.type == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT && p2.type == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT)\n    {\n        if (p1.uiAttribs.objType && p2.uiAttribs.objType)\n        {\n            if (p1.uiAttribs.objType.indexOf(\"sg_\") == 0 && p2.uiAttribs.objType.indexOf(\"sg_\") == 0) return true;\n            if (p1.uiAttribs.objType != p2.uiAttribs.objType)\n                return false;\n        }\n    }\n\n    if (p1.type != p2.type && (p1.type != _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC && p2.type != _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC)) return false;\n    if (p1.type == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC || p2.type == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC) return true;\n\n    if (p1.op == p2.op) return false;\n\n    if (p1.canLink && !p1.canLink(p2)) return false;\n    if (p2.canLink && !p2.canLink(p1)) return false;\n\n    return true;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/core_link.js\n");

/***/ }),

/***/ "./src/core/core_logger.js":
/*!*********************************!*\
  !*** ./src/core/core_logger.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Logger)\n/* harmony export */ });\n/* eslint-disable no-console */\n\nclass Logger\n{\n    constructor(initiator)\n    {\n        this._logs = [];\n        this.initiator = initiator;\n    }\n\n    stack(t)\n    {\n        console.info(\"[\" + this.initiator + \"] \", t);\n        console.log((new Error()).stack);\n        // if (window.gui) window.gui.emitEvent(\"coreLogEvent\", this.initiator, \"error\", t);\n    }\n\n    groupCollapsed(t)\n    {\n        console.groupCollapsed(\"[\" + this.initiator + \"] \" + t);\n    }\n\n    table(t)\n    {\n        console.table(t);\n    }\n\n    groupEnd()\n    {\n        console.groupEnd();\n    }\n\n    error(args)\n    {\n        console.error(\"[\" + this.initiator + \"]\", ...arguments);\n        if (window.gui) window.gui.emitEvent(\"coreLogEvent\", this.initiator, \"error\", arguments);\n    }\n\n    info(args)\n    {\n        console.error(\"[\" + this.initiator + \"]\", ...arguments);\n        if (window.gui) window.gui.emitEvent(\"coreLogEvent\", this.initiator, \"info\", arguments);\n    }\n\n    warn(args)\n    {\n        console.warn(\"[\" + this.initiator + \"]\", ...arguments);\n        if (window.gui) window.gui.emitEvent(\"coreLogEvent\", this.initiator, \"warn\", arguments);\n    }\n\n    verbose()\n    {\n        if ((CABLES.UI && CABLES.UI.logFilter.shouldPrint(this.initiator, ...arguments)) || !CABLES.logSilent)\n            console.log(\"[\" + this.initiator + \"]\", ...arguments);\n        if (window.gui) window.gui.emitEvent(\"coreLogEvent\", this.initiator, \"verbose\", arguments);\n    }\n\n    log(args)\n    {\n        if ((CABLES.UI && CABLES.UI.logFilter.shouldPrint(this.initiator, ...arguments)) || !CABLES.logSilent)\n            console.log(\"[\" + this.initiator + \"]\", ...arguments);\n        if (window.gui) window.gui.emitEvent(\"coreLogEvent\", this.initiator, \"log\", arguments);\n    }\n\n    userInteraction(text)\n    {\n        // this.log({ \"initiator\": \"userinteraction\", \"text\": text });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jb3JlX2xvZ2dlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ0FCTEVTLy4vc3JjL2NvcmUvY29yZV9sb2dnZXIuanM/YTYzZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvZ2dlclxue1xuICAgIGNvbnN0cnVjdG9yKGluaXRpYXRvcilcbiAgICB7XG4gICAgICAgIHRoaXMuX2xvZ3MgPSBbXTtcbiAgICAgICAgdGhpcy5pbml0aWF0b3IgPSBpbml0aWF0b3I7XG4gICAgfVxuXG4gICAgc3RhY2sodClcbiAgICB7XG4gICAgICAgIGNvbnNvbGUuaW5mbyhcIltcIiArIHRoaXMuaW5pdGlhdG9yICsgXCJdIFwiLCB0KTtcbiAgICAgICAgY29uc29sZS5sb2coKG5ldyBFcnJvcigpKS5zdGFjayk7XG4gICAgICAgIC8vIGlmICh3aW5kb3cuZ3VpKSB3aW5kb3cuZ3VpLmVtaXRFdmVudChcImNvcmVMb2dFdmVudFwiLCB0aGlzLmluaXRpYXRvciwgXCJlcnJvclwiLCB0KTtcbiAgICB9XG5cbiAgICBncm91cENvbGxhcHNlZCh0KVxuICAgIHtcbiAgICAgICAgY29uc29sZS5ncm91cENvbGxhcHNlZChcIltcIiArIHRoaXMuaW5pdGlhdG9yICsgXCJdIFwiICsgdCk7XG4gICAgfVxuXG4gICAgdGFibGUodClcbiAgICB7XG4gICAgICAgIGNvbnNvbGUudGFibGUodCk7XG4gICAgfVxuXG4gICAgZ3JvdXBFbmQoKVxuICAgIHtcbiAgICAgICAgY29uc29sZS5ncm91cEVuZCgpO1xuICAgIH1cblxuICAgIGVycm9yKGFyZ3MpXG4gICAge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiW1wiICsgdGhpcy5pbml0aWF0b3IgKyBcIl1cIiwgLi4uYXJndW1lbnRzKTtcbiAgICAgICAgaWYgKHdpbmRvdy5ndWkpIHdpbmRvdy5ndWkuZW1pdEV2ZW50KFwiY29yZUxvZ0V2ZW50XCIsIHRoaXMuaW5pdGlhdG9yLCBcImVycm9yXCIsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgaW5mbyhhcmdzKVxuICAgIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIltcIiArIHRoaXMuaW5pdGlhdG9yICsgXCJdXCIsIC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIGlmICh3aW5kb3cuZ3VpKSB3aW5kb3cuZ3VpLmVtaXRFdmVudChcImNvcmVMb2dFdmVudFwiLCB0aGlzLmluaXRpYXRvciwgXCJpbmZvXCIsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgd2FybihhcmdzKVxuICAgIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiW1wiICsgdGhpcy5pbml0aWF0b3IgKyBcIl1cIiwgLi4uYXJndW1lbnRzKTtcbiAgICAgICAgaWYgKHdpbmRvdy5ndWkpIHdpbmRvdy5ndWkuZW1pdEV2ZW50KFwiY29yZUxvZ0V2ZW50XCIsIHRoaXMuaW5pdGlhdG9yLCBcIndhcm5cIiwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICB2ZXJib3NlKClcbiAgICB7XG4gICAgICAgIGlmICgoQ0FCTEVTLlVJICYmIENBQkxFUy5VSS5sb2dGaWx0ZXIuc2hvdWxkUHJpbnQodGhpcy5pbml0aWF0b3IsIC4uLmFyZ3VtZW50cykpIHx8ICFDQUJMRVMubG9nU2lsZW50KVxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJbXCIgKyB0aGlzLmluaXRpYXRvciArIFwiXVwiLCAuLi5hcmd1bWVudHMpO1xuICAgICAgICBpZiAod2luZG93Lmd1aSkgd2luZG93Lmd1aS5lbWl0RXZlbnQoXCJjb3JlTG9nRXZlbnRcIiwgdGhpcy5pbml0aWF0b3IsIFwidmVyYm9zZVwiLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIGxvZyhhcmdzKVxuICAgIHtcbiAgICAgICAgaWYgKChDQUJMRVMuVUkgJiYgQ0FCTEVTLlVJLmxvZ0ZpbHRlci5zaG91bGRQcmludCh0aGlzLmluaXRpYXRvciwgLi4uYXJndW1lbnRzKSkgfHwgIUNBQkxFUy5sb2dTaWxlbnQpXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIltcIiArIHRoaXMuaW5pdGlhdG9yICsgXCJdXCIsIC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIGlmICh3aW5kb3cuZ3VpKSB3aW5kb3cuZ3VpLmVtaXRFdmVudChcImNvcmVMb2dFdmVudFwiLCB0aGlzLmluaXRpYXRvciwgXCJsb2dcIiwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICB1c2VySW50ZXJhY3Rpb24odGV4dClcbiAgICB7XG4gICAgICAgIC8vIHRoaXMubG9nKHsgXCJpbml0aWF0b3JcIjogXCJ1c2VyaW50ZXJhY3Rpb25cIiwgXCJ0ZXh0XCI6IHRleHQgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/core_logger.js\n");

/***/ }),

/***/ "./src/core/core_op.js":
/*!*****************************!*\
  !*** ./src/core/core_op.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Op\": () => (/* binding */ Op)\n/* harmony export */ });\n/* harmony import */ var _eventtarget__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventtarget */ \"./src/core/eventtarget.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/core/utils.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"./src/core/constants.js\");\n/* harmony import */ var _core_port__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core_port */ \"./src/core/core_port.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core_logger */ \"./src/core/core_logger.js\");\n/* harmony import */ var _core_port_switch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core_port_switch */ \"./src/core/core_port_switch.js\");\n/* harmony import */ var _core_port_select__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./core_port_select */ \"./src/core/core_port_select.js\");\n\n\n\n\n\n\n\n\n/**\n * op the class of all operators\n * @external CABLES\n * @namespace Op\n * @hideconstructor\n */\n\n/**\n * @type {Object}\n * @name attachments\n * @instance\n * @memberof Op\n * @description access file attachments as String values\n * @example\n * // set shader source to attached files (files are called shader.vert / shader.frag)\n * shader.setSource(attachments.shader_vert,attachments.shader_frag);\n */\n\nconst Ops = {};\n\nconst Op = function ()\n{\n    _eventtarget__WEBPACK_IMPORTED_MODULE_0__.EventTarget.apply(this);\n\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_4__[\"default\"](\"core_op\");\n    this.data = {}; // UNUSED, DEPRECATED, only left in for backwards compatibility with userops\n    this.storage = {}; // op-specific data to be included in export\n    this._objName = \"\";\n    this.portsOut = [];\n    this.portsIn = [];\n    this.portsInData = []; // original loaded patch data\n    this.opId = \"\"; // unique op id\n    this.uiAttribs = {};\n    this.enabled = true;\n    this.patch = arguments[0];\n    this.name = arguments[1];\n\n    this._linkTimeRules = {\n        \"needsLinkedToWork\": [],\n        \"needsParentOp\": null\n    };\n\n    this.shouldWork = {};\n    this.hasUiErrors = false;\n    this._uiErrors = {};\n    this._hasAnimPort = false;\n\n    if (arguments[1])\n    {\n        this._shortOpName = CABLES.getShortOpName(arguments[1]);\n        this.getTitle();\n    }\n\n    this.id = arguments[2] || (0,_utils__WEBPACK_IMPORTED_MODULE_1__.uuid)(); // instance id\n    this.onAddPort = null;\n    this.onCreate = null;\n    this.onResize = null;\n    this.onLoaded = null;\n    this.onDelete = null;\n    this.onUiAttrChange = null;\n    this.onError = null;\n\n    this._instances = null;\n\n    /**\n     * overwrite this to prerender shader and meshes / will be called by op `loadingStatus`\n     * @function preRender\n     * @memberof Op\n     * @instance\n     */\n    this.preRender = null;\n\n    /**\n     * overwrite this to initialize your op\n     * @function init\n     * @memberof Op\n     * @instance\n     */\n    this.init = null;\n\n    Object.defineProperty(this, \"objName\", { get() { return this._objName; } });\n    Object.defineProperty(this, \"shortName\", { get() { return this._shortOpName; } });\n};\n\n{\n    Op.prototype.clearUiAttrib = function (name)\n    {\n        const obj = {};\n        obj.name = null;\n        this.uiAttrib(obj);\n    };\n\n    Op.prototype.getTitle = function ()\n    {\n        if (!this.uiAttribs) return \"nouiattribs\" + this.name;\n\n        if ((this.uiAttribs.title === undefined || this.uiAttribs.title === \"\") && this.objName.indexOf(\"Ops.Ui.\") == -1)\n            this.uiAttribs.title = this._shortOpName;\n\n        if (this.uiAttribs.title === undefined) this.uiAttribs.title = this._shortOpName;\n\n        return this.uiAttribs.title;\n    };\n\n    Op.prototype.setTitle = function (name)\n    {\n        const doEmitEvent = this.name != name;\n        this.name = name;\n\n        if (this.uiAttribs.title != name) this.uiAttr({ \"title\": name });\n        if (doEmitEvent) this.emitEvent(\"onTitleChange\", name);\n    };\n\n    Op.prototype.setStorage = function (newAttribs)\n    {\n        if (!newAttribs) return;\n        this.storage = this.storage || {};\n\n        let changed = false;\n        for (const p in newAttribs)\n        {\n            if (this.storage[p] != newAttribs[p]) changed = true;\n            this.storage[p] = newAttribs[p];\n        }\n\n        if (changed) this.emitEvent(\"onStorageChange\", newAttribs);\n    };\n\n    Op.prototype.isSubPatchOp = function ()\n    {\n        if (this.storage) return (this.storage.subPatchVer || 0);\n    };\n\n\n    // Op.isSubPatchOpName = function (name)\n    // {\n    //     return name == \"Ops.Ui.Patch\" || name == \"Ops.Ui.SubPatch\";\n    // };\n\n\n    const _setUiAttrib = function (newAttribs)\n    {\n        if (!newAttribs) return;\n\n        if (newAttribs.error || newAttribs.warning || newAttribs.hint)\n        {\n            this._log.warn(\"old ui error/warning attribute in \" + this.name + \", use op.setUiError !\", newAttribs);\n        }\n\n        // if (newAttribs.warning) this._log.warn(\"old ui warning attribute in \" + this.name + \", use op.setUiError !\");\n        // if (newAttribs.hint) this._log.warn(\"old ui hint attribute in \" + this.name + \", use op.setUiError !\");\n\n        if (typeof newAttribs != \"object\") this._log.error(\"op.uiAttrib attribs are not of type object\");\n        if (!this.uiAttribs) this.uiAttribs = {};\n\n\n        let emitMove = false;\n        if (\n            CABLES.UI &&\n            newAttribs.hasOwnProperty(\"translate\") &&\n            (\n                !this.uiAttribs.translate ||\n                this.uiAttribs.translate.x != newAttribs.translate.x ||\n                this.uiAttribs.translate.y != newAttribs.translate.y\n            )) emitMove = true;\n\n\n        let changed = false;\n        for (const p in newAttribs)\n        {\n            if (this.uiAttribs[p] != newAttribs[p]) changed = true;\n            this.uiAttribs[p] = newAttribs[p];\n        }\n\n        if (this.uiAttribs.hasOwnProperty(\"selected\") && this.uiAttribs.selected == false) delete this.uiAttribs.selected;\n        if (newAttribs.title && newAttribs.title != this.name) this.setTitle(newAttribs.title);\n\n        if (changed)\n        {\n            this.emitEvent(\"onUiAttribsChange\", newAttribs);\n            this.patch.emitEvent(\"onUiAttribsChange\", this, newAttribs);\n        }\n\n        if (emitMove) this.emitEvent(\"move\");\n    };\n    /**\n     * setUiAttrib\n     * possible values:\n     * <pre>\n     * warning - warning message - showing up in op parameter panel\n     * error - error message - showing up in op parameter panel\n     * extendTitle - op title extension, e.g. [ + ]\n     * </pre>\n     * @function setUiAttrib\n     * @param {Object} newAttribs, e.g. {\"attrib\":value}\n     * @memberof Op\n     * @instance\n     * @example\n     * op.setUiAttrib({\"extendTitle\":str});\n     */\n    Op.prototype.setUiAttribs = Op.prototype.setUiAttrib = Op.prototype.uiAttr = _setUiAttrib;\n\n    Op.prototype.getName = function ()\n    {\n        if (this.uiAttribs.name) return this.uiAttribs.name;\n\n\n        // return this.objName.split(\".\");\n\n        return this.name;\n    };\n\n    Op.prototype.addOutPort = function (p)\n    {\n        p.direction = _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.PORT.PORT_DIR_OUT;\n        p._op = this;\n        this.portsOut.push(p);\n        this.emitEvent(\"onPortAdd\", p);\n        return p;\n    };\n\n    // Op.prototype.hasPort = function(name) {\n    //     for (var ipi = 0; ipi < this.portsIn.length; ipi++)\n    //         if (this.portsIn[i].getName() == name) return true;\n    //     return false;\n    // };\n\n    Op.prototype.hasDynamicPort = function ()\n    {\n        let i = 0;\n        for (i = 0; i < this.portsIn.length; i++)\n        {\n            if (this.portsIn[i].type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC) return true;\n            if (this.portsIn[i].getName() == \"dyn\") return true;\n        }\n        for (i = 0; i < this.portsOut.length; i++)\n        {\n            if (this.portsOut[i].type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC) return true;\n            if (this.portsOut[i].getName() == \"dyn\") return true;\n        }\n\n        return false;\n    };\n\n    Op.prototype.addInPort = function (p)\n    {\n        if (!(p instanceof _core_port__WEBPACK_IMPORTED_MODULE_3__.Port))\n            throw new Error(\"parameter is not a port!\");\n\n        p.direction = _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.PORT.PORT_DIR_IN;\n        p._op = this;\n\n        this.portsIn.push(p);\n        this.emitEvent(\"onPortAdd\", p);\n\n        return p;\n    };\n\n    /**\n     * create a trigger input port\n     * @function inTrigger\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     *\n     */\n    Op.prototype.inFunction = Op.prototype.inTrigger = function (name, v)\n    {\n        const p = this.addInPort(new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION));\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create multiple UI trigger buttons\n     * @function inTriggerButton\n     * @memberof Op\n     * @instance\n     * @param {String} name\n     * @param {Array} names\n     * @return {Port} created port\n     */\n    Op.prototype.inFunctionButton = Op.prototype.inTriggerButton = function (name, v)\n    {\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION, {\n                \"display\": \"button\"\n            })\n        );\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    Op.prototype.inFunctionButton = Op.prototype.inUiTriggerButtons = function (name, v)\n    {\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION, {\n                \"display\": \"buttons\"\n            })\n        );\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create a number value input port\n     * @function inFloat\n     * @memberof Op\n     * @instance\n     * @param {String} name\n     * @param {Number} value\n     * @return {Port} created port\n     */\n    Op.prototype.inValueFloat = Op.prototype.inValue = Op.prototype.inFloat = function (name, v)\n    {\n        const p = this.addInPort(new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE));\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a boolean input port, displayed as a checkbox\n     * @function inBool\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {Boolean} value\n     * @return {Port} created port\n     */\n    Op.prototype.inValueBool = Op.prototype.inBool = function (name, v)\n    {\n        // old\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"display\": \"bool\"\n            })\n        );\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = p.get();\n        }\n        return p;\n    };\n\n    /**\n     * create a String value input port\n     * @function inString\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {String} value default value\n     * @return {Port} created port\n     */\n    Op.prototype.inValueString = function (name, v)\n    {\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"type\": \"string\"\n            })\n        );\n        p.value = \"\";\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    // new string\n    Op.prototype.inString = function (name, v)\n    {\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_STRING, {\n                \"type\": \"string\"\n            })\n        );\n        v = v || \"\";\n        p.value = v;\n        p.set(v);\n        p.defaultValue = v;\n        return p;\n    };\n\n    /**\n     * create a String value input port displayed as TextArea\n     * @function inValueText\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {String} value default value\n     * @return {Port} created port\n     */\n    Op.prototype.inValueText = function (name, v)\n    {\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"type\": \"string\",\n                \"display\": \"text\"\n            })\n        );\n        p.value = \"\";\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    Op.prototype.inTextarea = function (name, v)\n    {\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_STRING, {\n                \"type\": \"string\",\n                \"display\": \"text\"\n            })\n        );\n        p.value = \"\";\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a String value input port displayed as editor\n     * @function inStringEditor\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {String} value default value\n     * @return {Port} created port\n     */\n    // new string\n    Op.prototype.inStringEditor = function (name, v, syntax, hideFormatButton = true)\n    {\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_STRING, {\n                \"type\": \"string\",\n                \"display\": \"editor\",\n                \"editShortcut\": true,\n                \"editorSyntax\": syntax,\n                \"hideFormatButton\": hideFormatButton\n            }));\n\n        p.value = \"\";\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    // old\n    Op.prototype.inValueEditor = function (name, v, syntax, hideFormatButton = true)\n    {\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"type\": \"string\",\n                \"display\": \"editor\",\n                \"editorSyntax\": syntax,\n                \"hideFormatButton\": hideFormatButton\n            })\n        );\n        p.value = \"\";\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a string select box\n     * @function inDropDown\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {Array} values\n     * @param {String} value default value\n     * @return {Port} created port\n     */\n    Op.prototype.inValueSelect = Op.prototype.inDropDown = function (name, values, v, noindex)\n    {\n        let p = null;\n        if (!noindex)\n        {\n            const indexPort = new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name + \" index\", _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"increment\": \"integer\",\n                \"hideParam\": true\n            });\n            const n = this.addInPort(indexPort);\n\n            if (values) for (let i = 0; i < values.length; i++) values[i] = String(values[i]);\n\n            const valuePort = new _core_port_select__WEBPACK_IMPORTED_MODULE_6__.ValueSelectPort(\n                this,\n                name,\n                _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE,\n                {\n                    \"display\": \"dropdown\",\n                    \"hidePort\": true,\n                    \"type\": \"string\",\n                    \"values\": values\n                },\n                n\n            );\n\n            valuePort.indexPort = indexPort;\n\n            indexPort.onLinkChanged = function ()\n            {\n                valuePort.setUiAttribs({ \"greyout\": indexPort.isLinked() });\n            };\n\n            p = this.addInPort(valuePort);\n\n            if (v !== undefined)\n            {\n                p.set(v);\n                const index = values.findIndex((item) => { return item == v; });\n                n.setValue(index);\n                p.defaultValue = v;\n                n.defaultValue = index;\n            }\n        }\n        else\n        {\n            const valuePort = new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"display\": \"dropdown\",\n                \"hidePort\": true,\n                \"type\": \"string\",\n                values\n            });\n\n            p = this.addInPort(valuePort);\n        }\n\n        return p;\n    };\n\n    /**\n     * create a string switch box\n     * @function inSwitch\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {Array} values\n     * @param {String} value default value\n     * @return {Port} created port\n     */\n    Op.prototype.inSwitch = function (name, values, v, noindex)\n    {\n        let p = null;\n        if (!noindex)\n        {\n            if (!v)v = values[0];\n            const indexPort = new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name + \" index\", _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"increment\": \"integer\",\n                \"hideParam\": true\n            });\n            const n = this.addInPort(indexPort);\n\n            if (values) for (let i = 0; i < values.length; i++) values[i] = String(values[i]);\n\n            const switchPort = new _core_port_switch__WEBPACK_IMPORTED_MODULE_5__.SwitchPort(\n                this,\n                name,\n                _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_STRING,\n                {\n                    \"display\": \"switch\",\n                    \"hidePort\": true,\n                    \"type\": \"string\",\n                    \"values\": values\n                },\n                n\n            );\n\n            indexPort.onLinkChanged = function ()\n            {\n                switchPort.setUiAttribs({ \"greyout\": indexPort.isLinked() });\n            };\n            p = this.addInPort(switchPort);\n\n            if (v !== undefined)\n            {\n                p.set(v);\n                const index = values.findIndex((item) => { return item == v; });\n                n.setValue(index);\n                p.defaultValue = v;\n                n.defaultValue = index;\n            }\n        }\n        else\n        {\n            const switchPort = new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_STRING, {\n                \"display\": \"switch\",\n                \"hidePort\": true,\n                \"type\": \"string\",\n                \"values\": values\n            });\n            p = this.addInPort(switchPort);\n        }\n\n        return p;\n    };\n\n    /**\n     * create a integer input port\n     * @function inInt\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {number} value default value\n     * @return {Port} created port\n     */\n    Op.prototype.inValueInt = Op.prototype.inInt = function (name, v)\n    {\n        // old\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"increment\": \"integer\"\n            })\n        );\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a file/URL input port\n     * @function inURL\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.inFile = function (name, filter, v)\n    {\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"display\": \"file\",\n                \"type\": \"string\",\n                \"filter\": filter\n            })\n        );\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    Op.prototype.inUrl = function (name, filter, v)\n    {\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_STRING, {\n                \"display\": \"file\",\n                \"type\": \"string\",\n                \"filter\": filter\n            })\n        );\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a texture input port\n     * @function inTexture\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.inTexture = function (name, v)\n    {\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT, {\n                \"display\": \"texture\",\n                \"objType\": \"texture\",\n                \"preview\": true\n            })\n        );\n        p.ignoreValueSerialize = true;\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n\n    /**\n     * create a object input port\n     * @function inObject\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.inObject = function (name, v, objType)\n    {\n        const p = this.addInPort(new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT, { \"objType\": objType }));\n        p.ignoreValueSerialize = true;\n\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    Op.prototype.inGradient = function (name, v)\n    {\n        const p = this.addInPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"display\": \"gradient\",\n                \"hidePort\": true\n            })\n        );\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create a array input port\n     * @function inArray\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.inArray = function (name, v, stride)\n    {\n        if (!stride && CABLES.UTILS.isNumeric(v))stride = v;\n\n        const p = this.addInPort(new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_ARRAY, { \"stride\": stride }));\n\n        if (v !== undefined && (Array.isArray(v) || v == null)) p.set(v);\n\n        // if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create a value slider input port\n     * @function inFloatSlider\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {number} defaultvalue\n     * @param {number} min\n     * @param {number} max\n     * @return {Port} created port\n     */\n    Op.prototype.inValueSlider = Op.prototype.inFloatSlider = function (name, v, min, max)\n    {\n        const uiattribs = { \"display\": \"range\" };\n\n        if (min != undefined && max != undefined)\n        {\n            uiattribs.min = min;\n            uiattribs.max = max;\n        }\n\n        const p = this.addInPort(new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, uiattribs));\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create output trigger port\n     * @function outTrigger\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outFunction = Op.prototype.outTrigger = function (name, v)\n    {\n        // old\n        const p = this.addOutPort(new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION));\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create output value port\n     * @function outNumber\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {number} default value\n     * @return {Port} created port\n     */\n    Op.prototype.outValue = Op.prototype.outNumber = function (name, v)\n    {\n        // old\n        const p = this.addOutPort(new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE));\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create output boolean port\n     * @function outBool\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outValueBool = Op.prototype.outBool = function (name, v)\n    {\n        // old\n        const p = this.addOutPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"display\": \"bool\"\n            })\n        );\n        if (v !== undefined) p.set(v);\n        else p.set(0);\n        return p;\n    };\n\n    /**\n     * create output boolean port,value will be converted to 0 or 1\n     * @function outBool\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outBoolNum = function (name, v)\n    {\n        const p = this.addOutPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"display\": \"boolnum\"\n            })\n        );\n\n        p.set = function (b)\n        {\n            this.setValue(b ? 1 : 0);\n            // console.log(\"bool set\", b, this.get());\n        }.bind(p);\n\n        if (v !== undefined) p.set(v);\n        else p.set(0);\n        return p;\n    };\n\n    /**\n     * create output string port\n     * @function outString\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outValueString = function (name, v)\n    {\n        const p = this.addOutPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n                \"type\": \"string\"\n            })\n        );\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n    Op.prototype.outString = function (name, v)\n    {\n        const p = this.addOutPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_STRING, {\n                \"type\": \"string\"\n            })\n        );\n        if (v !== undefined) p.set(v);\n        else p.set(\"\");\n        return p;\n    };\n\n    /**\n     * create output object port\n     * @function outObject\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outObject = function (name, v, objType)\n    {\n        const p = this.addOutPort(new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT, { \"objType\": objType || null }));\n        p.set(v || null);\n        p.ignoreValueSerialize = true;\n        return p;\n    };\n\n    /**\n     * create output array port\n     * @function outArray\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outArray = function (name, v, stride)\n    {\n        if (!stride && CABLES.UTILS.isNumeric(v))stride = v;\n        const p = this.addOutPort(new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_ARRAY, { \"stride\": stride }));\n        if (v !== undefined && (Array.isArray(v) || v == null)) p.set(v);\n\n        p.ignoreValueSerialize = true;\n        return p;\n    };\n\n    /**\n     * create output texture port\n     * @function outTexture\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outTexture = function (name, v)\n    {\n        const p = this.addOutPort(\n            new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT, {\n                \"preview\": true,\n                \"objType\": \"texture\"\n            })\n        );\n        if (v !== undefined) p.set(v || CGL.Texture.getEmptyTexture(this.patch.cgl));\n\n        p.ignoreValueSerialize = true;\n        return p;\n    };\n\n    Op.prototype.inDynamic = function (name, filter, options, v)\n    {\n        const p = new _core_port__WEBPACK_IMPORTED_MODULE_3__.Port(this, name, _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC, options);\n\n        p.shouldLink = function (p1, p2)\n        {\n            if (filter && _utils__WEBPACK_IMPORTED_MODULE_1__.UTILS.isArray(filter))\n            {\n                for (let i = 0; i < filter.length; i++)\n                {\n                    if (p1 == this && p2.type === filter[i]) return true;\n                    if (p2 == this && p1.type === filter[i]) return true;\n                }\n                return false; // types do not match\n            }\n            return true; // no filter set\n        };\n\n        this.addInPort(p);\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    Op.prototype.removeLinks = function ()\n    {\n        for (let i = 0; i < this.portsIn.length; i++) this.portsIn[i].removeLinks();\n        for (let ipo = 0; ipo < this.portsOut.length; ipo++) this.portsOut[ipo].removeLinks();\n    };\n\n    Op.prototype.getSerialized = function ()\n    {\n        const op = {};\n\n        if (this.opId) op.opId = this.opId;\n        if (this.patch.storeObjNames) op.objName = this.objName;\n\n        if (!this.enabled)op.disabled = true;\n\n        op.id = this.id;\n        op.uiAttribs = JSON.parse(JSON.stringify(this.uiAttribs)) || {};\n\n        if (this.storage && Object.keys(this.storage).length > 0) op.storage = JSON.parse(JSON.stringify(this.storage));\n        if (this.uiAttribs.hasOwnProperty(\"working\") && this.uiAttribs.working == true) delete this.uiAttribs.working;\n        if (op.uiAttribs.hasOwnProperty(\"uierrors\")) delete op.uiAttribs.uierrors;\n\n        op.portsIn = [];\n        op.portsOut = [];\n\n        for (let i = 0; i < this.portsIn.length; i++)\n        {\n            const s = this.portsIn[i].getSerialized();\n            if (s)op.portsIn.push(s);\n        }\n        for (const ipo in this.portsOut)\n        {\n            const s = this.portsOut[ipo].getSerialized();\n            if (s)op.portsOut.push(s);\n        }\n\n        if (op.portsIn.length == 0) delete op.portsIn;\n        if (op.portsOut.length == 0) delete op.portsOut;\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.cleanJson)(op);\n\n        return op;\n    };\n\n    Op.prototype.getFirstOutPortByType = function (type)\n    {\n        for (const ipo in this.portsOut) if (this.portsOut[ipo].type == type) return this.portsOut[ipo];\n    };\n\n    Op.prototype.getFirstInPortByType = function (type)\n    {\n        for (const ipo in this.portsIn) if (this.portsIn[ipo].type == type) return this.portsIn[ipo];\n    };\n\n    /**\n     * return port by the name portName\n     * @function getPort\n     * @instance\n     * @memberof Op\n     * @param {String} portName\n     * @return {Port}\n     */\n    Op.prototype.getPort = Op.prototype.getPortByName = function (name, lowerCase)\n    {\n        if (lowerCase)\n        {\n            for (let ipi = 0; ipi < this.portsIn.length; ipi++)\n                if (this.portsIn[ipi].getName().toLowerCase() == name || this.portsIn[ipi].id.toLowerCase() == name)\n                    return this.portsIn[ipi];\n\n            for (let ipo = 0; ipo < this.portsOut.length; ipo++)\n                if (this.portsOut[ipo].getName().toLowerCase() == name || this.portsOut[ipo].id.toLowerCase() == name)\n                    return this.portsOut[ipo];\n        }\n        else\n        {\n            for (let ipi = 0; ipi < this.portsIn.length; ipi++)\n                if (this.portsIn[ipi].getName() == name || this.portsIn[ipi].id == name)\n                    return this.portsIn[ipi];\n\n            for (let ipo = 0; ipo < this.portsOut.length; ipo++)\n                if (this.portsOut[ipo].getName() == name || this.portsOut[ipo].id == name)\n                    return this.portsOut[ipo];\n        }\n    };\n\n\n    /**\n     * return port by the name id\n     * @function getPortById\n     * @instance\n     * @memberof Op\n     * @param {String} id\n     * @return {Port}\n     */\n    Op.prototype.getPortById = function (id)\n    {\n        for (let ipi = 0; ipi < this.portsIn.length; ipi++) if (this.portsIn[ipi].id == id) return this.portsIn[ipi];\n        for (let ipo = 0; ipo < this.portsOut.length; ipo++) if (this.portsOut[ipo].id == id) return this.portsOut[ipo];\n    };\n\n    Op.prototype.updateAnims = function ()\n    {\n        if (this._hasAnimPort)\n            for (let i = 0; i < this.portsIn.length; i++) this.portsIn[i].updateAnim();\n    };\n\n    Op.prototype.log = function ()\n    {\n        const initiator = \"op \" + this.objName;\n        if (CABLES.UI && !CABLES.UI.logFilter.shouldPrint(initiator, ...arguments)) return;\n        if (!CABLES.UI && this.patch.silent) return;\n\n        const args = [\"[op \" + CABLES.getShortOpName(this.objName) + \"]\"];\n        args.push.apply(args, arguments);\n        Function.prototype.apply.apply(console.log, [console, args]);// eslint-disable-line\n    };\n\n    Op.prototype.error = Op.prototype.logError = function ()\n    {\n        if (!this)\n        {\n            console.log(\"no this...!!!\");\n            debugger;\n            return;\n        }\n\n        // if (this.patch.silent) return;\n        const args = [\"[op \" + CABLES.getShortOpName(this.objName) + \"]\"];\n        args.push.apply(args, arguments);\n        Function.prototype.apply.apply(console.error, [console, args]);// eslint-disable-line\n        if (window.gui) window.gui.emitEvent(\"opLogEvent\", this.objName, \"error\", arguments);\n    };\n\n    Op.prototype.warn = Op.prototype.logWarn = function ()\n    {\n        // if (this.patch.silent) return;\n        const args = [\"[op \" + CABLES.getShortOpName(this.objName) + \"]\"];\n        args.push.apply(args, arguments);\n        Function.prototype.apply.apply(console.warn, [console, args]);// eslint-disable-line\n    };\n\n    Op.prototype.verbose = Op.prototype.logVerbose = function ()\n    {\n        const initiator = \"op \" + CABLES.getShortOpName(this.objName);\n        if (CABLES.UI && !CABLES.UI.logFilter.shouldPrint(initiator, ...arguments)) return;\n\n        if (!CABLES.UI && this.patch.silent) return;\n\n        const args = [\"[\" + initiator + \"]\"];\n        args.push.apply(args, arguments);\n        Function.prototype.apply.apply(console.info, [console, args]);// eslint-disable-line\n    };\n\n\n    Op.prototype.profile = function (enable)\n    {\n        for (let ipi = 0; ipi < this.portsIn.length; ipi++)\n        {\n            this.portsIn[ipi]._onTriggered = this.portsIn[ipi]._onTriggeredProfiling;\n            this.portsIn[ipi].set = this.portsIn[ipi]._onSetProfiling;\n        }\n    };\n\n    Op.prototype.findParent = function (objName)\n    {\n        for (let ipi = 0; ipi < this.portsIn.length; ipi++)\n        {\n            if (this.portsIn[ipi].isLinked())\n            {\n                if (this.portsIn[ipi].links[0].portOut.parent.objName == objName)\n                    return this.portsIn[ipi].links[0].portOut.parent;\n\n                let found = null;\n                found = this.portsIn[ipi].links[0].portOut.parent.findParent(objName);\n                if (found) return found;\n            }\n        }\n        return null;\n    };\n\n\n    // todo: check instancing stuff?\n    Op.prototype.cleanUp = function ()\n    {\n        if (this._instances)\n        {\n            for (let i = 0; i < this._instances.length; i++)\n            {\n                if (this._instances[i].onDelete) this._instances[i].onDelete();\n            }\n\n\n            this._instances.length = 0;\n        }\n        for (let i = 0; i < this.portsIn.length; i++)\n        {\n            this.portsIn[i].setAnimated(false);\n        }\n\n        if (this.onAnimFrame) this.patch.removeOnAnimFrame(this);\n    };\n\n    // todo: check instancing stuff?\n    Op.prototype.instanced = function (triggerPort)\n    {\n        console.log(\"instanced\", this.patch.instancing.numCycles());\n        if (this.patch.instancing.numCycles() === 0) return false;\n\n\n        let i = 0;\n        let ipi = 0;\n        if (!this._instances || this._instances.length != this.patch.instancing.numCycles())\n        {\n            if (!this._instances) this._instances = [];\n            this._.log(\"creating instances of \", this.objName, this.patch.instancing.numCycles(), this._instances.length);\n            this._instances.length = this.patch.instancing.numCycles();\n\n            for (i = 0; i < this._instances.length; i++)\n            {\n                this._instances[i] = this.patch.createOp(this.objName, true);\n                this._instances[i].instanced = function ()\n                {\n                    return false;\n                };\n                this._instances[i].uiAttr(this.uiAttribs);\n\n                for (let ipo = 0; ipo < this.portsOut.length; ipo++)\n                {\n                    if (this.portsOut[ipo].type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION)\n                    {\n                        this._instances[i].getPortByName(this.portsOut[ipo].name).trigger = this.portsOut[ipo].trigger.bind(this.portsOut[ipo]);\n                    }\n                }\n            }\n\n            for (ipi = 0; ipi < this.portsIn.length; ipi++)\n            {\n                this.portsIn[ipi].onChange = null;\n                this.portsIn[ipi].onValueChanged = null;\n            }\n        }\n\n        const theTriggerPort = null;\n        for (ipi = 0; ipi < this.portsIn.length; ipi++)\n        {\n            if (\n                this.portsIn[ipi].type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE ||\n                this.portsIn[ipi].type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_ARRAY\n            )\n            {\n                this._instances[this.patch.instancing.index()].portsIn[ipi].set(this.portsIn[ipi].get());\n            }\n            if (this.portsIn[ipi].type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION)\n            {\n                // if(this._instances[ this.patch.instancing.index() ].portsIn[ipi].name==triggerPort.name)\n                // theTriggerPort=this._instances[ this.patch.instancing.index() ].portsIn[ipi];\n            }\n        }\n\n        if (theTriggerPort) theTriggerPort.onTriggered();\n\n        for (ipi = 0; ipi < this.portsOut.length; ipi++)\n        {\n            if (this.portsOut[ipi].type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE)\n            {\n                this.portsOut[ipi].set(this._instances[this.patch.instancing.index()].portsOut[ipi].get());\n            }\n        }\n\n        return true;\n    };\n\n    // todo: check instancing stuff?\n    Op.prototype.initInstancable = function ()\n    {\n        //         if(this.isInstanced)\n        //         {\n        //             console.log('cancel instancing');\n        //             return;\n        //         }\n        //         this._instances=[];\n        //         for(var ipi=0;ipi<this.portsIn.length;ipi++)\n        //         {\n        //             if(this.portsIn[ipi].type==CONSTANTS.OP.OP_PORT_TYPE_VALUE)\n        //             {\n        //\n        //             }\n        //             if(this.portsIn[ipi].type==CONSTANTS.OP.OP_PORT_TYPE_FUNCTION)\n        //             {\n        //                 // var piIndex=ipi;\n        //                 this.portsIn[ipi].onTriggered=function(piIndex)\n        //                 {\n        //\n        //                     var i=0;\n        // // console.log('trigger',this._instances.length);\n        //\n        //                 }.bind(this,ipi );\n        //\n        //             }\n        // };\n        // this._instances=null;\n    };\n\n    Op.prototype.setValues = function (obj)\n    {\n        for (const i in obj)\n        {\n            const port = this.getPortByName(i);\n            if (port) port.set(obj[i]);\n            else this._log.warn(\"op.setValues: port not found:\", i);\n        }\n    };\n\n    /**\n     * return true if op has this error message id\n     * @function hasUiError\n     * @instance\n     * @memberof Op\n     * @param {id} error id\n     * @returns {Boolean} - has id\n     */\n    Op.prototype.hasUiError = function (id)\n    {\n        return this._uiErrors.hasOwnProperty(id) && this._uiErrors[id];\n    };\n\n    /**\n     * show op error message - set message to null to remove error message\n     * @function setUiError\n     * @instance\n     * @memberof Op\n     * @param {id} error id\n     * @param {txt} text message\n     * @param {level} level\n     */\n    Op.prototype.setUiError = function (id, txt, level)\n    {\n        if (!txt && !this.hasUiErrors) return;\n        if (!txt && !this._uiErrors.hasOwnProperty(id)) return;\n        if (this._uiErrors.hasOwnProperty(id) && this._uiErrors[id].txt == txt) return;\n\n        if (id.indexOf(\" \") > -1) this._log.warn(\"setuierror id cant have spaces! \", id);\n        id = id.replaceAll(\" \", \"_\");\n\n        if (!txt && this._uiErrors.hasOwnProperty(id)) delete this._uiErrors[id];\n        else\n        {\n            if (txt && (!this._uiErrors.hasOwnProperty(id) || this._uiErrors[id].txt != txt))\n            {\n                if (level == undefined) level = 2;\n                this._uiErrors[id] = { \"txt\": txt, \"level\": level, \"id\": id };\n            }\n        }\n\n        const errorArr = [];\n        for (const i in this._uiErrors) errorArr.push(this._uiErrors[i]);\n\n        this.uiAttr({ \"uierrors\": errorArr });\n        this.hasUiErrors = Object.keys(this._uiErrors).length;\n\n        this.emitEvent(\"uiErrorChange\");\n    };\n\n    // todo: remove\n    Op.prototype.setError = function (id, txt)\n    {\n        this._log.warn(\"old error message op.error() - use op.setUiError()\");\n    };\n\n\n    /**\n     * enable/disable op\n     * @function\n     * @instance\n     * @memberof Op\n     * @param {boolean}\n     */\n    Op.prototype.setEnabled = function (b)\n    {\n        this.enabled = b;\n        this.emitEvent(\"onEnabledChange\", b);\n        if (!this.enabled) this.setUiError(\"_disabled\", \"Op is disabled\", 0);\n        else this.setUiError(\"_disabled\", null);\n    };\n\n    /**\n     * organize ports into a group\n     * @function\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {Array} ports\n     */\n    Op.prototype.setPortGroup = function (name, ports)\n    {\n        for (let i = 0; i < ports.length; i++)\n        {\n            if (ports[i])\n                if (ports[i].setUiAttribs) ports[i].setUiAttribs({ \"group\": name });\n                else\n                {\n                    this._log.error(\"setPortGroup: invalid port!\");\n                }\n        }\n    };\n\n    /**\n     * visually indicate ports that they are coordinate inputs\n     * @function\n     * @instance\n     * @memberof Op\n     * @param {Port} portX\n     * @param {Port} portY\n     * @param {Port} portZ\n     */\n    Op.prototype.setUiAxisPorts = function (px, py, pz)\n    {\n        if (px) px.setUiAttribs({ \"axis\": \"X\" });\n        if (py) py.setUiAttribs({ \"axis\": \"Y\" });\n        if (pz) pz.setUiAttribs({ \"axis\": \"Z\" });\n    };\n\n    /**\n     * remove port from op\n     * @function removePort\n     * @instance\n     * @memberof Op\n     * @param {Port} port to remove\n     */\n    Op.prototype.removePort = function (port)\n    {\n        for (let ipi = 0; ipi < this.portsIn.length; ipi++)\n        {\n            if (this.portsIn[ipi] == port)\n            {\n                this.portsIn.splice(ipi, 1);\n                this.emitEvent(\"onUiAttribsChange\", {});\n                this.emitEvent(\"onPortRemoved\", {});\n                return;\n            }\n        }\n    };\n\n    Op.prototype._checkLinksNeededToWork = function () {};\n\n    /**\n     * show a warning of this op is not a child of parentOpName\n     * @function\n     * @instance\n     * @memberof Op\n     * @param {String} parentOpName\n     */\n    Op.prototype.toWorkNeedsParent = function (parentOpName)\n    {\n        if (!this.patch.isEditorMode()) return;\n\n        this._linkTimeRules.needsParentOp = parentOpName;\n    };\n\n    // /**\n    //  * show a warning of this op is a child of parentOpName\n    //  * @function\n    //  * @instance\n    //  * @memberof Op\n    //  * @param {String} parentOpName\n    //  */\n    Op.prototype.toWorkShouldNotBeChild = function (parentOpName, type)\n    {\n        if (!this.patch.isEditorMode()) return;\n        this._linkTimeRules.forbiddenParent = parentOpName;\n        if (type != undefined) this._linkTimeRules.forbiddenParentType = type;\n    };\n\n\n    /**\n     * show a small X to indicate op is not working when given ports are not linked\n     * @function\n     * @instance\n     * @memberof Op\n     * @param {Port} port1\n     * @param {Port} port2\n     * @param {Port} port3\n     */\n    Op.prototype.toWorkPortsNeedToBeLinked = function ()\n    {\n        if (!this.patch.isEditorMode()) return;\n        for (let i = 0; i < arguments.length; i++)\n            if (this._linkTimeRules.needsLinkedToWork.indexOf(arguments[i]) == -1) this._linkTimeRules.needsLinkedToWork.push(arguments[i]);\n    };\n    Op.prototype.toWorkPortsNeedToBeLinkedReset = function ()\n    {\n        if (!this.patch.isEditorMode()) return;\n        this._linkTimeRules.needsLinkedToWork.length = 0;\n        if (this.checkLinkTimeWarnings) this.checkLinkTimeWarnings();\n    };\n\n    Op.prototype.initVarPorts = function ()\n    {\n        for (let i = 0; i < this.portsIn.length; i++)\n        {\n            if (this.portsIn[i].getVariableName()) this.portsIn[i].setVariable(this.portsIn[i].getVariableName());\n        }\n    };\n\n    /**\n     * refresh op parameters, if current op is selected\n     * @function\n     * @instance\n     * @memberof Op\n     */\n    Op.prototype.refreshParams = function ()\n    {\n        if (this.patch && this.patch.isEditorMode() && this.isCurrentUiOp())\n        {\n            gui.opParams.show(this);\n        }\n    };\n\n    /**\n     * Returns true if op is selected and parameter are shown in the editor, can only return true if in editor/ui\n     * @function isCurrentUiOp\n     * @instance\n     * @memberof Op\n     * @returns {Boolean} - is current ui op\n     */\n    Op.prototype.isCurrentUiOp = function ()\n    {\n        if (this.patch.isEditorMode()) return gui.patchView.isCurrentOp(this);\n    };\n\n    /**\n     * Implement to render 2d canvas based graphics from in an op\n     * @function isCurrentUiOp\n     * @instance\n     * @memberof Op\n     * @param {ctx} context of canvas 2d\n     * @param {Object} layer info\n     * @param {number} layer.x x position on canvas\n     * @param {number} layer.y y position on canvas\n     * @param {number} layer.width width of canvas\n     * @param {number} layer.height height of canvas\n     * @param {number} layer.scale current scaling of patchfield view\n     */\n    Op.prototype.renderVizLayer = null; // optionaly defined in op instance\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/core_op.js\n");

/***/ }),

/***/ "./src/core/core_patch.js":
/*!********************************!*\
  !*** ./src/core/core_patch.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _eventtarget__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventtarget */ \"./src/core/eventtarget.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/core/utils.js\");\n/* harmony import */ var _loadingstatus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loadingstatus */ \"./src/core/loadingstatus.js\");\n/* harmony import */ var _instancing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instancing */ \"./src/core/instancing.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./timer */ \"./src/core/timer.js\");\n/* harmony import */ var _core_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core_link */ \"./src/core/core_link.js\");\n/* harmony import */ var _core_profiler__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./core_profiler */ \"./src/core/core_profiler.js\");\n/* harmony import */ var _cgl_cgl_state__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cgl/cgl_state */ \"./src/core/cgl/cgl_state.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./constants */ \"./src/core/constants.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./core_logger */ \"./src/core/core_logger.js\");\n/* harmony import */ var _core_variable__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core_variable */ \"./src/core/core_variable.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Patch class, contains all operators,values,links etc. manages loading and running of the whole patch\n *\n * see {@link PatchConfig}\n *\n * @external CABLES\n * @namespace Patch\n * @hideconstructor\n * @param {PatchConfig} config The configuration object.\n * @class\n * @example\n * CABLES.patch=new CABLES.Patch(\n * {\n *     patch:pStr,\n *     glCanvasId:'glcanvas',\n *     glCanvasResizeToWindow:true,\n *     canvas:{powerPreference:\"high-performance\"},\n *     prefixAssetPath:'/assets/',\n *     prefixJsPath:'/js/',\n *     onError:function(e){console.log(e);}\n *     glslPrecision:'highp'\n * });\n */\n\nconst Patch = function (cfg)\n{\n    _eventtarget__WEBPACK_IMPORTED_MODULE_0__.EventTarget.apply(this);\n\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_9__[\"default\"](\"core_patch\");\n    this.ops = [];\n    this.settings = {};\n    this.config = cfg ||\n        {\n            \"glCanvasResizeToWindow\": false,\n            \"prefixAssetPath\": \"\",\n            \"prefixJsPath\": \"\",\n            \"silent\": true,\n            \"onError\": null,\n            \"onFinishedLoading\": null,\n            \"onFirstFrameRendered\": null,\n            \"onPatchLoaded\": null,\n            \"fpsLimit\": 0,\n        };\n    this.timer = new _timer__WEBPACK_IMPORTED_MODULE_4__.Timer();\n    this.freeTimer = new _timer__WEBPACK_IMPORTED_MODULE_4__.Timer();\n    this.animFrameOps = [];\n    this.animFrameCallbacks = [];\n    this.gui = false;\n    CABLES.logSilent = this.silent = true;\n    this.profiler = null;\n    this.aborted = false;\n    this._crashedOps = [];\n    this._renderOneFrame = false;\n    this._animReq = null;\n    this._opIdCache = {};\n    this._triggerStack = [];\n    this.storeObjNames = false; // remove after may release\n\n    this.loading = new _loadingstatus__WEBPACK_IMPORTED_MODULE_2__.LoadingStatus(this);\n\n    this._volumeListeners = [];\n    this._paused = false;\n    this._frameNum = 0;\n    this.instancing = new _instancing__WEBPACK_IMPORTED_MODULE_3__.Instancing();\n    this.onOneFrameRendered = null;\n    this.namedTriggers = {};\n\n    this._origData = null;\n    this._frameNext = 0;\n    this._frameInterval = 0;\n    this._lastFrameTime = 0;\n    this._frameWasdelayed = true;\n    this.frameStore = {};\n    this.deSerialized = false;\n    this._lastReqAnimTimeStamp = 0;\n\n    this.cgCanvas = null;\n\n    if (!(function () { return !this; }())) console.log(\"not in strict mode: core patch\");\n\n    this._isLocal = document.location.href.indexOf(\"file:\") === 0;\n\n    if (this.config.hasOwnProperty(\"silent\")) this.silent = CABLES.logSilent = this.config.silent;\n    if (!this.config.hasOwnProperty(\"doRequestAnimation\")) this.config.doRequestAnimation = true;\n\n    if (!this.config.prefixAssetPath) this.config.prefixAssetPath = \"\";\n    if (!this.config.prefixJsPath) this.config.prefixJsPath = \"\";\n    if (!this.config.masterVolume) this.config.masterVolume = 1.0;\n\n    this._variables = {};\n    this._variableListeners = [];\n    this.vars = {};\n    if (cfg && cfg.vars) this.vars = cfg.vars; // vars is old!\n\n    this.cgl = new _cgl_cgl_state__WEBPACK_IMPORTED_MODULE_7__.Context(this);\n    this.cgp = null;\n\n    this._subpatchOpCache = {};\n\n    this.cgl.setCanvas(this.config.glCanvasId || this.config.glCanvas || \"glcanvas\");\n    if (this.config.glCanvasResizeToWindow === true) this.cgl.setAutoResize(\"window\");\n    if (this.config.glCanvasResizeToParent === true) this.cgl.setAutoResize(\"parent\");\n    this.loading.setOnFinishedLoading(this.config.onFinishedLoading);\n\n    if (this.cgl.aborted) this.aborted = true;\n    if (this.cgl.silent) this.silent = true;\n\n    this.freeTimer.play();\n    this.exec();\n\n    if (!this.aborted)\n    {\n        if (this.config.patch)\n        {\n            this.deSerialize(this.config.patch);\n        }\n        else if (this.config.patchFile)\n        {\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.ajax)(\n                this.config.patchFile,\n                (err, _data) =>\n                {\n                    const data = JSON.parse(_data);\n                    if (err)\n                    {\n                        const txt = \"\";\n                        this._log.error(\"err\", err);\n                        this._log.error(\"data\", data);\n                        this._log.error(\"data\", data.msg);\n                        return;\n                    }\n                    this.deSerialize(data);\n                }\n            );\n        }\n        this.timer.play();\n    }\n\n    console.log(\"made with https://cables.gl\"); // eslint-disable-line\n};\n\nPatch.prototype.isPlaying = function ()\n{\n    return !this._paused;\n};\n\nPatch.prototype.isRenderingOneFrame = function ()\n{\n    return this._renderOneFrame;\n};\n\n\nPatch.prototype.renderOneFrame = function ()\n{\n    this._paused = true;\n    this._renderOneFrame = true;\n    this.exec();\n    this._renderOneFrame = false;\n};\n\n/**\n * current number of frames per second\n * @function getFPS\n * @memberof Patch\n * @instance\n * @return {Number} fps\n */\nPatch.prototype.getFPS = function ()\n{\n    console.log(\"deprecated getfps\");\n    return 0;\n};\n\n/**\n * returns true if patch is opened in editor/gui mode\n * @function isEditorMode\n * @memberof Patch\n * @instance\n * @return {Boolean} editor mode\n */\nPatch.prototype.isEditorMode = function ()\n{\n    return this.config.editorMode === true;\n};\n\n/**\n * pauses patch execution\n * @function pause\n * @memberof Patch\n * @instance\n */\nPatch.prototype.pause = function ()\n{\n    cancelAnimationFrame(this._animReq);\n    this.emitEvent(\"pause\");\n    this._animReq = null;\n    this._paused = true;\n    this.freeTimer.pause();\n};\n\n/**\n * resumes patch execution\n * @function resume\n * @memberof Patch\n * @instance\n */\nPatch.prototype.resume = function ()\n{\n    if (this._paused)\n    {\n        cancelAnimationFrame(this._animReq);\n        this._paused = false;\n        this.freeTimer.play();\n        this.emitEvent(\"resume\");\n        this.exec();\n    }\n};\n\n/**\n * set volume [0-1]\n * @function setVolume\n * @param {Number} volume\n * @memberof Patch\n * @instance\n */\nPatch.prototype.setVolume = function (v)\n{\n    this.config.masterVolume = v;\n    for (let i = 0; i < this._volumeListeners.length; i++) this._volumeListeners[i].onMasterVolumeChanged(v);\n};\n\n\n/**\n * get asset path\n * @function getAssetPath\n * @memberof Patch\n * @instance\n */\nPatch.prototype.getAssetPath = function (patchId = null)\n{\n    if (this.isEditorMode())\n    {\n        let id = patchId || gui.project()._id;\n        return \"/assets/\" + id + \"/\";\n    }\n    else if (document.location.href.indexOf(\"cables.gl\") > 0 || document.location.href.indexOf(\"cables.local\") > 0)\n    {\n        const parts = document.location.pathname.split(\"/\");\n        let id = patchId || parts[parts.length - 1];\n        return \"/assets/\" + id + \"/\";\n    }\n    else if (this.config.hasOwnProperty(\"assetPath\"))\n    {\n        return this.config.assetPath;\n    }\n    else\n    {\n        return \"assets/\";\n    }\n};\n\n/**\n * get js path\n * @function getJsPath\n * @memberof Patch\n * @instance\n */\nPatch.prototype.getJsPath = function ()\n{\n    if (this.config.hasOwnProperty(\"jsPath\"))\n    {\n        return this.config.jsPath;\n    }\n    else\n    {\n        return \"js/\";\n    }\n};\n\n/**\n * get url/filepath for a filename\n * this uses prefixAssetpath in exported patches\n * @function getFilePath\n * @memberof Patch\n * @instance\n * @param {String} filename\n * @return {String} url\n */\nPatch.prototype.getFilePath = function (filename)\n{\n    if (!filename) return filename;\n    filename = String(filename);\n    if (filename.indexOf(\"https:\") === 0 || filename.indexOf(\"http:\") === 0) return filename;\n    if (filename.indexOf(\"data:\") === 0) return filename;\n    if (filename.indexOf(\"file:\") === 0) return filename;\n\n    filename = filename.replace(\"//\", \"/\");\n    return this.config.prefixAssetPath + filename + (this.config.suffixAssetPath || \"\");\n};\n\nPatch.prototype.clear = function ()\n{\n    this.emitEvent(\"patchClearStart\");\n    this.cgl.TextureEffectMesh = null;\n    this.animFrameOps.length = 0;\n    this.timer = new _timer__WEBPACK_IMPORTED_MODULE_4__.Timer();\n    while (this.ops.length > 0) this.deleteOp(this.ops[0].id);\n    this.emitEvent(\"patchClearEnd\");\n};\n\nPatch.getOpClass = function (objName)\n{\n    const parts = objName.split(\".\");\n    let opObj = null;\n\n    try\n    {\n        if (parts.length == 2) opObj = window[parts[0]][parts[1]];\n        else if (parts.length == 3) opObj = window[parts[0]][parts[1]][parts[2]];\n        else if (parts.length == 4) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]];\n        else if (parts.length == 5) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]];\n        else if (parts.length == 6) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]];\n        else if (parts.length == 7) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]];\n        else if (parts.length == 8) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]][parts[7]];\n        else if (parts.length == 9) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]][parts[7]][parts[8]];\n        else if (parts.length == 10) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]][parts[7]][parts[8]][parts[9]];\n        return opObj;\n    }\n    catch (e)\n    {\n        return null;\n    }\n};\n\nPatch.prototype.createOp = function (identifier, id, opName = null)\n{\n    let op = null;\n    let objName = \"\";\n\n    try\n    {\n        if (identifier.indexOf(\"Ops.\") === -1)\n        {\n            // this should be a uuid, not a namespace\n            // creating ops by id should be the default way from now on!\n            const opId = identifier;\n\n\n\n            if (CABLES.OPS[opId])\n            {\n                objName = CABLES.OPS[opId].objName;\n                op = new CABLES.OPS[opId].f(this, objName, id, opId);\n                op.opId = opId;\n            }\n            else\n            {\n                if (opName)\n                {\n                    identifier = opName;\n                    console.log(\"could not find op by id: \" + opId);\n                }\n                else\n                {\n                    throw new Error(\"could not find op by id: \" + opId);\n                }\n            }\n        }\n\n        if (!op)\n        {\n            // fallback: create by objname!\n            objName = identifier;\n            const parts = identifier.split(\".\");\n            const opObj = Patch.getOpClass(objName);\n\n            if (!opObj)\n            {\n                this.emitEvent(\"criticalError\", { \"title\": \"unknown op\", \"text\": \"unknown op: \" + objName });\n\n                this._log.error(\"unknown op: \" + objName);\n                throw new Error(\"unknown op: \" + objName);\n            }\n            else\n            {\n                if (parts.length == 2) op = new window[parts[0]][parts[1]](this, objName, id);\n                else if (parts.length == 3) op = new window[parts[0]][parts[1]][parts[2]](this, objName, id);\n                else if (parts.length == 4) op = new window[parts[0]][parts[1]][parts[2]][parts[3]](this, objName, id);\n                else if (parts.length == 5) op = new window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]](this, objName, id);\n                else if (parts.length == 6) op = new window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]](this, objName, id);\n                else if (parts.length == 7) op = new window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]](this, objName, id);\n                else if (parts.length == 8) op = new window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]][parts[7]](this, objName, id);\n                else if (parts.length == 9) op = new window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]][parts[7]][parts[8]](this, objName, id);\n                else if (parts.length == 10) op = new window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]][parts[7]][parts[8]][parts[9]](this, objName, id);\n                else console.log(\"parts.length\", parts.length);\n            }\n\n            if (op)\n            {\n                op.opId = null;\n                for (const i in CABLES.OPS)\n                {\n                    if (CABLES.OPS[i].objName == objName) op.opId = i;\n                }\n            }\n        }\n    }\n    catch (e)\n    {\n        this._crashedOps.push(objName);\n\n        this.emitEvent(\"exceptionOp\", e, objName, op);\n\n        if (!this.isEditorMode())\n        {\n            this._log.error(e);\n            this._log.error(\"[instancing error] \" + objName, e);\n\n            if (CABLES.api) CABLES.api.sendErrorReport(e);\n            this.exitError(\"INSTANCE_ERR\", \"Instancing Error 1\" + objName, e);\n            throw new Error(\"instancing error 1\" + objName);\n        }\n    }\n\n    if (op)\n    {\n        op._objName = objName;\n        op.patch = this;\n    }\n    else\n    {\n        this._log.log(\"no op was created!?\", identifier, id);\n    }\n    return op;\n};\n\n/**\n * create a new op in patch\n * @function addOp\n * @memberof Patch\n * @instance\n * @param {String} opIdentifier, uuid or name, e.g. Ops.Math.Sum\n * @param {Object} uiAttribs Attributes\n * @param {String} id\n * @param {boolean} fromDeserialize\n * @param {String} opName, e.g. Ops.Math.Sum\n * @example\n * // add invisible op\n * patch.addOp('Ops.Math.Sum', { showUiAttribs: false });\n */\nPatch.prototype.addOp = function (opIdentifier, uiAttribs, id, fromDeserialize, opName)\n{\n    const op = this.createOp(opIdentifier, id, opName);\n\n    if (op)\n    {\n        uiAttribs = uiAttribs || {};\n        if (uiAttribs.hasOwnProperty(\"errors\")) delete uiAttribs.errors;\n        if (uiAttribs.hasOwnProperty(\"error\")) delete uiAttribs.error;\n        uiAttribs.subPatch = uiAttribs.subPatch || 0;\n\n        op.uiAttr(uiAttribs);\n        if (op.onCreate) op.onCreate();\n\n        if (op.hasOwnProperty(\"onAnimFrame\")) this.addOnAnimFrame(op);\n        if (op.hasOwnProperty(\"onMasterVolumeChanged\")) this._volumeListeners.push(op);\n\n        if (this._opIdCache[op.id])\n        {\n            console.log(\"opid with id \" + op.id + \" already exists in patch!\");\n            // op.id += \"_double\";\n            return;\n        }\n\n        this.ops.push(op);\n        this._opIdCache[op.id] = op;\n\n        this.emitEvent(\"onOpAdd\", op, fromDeserialize);\n\n        if (this._subPatchCacheAdd) this._subPatchCacheAdd(uiAttribs.subPatch, op);\n\n        if (op.init)\n        {\n            op.init();\n        }\n        op.emitEvent(\"init\", fromDeserialize);\n    }\n    else\n    {\n        this._log.error(\"addop: no op.....\");\n    }\n\n    return op;\n};\n\nPatch.prototype.addOnAnimFrame = function (op)\n{\n    for (let i = 0; i < this.animFrameOps.length; i++) if (this.animFrameOps[i] == op) { return; }\n\n    this.animFrameOps.push(op);\n};\n\nPatch.prototype.removeOnAnimFrame = function (op)\n{\n    for (let i = 0; i < this.animFrameOps.length; i++)\n    {\n        if (this.animFrameOps[i] == op)\n        {\n            this.animFrameOps.splice(i, 1);\n            return;\n        }\n    }\n};\n\nPatch.prototype.addOnAnimFrameCallback = function (cb)\n{\n    this.animFrameCallbacks.push(cb);\n};\n\nPatch.prototype.removeOnAnimCallback = function (cb)\n{\n    for (let i = 0; i < this.animFrameCallbacks.length; i++)\n    {\n        if (this.animFrameCallbacks[i] == cb)\n        {\n            this.animFrameCallbacks.splice(i, 1);\n            return;\n        }\n    }\n};\n\nPatch.prototype.deleteOp = function (opid, tryRelink, reloadingOp)\n{\n    let found = false;\n    for (const i in this.ops)\n    {\n        if (this.ops[i].id == opid)\n        {\n            const op = this.ops[i];\n            let reLinkP1 = null;\n            let reLinkP2 = null;\n\n            if (op)\n            {\n                found = true;\n                if (tryRelink)\n                {\n                    if (op.portsIn.length > 0 && op.portsIn[0].isLinked() && (op.portsOut.length > 0 && op.portsOut[0].isLinked()))\n                    {\n                        if (op.portsIn[0].getType() == op.portsOut[0].getType() && op.portsIn[0].links[0])\n                        {\n                            reLinkP1 = op.portsIn[0].links[0].getOtherPort(op.portsIn[0]);\n                            reLinkP2 = op.portsOut[0].links[0].getOtherPort(op.portsOut[0]);\n                        }\n                    }\n                }\n\n                const opToDelete = this.ops[i];\n                opToDelete.removeLinks();\n\n                if (this.onDelete)\n                {\n                    // todo: remove\n                    console.log(\"deprecated this.onDelete\", this.onDelete);\n                    this.onDelete(opToDelete);\n                }\n\n                this.ops.splice(i, 1);\n                opToDelete.emitEvent(\"delete\", this.ops[i]);\n                this.emitEvent(\"onOpDelete\", opToDelete, reloadingOp);\n\n                if (this.clearSubPatchCache) this.clearSubPatchCache(opToDelete.uiAttribs.subPatch);\n\n                if (opToDelete.onDelete) opToDelete.onDelete(reloadingOp);\n                opToDelete.cleanUp();\n\n                if (reLinkP1 !== null && reLinkP2 !== null)\n                {\n                    this.link(reLinkP1.op, reLinkP1.getName(), reLinkP2.op, reLinkP2.getName());\n                }\n\n                delete this._opIdCache[opid];\n                break;\n            }\n        }\n    }\n\n    if (!found) console.log(\"core patch deleteop: not found...\", opid);\n};\n\nPatch.prototype.getFrameNum = function ()\n{\n    return this._frameNum;\n};\n\nPatch.prototype.emitOnAnimFrameEvent = function (time, delta)\n{\n    time = time || this.timer.getTime();\n\n    for (let i = 0; i < this.animFrameCallbacks.length; ++i)\n    {\n        if (this.animFrameCallbacks[i]) this.animFrameCallbacks[i](time, this._frameNum, delta);\n    }\n\n    for (let i = 0; i < this.animFrameOps.length; ++i)\n    {\n        if (this.animFrameOps[i].onAnimFrame)\n        {\n            this.animFrameOps[i].onAnimFrame(time, this._frameNum, delta);\n        }\n    }\n};\n\nPatch.prototype.renderFrame = function (timestamp)\n{\n    // console.log(\"renderframe\", this._paused, this._frameNum);\n\n    this.timer.update();\n    this.freeTimer.update();\n    const time = this.timer.getTime();\n    const startTime = performance.now();\n    this.cgl.frameStartTime = this.timer.getTime();\n\n    const delta = timestamp - this._lastReqAnimTimeStamp || timestamp;\n\n    this.emitOnAnimFrameEvent(null, delta);\n\n    this.cgl.profileData.profileFrameDelta = delta;\n    this._lastReqAnimTimeStamp = timestamp;\n    this.cgl.profileData.profileOnAnimFrameOps = performance.now() - startTime;\n\n    this.emitEvent(\"onRenderFrame\", time);\n\n    this._frameNum++;\n    if (this._frameNum == 1)\n    {\n        if (this.config.onFirstFrameRendered) this.config.onFirstFrameRendered();\n    }\n};\n\nPatch.prototype.exec = function (timestamp)\n{\n    if (!this._renderOneFrame && (this._paused || this.aborted)) return;\n    this.emitEvent(\"reqAnimFrame\");\n    cancelAnimationFrame(this._animReq);\n\n    this.config.fpsLimit = this.config.fpsLimit || 0;\n    if (this.config.fpsLimit)\n    {\n        this._frameInterval = 1000 / this.config.fpsLimit;\n    }\n\n    const now = CABLES.now();\n    const frameDelta = now - this._frameNext;\n\n\n\n    if (this.isEditorMode())\n    {\n        if (!this._renderOneFrame)\n        {\n            if (now - this._lastFrameTime >= 500 && this._lastFrameTime !== 0 && !this._frameWasdelayed)\n            {\n                this._lastFrameTime = 0;\n                setTimeout(this.exec.bind(this), 500);\n                this.emitEvent(\"renderDelayStart\");\n                this._frameWasdelayed = true;\n                return;\n            }\n        }\n    }\n\n    if (this._renderOneFrame || this.config.fpsLimit === 0 || frameDelta > this._frameInterval || this._frameWasdelayed)\n    {\n        this.renderFrame(timestamp);\n\n        if (this._frameInterval) this._frameNext = now - (frameDelta % this._frameInterval);\n    }\n\n    if (this._frameWasdelayed)\n    {\n        this.emitEvent(\"renderDelayEnd\");\n        this._frameWasdelayed = false;\n    }\n\n    if (this._renderOneFrame)\n    {\n        if (this.onOneFrameRendered) this.onOneFrameRendered(); // todo remove everywhere and use propper event...\n        this.emitEvent(\"renderedOneFrame\");\n        this._renderOneFrame = false;\n    }\n\n\n    if (this.config.doRequestAnimation) this._animReq = this.cgl.canvas.ownerDocument.defaultView.requestAnimationFrame(this.exec.bind(this));\n};\n\n// Patch.prototype.linkPorts = function (port1, port2)\n// {\n//     this.link(port1.parent, port1.id, port2.parent, port2.id);\n// };\n\n/**\n * link two ops/ports\n * @function link\n * @memberof Patch\n * @instance\n * @param {Op} op1\n * @param {String} portName1\n * @param {Op} op2\n * @param {String} portName2\n */\nPatch.prototype.link = function (op1, port1Name, op2, port2Name, lowerCase, fromDeserialize)\n{\n    if (!op1)\n    {\n        console.log(\"link: op1 is null \");\n        return;\n    }\n    if (!op2)\n    {\n        console.log(\"link: op2 is null\");\n        return;\n    }\n\n    const port1 = op1.getPort(port1Name, lowerCase);\n    const port2 = op2.getPort(port2Name, lowerCase);\n\n    if (!port1)\n    {\n        console.log(\"port not found! \" + port1Name + \"(\" + op1.objName + \")\");\n        return;\n    }\n\n    if (!port2)\n    {\n        console.log(\"port not found! \" + port2Name + \" of \" + op2.name + \"(\" + op2.objName + \")\");\n        return;\n    }\n\n    if (!port1.shouldLink(port1, port2) || !port2.shouldLink(port1, port2))\n    {\n        return false;\n    }\n\n    if (_core_link__WEBPACK_IMPORTED_MODULE_5__.Link.canLink(port1, port2))\n    {\n        const link = new _core_link__WEBPACK_IMPORTED_MODULE_5__.Link(this);\n        link.link(port1, port2);\n\n        this.emitEvent(\"onLink\", port1, port2, link, fromDeserialize);\n        return link;\n    }\n};\n\nPatch.prototype.serialize = function (options)\n{\n    const obj = {};\n\n    options = options || {};\n    obj.ops = [];\n    obj.settings = this.settings;\n    for (const i in this.ops)\n    {\n        const op = this.ops[i];\n        obj.ops.push(op.getSerialized());\n    }\n\n    (0,_utils__WEBPACK_IMPORTED_MODULE_1__.cleanJson)(obj);\n\n    if (options.asObject) return obj;\n    return JSON.stringify(obj);\n};\n\nPatch.prototype.getOpById = function (opid)\n{\n    return this._opIdCache[opid];\n    // this.timeNeededGetOpById = this.timeNeededGetOpById || 0;\n\n    // const startTime = performance.now();\n    // for (const i in this.ops)\n    // {\n    //     if (this.ops[i].id == opid)\n    //     {\n    //         this.timeNeededGetOpById += (performance.now() - startTime);\n    //         return this.ops[i];\n    //     }\n    // }\n};\n\n// Patch.prototype.getOpsById = function (opIds)\n// {\n//     const ops = [];\n//     for (const i in this.ops)\n//         for (let j = 0; j < opIds.length; j++)\n//             if (this.ops[i].id === opIds[j])\n//             {\n//                 ops.push(this.ops[i]);\n//                 break;\n//             }\n//     return ops;\n// };\n\nPatch.prototype.getOpsByName = function (name)\n{\n    // TODO: is this still needed ? unclear behaviour....\n    const arr = [];\n    for (const i in this.ops)\n        if (this.ops[i].name == name) arr.push(this.ops[i]);\n    return arr;\n};\n\nPatch.prototype.getOpsByObjName = function (name)\n{\n    const arr = [];\n    for (const i in this.ops)\n        if (this.ops[i].objName == name) arr.push(this.ops[i]);\n    return arr;\n};\n\nPatch.prototype.loadLib = function (which)\n{\n    (0,_utils__WEBPACK_IMPORTED_MODULE_1__.ajaxSync)(\n        \"/ui/libs/\" + which + \".js\",\n        (err, res) =>\n        {\n            const se = document.createElement(\"script\");\n            se.type = \"text/javascript\";\n            se.text = res;\n            document.getElementsByTagName(\"head\")[0].appendChild(se);\n        },\n        \"GET\",\n    );\n    // open and send a synchronous request\n    // xhrObj.open('GET', '/ui/libs/'+which+'.js', false);\n    // xhrObj.send('');\n    // add the returned content to a newly created script tag\n};\n\nPatch.prototype.reloadOp = function (objName, cb)\n{\n    let count = 0;\n    const ops = [];\n    const oldOps = [];\n\n    for (const i in this.ops)\n    {\n        if (this.ops[i].objName == objName)\n        {\n            oldOps.push(this.ops[i]);\n        }\n    }\n\n    for (let i = 0; i < oldOps.length; i++)\n    {\n        count++;\n        const oldOp = oldOps[i];\n        oldOp.deleted = true;\n        const op = this.addOp(objName, oldOp.uiAttribs);\n        if (!op) continue;\n        if (oldOp && oldOp.storage) op.setStorage(JSON.parse(JSON.stringify(oldOp.storage)));\n        ops.push(op);\n\n        let l;\n        for (let j in oldOp.portsIn)\n        {\n            if (oldOp.portsIn[j].links.length === 0)\n            {\n                const p = op.getPort(oldOp.portsIn[j].name);\n                if (!p) this._log.error(\"[reloadOp] could not set port \" + oldOp.portsIn[j].name + \", propably renamed port ?\");\n                else\n                {\n                    p.set(oldOp.portsIn[j].get());\n\n                    if (oldOp.portsIn[j].getVariableName())\n                        p.setVariable(oldOp.portsIn[j].getVariableName());\n                }\n            }\n            else\n            {\n                while (oldOp.portsIn[j].links.length)\n                {\n                    const oldName = oldOp.portsIn[j].links[0].portIn.name;\n                    const oldOutName = oldOp.portsIn[j].links[0].portOut.name;\n                    const oldOutOp = oldOp.portsIn[j].links[0].portOut.op;\n                    oldOp.portsIn[j].links[0].remove();\n\n                    l = this.link(op, oldName, oldOutOp, oldOutName);\n                    if (!l) console.log(\"[reloadOp] relink after op reload not successfull for port \" + oldOutName);\n                    else l.setValue();\n                }\n            }\n        }\n\n        for (let j in oldOp.portsOut)\n        {\n            while (oldOp.portsOut[j].links.length)\n            {\n                const oldNewName = oldOp.portsOut[j].links[0].portOut.name;\n                const oldInName = oldOp.portsOut[j].links[0].portIn.name;\n                const oldInOp = oldOp.portsOut[j].links[0].portIn.op;\n                oldOp.portsOut[j].links[0].remove();\n\n                l = this.link(op, oldNewName, oldInOp, oldInName);\n                if (!l) console.log(\"relink after op reload not successfull for port \" + oldInName);\n                else l.setValue();\n            }\n        }\n\n        this.deleteOp(oldOp.id, false, true);\n    }\n    cb(count, ops);\n};\n\n\nPatch.prototype.getSubPatchOp = function (patchId, objName)\n{\n    for (const i in this.ops)\n        if (this.ops[i].uiAttribs && this.ops[i].uiAttribs.subPatch == patchId && this.ops[i].objName == objName)\n            return this.ops[i];\n    return false;\n};\n\nPatch.prototype.getSubPatchOuterOp = function (subPatchId) // remove !! moved to extend class\n{\n    const ops = this.ops;\n    for (let i = 0; i < ops.length; i++)\n    {\n        const op = ops[i];\n        if (op.isSubPatchOp() && op.patchId.get() == subPatchId) return op;\n    }\n};\n\n\nPatch.prototype.getSubPatchOps = function (patchId, recursive = false) // remove !! moved to extend class\n{\n    let ops = [];\n    for (const i in this.ops)\n    {\n        if (this.ops[i].uiAttribs && this.ops[i].uiAttribs.subPatch == patchId)\n        {\n            ops.push(this.ops[i]);\n        }\n    }\n    if (recursive)\n    {\n        for (const i in ops)\n        {\n            if (ops[i].storage && ops[i].storage.subPatchVer)\n            {\n                const subPatchPort = ops[i].portsIn.find((port) => { return port.name === \"patchId\"; });\n                if (subPatchPort)\n                {\n                    ops = ops.concat(this.getSubPatchOps(subPatchPort.value, true));\n                }\n            }\n        }\n    }\n    return ops;\n};\n\n\n\nPatch.prototype._addLink = function (opinid, opoutid, inName, outName)\n{\n    this.link(this.getOpById(opinid), inName, this.getOpById(opoutid), outName, false, true);\n};\n\nPatch.prototype.deSerialize = function (obj, options)\n{\n    options = options || { \"genIds\": false, \"createRef\": false };\n    if (this.aborted) return;\n    const newOps = [];\n    const loadingId = this.loading.start(\"core\", \"deserialize\");\n\n    this.namespace = obj.namespace || \"\";\n    this.name = obj.name || \"\";\n\n    if (typeof obj === \"string\") obj = JSON.parse(obj);\n\n    this.settings = obj.settings;\n\n    this.emitEvent(\"patchLoadStart\");\n\n    if (window.logStartup)logStartup(\"add \" + obj.ops.length + \" ops... \");\n\n    // add ops...\n    for (let iop = 0; iop < obj.ops.length; iop++)\n    {\n        const start = CABLES.now();\n        const opData = obj.ops[iop];\n        let op = null;\n\n        try\n        {\n            if (opData.opId) op = this.addOp(opData.opId, opData.uiAttribs, opData.id, true, opData.objName);\n            else op = this.addOp(opData.objName, opData.uiAttribs, opData.id, true);\n        }\n        catch (e)\n        {\n            console.log(\"[instancing error] op data:\", opData, e);\n            throw new Error(\"could not create op by id: <b>\" + (opData.objName || opData.opId) + \"</b> (\" + opData.id + \")\");\n        }\n\n        if (op)\n        {\n            if (options.genIds) op.id = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.uuid)();\n            op.portsInData = opData.portsIn;\n            op._origData = JSON.parse(JSON.stringify(opData));\n            op.storage = opData.storage;\n            if (opData.hasOwnProperty(\"disabled\"))op.setEnabled(!opData.disabled);\n\n            for (const ipi in opData.portsIn)\n            {\n                const objPort = opData.portsIn[ipi];\n                if (objPort && objPort.hasOwnProperty(\"name\"))\n                {\n                    const port = op.getPort(objPort.name);\n\n                    if (port && (port.uiAttribs.display == \"bool\" || port.uiAttribs.type == \"bool\") && !isNaN(objPort.value)) objPort.value = objPort.value === true;\n                    if (port && objPort.value !== undefined && port.type != _constants__WEBPACK_IMPORTED_MODULE_8__.CONSTANTS.OP.OP_PORT_TYPE_TEXTURE) port.set(objPort.value);\n\n                    if (port) port.deSerializeSettings(objPort);\n                }\n            }\n\n            for (const ipo in opData.portsOut)\n            {\n                const objPort = opData.portsOut[ipo];\n                if (objPort && objPort.hasOwnProperty(\"name\"))\n                {\n                    const port2 = op.getPort(objPort.name);\n                    if (port2 && port2.type != _constants__WEBPACK_IMPORTED_MODULE_8__.CONSTANTS.OP.OP_PORT_TYPE_TEXTURE && objPort.hasOwnProperty(\"value\"))\n                        port2.set(obj.ops[iop].portsOut[ipo].value);\n\n                    // if (port2)port2.deSerializeSettings(objPort);\n                    if (port2 && objPort.expose) port2.setUiAttribs({ \"expose\": true });\n                }\n            }\n            newOps.push(op);\n        }\n\n        const timeused = Math.round(100 * (CABLES.now() - start)) / 100;\n        if (!this.silent && timeused > 5) console.log(\"long op init \", obj.ops[iop].objName, timeused);\n    }\n    if (window.logStartup)logStartup(\"add ops done\");\n\n    for (const i in this.ops)\n    {\n        if (this.ops[i].onLoadedValueSet)\n        {\n            this.ops[i].onLoadedValueSet(this.ops[i]._origData);\n            this.ops[i].onLoadedValueSet = null;\n            this.ops[i]._origData = null;\n        }\n        this.ops[i].emitEvent(\"loadedValueSet\");\n    }\n\n    if (window.logStartup)logStartup(\"creating links\");\n\n    // create links...\n    if (obj.ops)\n    {\n        for (let iop = 0; iop < obj.ops.length; iop++)\n        {\n            if (obj.ops[iop].portsIn)\n            {\n                for (let ipi2 = 0; ipi2 < obj.ops[iop].portsIn.length; ipi2++)\n                {\n                    if (obj.ops[iop].portsIn[ipi2] && obj.ops[iop].portsIn[ipi2].links)\n                    {\n                        for (let ili = 0; ili < obj.ops[iop].portsIn[ipi2].links.length; ili++)\n                        {\n                            let found = false;\n\n                            this._addLink(\n                                obj.ops[iop].portsIn[ipi2].links[ili].objIn,\n                                obj.ops[iop].portsIn[ipi2].links[ili].objOut,\n                                obj.ops[iop].portsIn[ipi2].links[ili].portIn,\n                                obj.ops[iop].portsIn[ipi2].links[ili].portOut);\n\n                            // const took = performance.now - startTime;\n                            // if (took > 100)console.log(obj().ops[iop].portsIn[ipi2].links[ili].objIn, obj.ops[iop].portsIn[ipi2].links[ili].objOut, took);\n                        }\n                    }\n                }\n            }\n            if (obj.ops[iop].portsOut)\n                for (let ipi2 = 0; ipi2 < obj.ops[iop].portsOut.length; ipi2++)\n                    if (obj.ops[iop].portsOut[ipi2] && obj.ops[iop].portsOut[ipi2].links)\n                    {\n                        for (let ili = 0; ili < obj.ops[iop].portsOut[ipi2].links.length; ili++)\n                        {\n                            if (obj.ops[iop].portsOut[ipi2].links[ili])\n                            {\n                                if (obj.ops[iop].portsOut[ipi2].links[ili].subOpRef)\n                                {\n                                    // lost link\n                                    const outOp = this.getOpById(obj.ops[iop].portsOut[ipi2].links[ili].objOut);\n                                    let dstOp = null;\n                                    let theSubPatch = 0;\n\n                                    for (let i = 0; i < this.ops.length; i++)\n                                    {\n                                        if (\n                                            this.ops[i].storage &&\n                                            this.ops[i].storage.ref == obj.ops[iop].portsOut[ipi2].links[ili].subOpRef &&\n                                            outOp.uiAttribs.subPatch == this.ops[i].uiAttribs.subPatch\n                                        )\n                                        {\n                                            theSubPatch = this.ops[i].patchId.get();\n                                            break;\n                                        }\n                                    }\n\n                                    for (let i = 0; i < this.ops.length; i++)\n                                    {\n                                        if (\n                                            this.ops[i].storage &&\n                                            this.ops[i].storage.ref == obj.ops[iop].portsOut[ipi2].links[ili].refOp &&\n                                            this.ops[i].uiAttribs.subPatch == theSubPatch)\n                                        {\n                                            dstOp = this.ops[i];\n                                            break;\n                                        }\n                                    }\n\n                                    if (!dstOp) this._log.warn(\"could not find op for lost link\");\n                                    else\n                                        this._addLink(\n                                            dstOp.id,\n                                            obj.ops[iop].portsOut[ipi2].links[ili].objOut,\n\n                                            obj.ops[iop].portsOut[ipi2].links[ili].portIn,\n                                            obj.ops[iop].portsOut[ipi2].links[ili].portOut);\n                                }\n                                else\n                                {\n                                    this._addLink(obj.ops[iop].portsOut[ipi2].links[ili].objIn, obj.ops[iop].portsOut[ipi2].links[ili].objOut, obj.ops[iop].portsOut[ipi2].links[ili].portIn, obj.ops[iop].portsOut[ipi2].links[ili].portOut);\n                                }\n                            }\n                        }\n                    }\n        }\n    }\n\n    if (window.logStartup)logStartup(\"calling ops onloaded\");\n\n    for (const i in this.ops)\n    {\n        if (this.ops[i].onLoaded)\n        {\n            // TODO: deprecate!!!\n            this.ops[i].onLoaded();\n            this.ops[i].onLoaded = null;\n        }\n    }\n\n    if (window.logStartup)logStartup(\"initializing ops...\");\n    for (const i in this.ops)\n    {\n        if (this.ops[i].init)\n        {\n            this.ops[i].init();\n            this.ops[i].init = null;\n        }\n    }\n\n    if (window.logStartup)logStartup(\"initializing vars...\");\n\n    if (this.config.variables)\n        for (const varName in this.config.variables)\n            this.setVarValue(varName, this.config.variables[varName]);\n\n    if (window.logStartup)logStartup(\"initializing var ports\");\n\n    for (const i in this.ops)\n    {\n        this.ops[i].initVarPorts();\n        delete this.ops[i].uiAttribs.pasted;\n    }\n\n    setTimeout(() => { this.loading.finished(loadingId); }, 100);\n\n    if (window.logStartup)logStartup(\"calling onPatchLoaded/patchLoadEnd\");\n\n    if (this.config.onPatchLoaded) this.config.onPatchLoaded(this);\n\n    this.deSerialized = true;\n    this.emitEvent(\"patchLoadEnd\", newOps, obj, options.genIds);\n};\n\nPatch.prototype.profile = function (enable)\n{\n    this.profiler = new _core_profiler__WEBPACK_IMPORTED_MODULE_6__.Profiler(this);\n    for (const i in this.ops)\n    {\n        this.ops[i].profile(enable);\n    }\n};\n\n// ----------------------\n\n/**\n * set variable value\n * @function setVariable\n * @memberof Patch\n * @instance\n * @param {String} name of variable\n * @param {Number|String|Boolean} value\n */\nPatch.prototype.setVariable = function (name, val)\n{\n    // if (this._variables.hasOwnProperty(name))\n    if (this._variables[name] !== undefined)\n    {\n        this._variables[name].setValue(val);\n    }\n    else\n    {\n        console.log(\"variable \" + name + \" not found!\");\n    }\n};\n\nPatch.prototype._sortVars = function ()\n{\n    if (!this.isEditorMode()) return;\n    const ordered = {};\n    Object.keys(this._variables).sort(\n        (a, b) =>\n        { return a.localeCompare(b, \"en\", { \"sensitivity\": \"base\" }); }\n    ).forEach((key) =>\n    {\n        ordered[key] = this._variables[key];\n    });\n    this._variables = ordered;\n};\n\n/**\n * has variable\n * @function hasVariable\n * @memberof Patch\n * @instance\n * @param {String} name of variable\n */\nPatch.prototype.hasVar = function (name)\n{\n    return this._variables[name] !== undefined;\n\n    // return this._variables.hasOwnProperty(name);\n};\n\n// used internally\nPatch.prototype.setVarValue = function (name, val, type)\n{\n    if (this.hasVar(name))\n    {\n        this._variables[name].setValue(val);\n    }\n    else\n    {\n        this._variables[name] = new _core_variable__WEBPACK_IMPORTED_MODULE_10__[\"default\"](name, val, type);\n        this._sortVars();\n        this.emitEvent(\"variablesChanged\");\n    }\n    return this._variables[name];\n};\n// old?\nPatch.prototype.getVarValue = function (name, val)\n{\n    if (this._variables.hasOwnProperty(name)) return this._variables[name].getValue();\n};\n\n/**\n * @function getVar\n * @memberof Patch\n * @instance\n * @param {String} name\n * @return {Variable} variable\n */\nPatch.prototype.getVar = function (name)\n{\n    if (this._variables.hasOwnProperty(name)) return this._variables[name];\n};\n\n\nPatch.prototype.deleteVar = function (name)\n{\n    for (let i = 0; i < this.ops.length; i++)\n        for (let j = 0; j < this.ops[i].portsIn.length; j++)\n            if (this.ops[i].portsIn[j].getVariableName() == name)\n                this.ops[i].portsIn[j].setVariable(null);\n\n    delete this._variables[name];\n    this.emitEvent(\"variableDeleted\", name);\n    this.emitEvent(\"variablesChanged\");\n};\n\n/**\n * @function getVars\n * @memberof Patch\n * @instance\n * @return {Array<Variable>} variables\n * @function\n */\nPatch.prototype.getVars = function (t)\n{\n    if (t === undefined) return this._variables;\n\n    const vars = [];\n    if (t == CABLES.OP_PORT_TYPE_STRING) t = \"string\";\n    if (t == CABLES.OP_PORT_TYPE_VALUE) t = \"number\";\n    if (t == CABLES.OP_PORT_TYPE_ARRAY) t = \"array\";\n    if (t == CABLES.OP_PORT_TYPE_OBJECT) t = \"object\";\n\n    for (const i in this._variables)\n    {\n        if (!this._variables[i].type || this._variables[i].type == t) vars.push(this._variables[i]);\n    }\n    return vars;\n};\n\n/**\n * @function exitError\n * @memberof Patch\n * @instance\n * @description cancel patch execution and quit showing an errormessage\n * @function\n */\nPatch.prototype.exitError = function (errorId, errorMessage, ex)\n{\n    this.aborted = true;\n\n    if (this && this.config && this.config.onError)\n    {\n        this.config.onError(errorId, errorMessage);\n    }\n    else\n    {\n        if (!this.isEditorMode())\n        {\n            const newDiv = document.createElement(\"div\");\n\n            const rect = this.cgl.canvas.getBoundingClientRect();\n\n            newDiv.setAttribute(\"style\", \"position:absolute;border:5px solid red;padding:15px;background-color:black;color:white;font-family:monospace;\");\n            newDiv.style.top = rect.top + \"px\";\n            newDiv.style.left = rect.left + \"px\";\n            let str = \"cables - An error occured:<br/>\";\n            str += \"[\" + errorId + \"] - \" + errorMessage;\n            if (ex)str += \"<br/>Exception: \" + ex.message;\n            newDiv.innerHTML = str;\n\n            const pe = this.cgl.canvas.parentElement;\n\n            while (pe.hasChildNodes()) pe.removeChild(pe.lastChild);\n\n            document.body.appendChild(newDiv);\n        }\n    }\n};\n\n/**\n * @function preRenderOps\n * @memberof Patch\n * @instance\n * @description invoke pre rendering of ops\n * @function\n */\nPatch.prototype.preRenderOps = function ()\n{\n    this._log.log(\"prerendering...\");\n\n    for (let i = 0; i < this.ops.length; i++)\n    {\n        if (this.ops[i].preRender)\n        {\n            this.ops[i].preRender();\n            this._log.log(\"prerender \" + this.ops[i].objName);\n        }\n    }\n};\n\n/**\n * @function dispose\n * @memberof Patch\n * @instance\n * @description stop, dispose and cleanup patch\n */\nPatch.prototype.dispose = function ()\n{\n    this.pause();\n    this.clear();\n    this.cgl.dispose();\n};\n\nPatch.prototype.pushTriggerStack = function (p)\n{\n    this._triggerStack.push(p);\n};\n\nPatch.prototype.popTriggerStack = function ()\n{\n    this._triggerStack.pop();\n};\n\nPatch.prototype.printTriggerStack = function ()\n{\n    if (this._triggerStack.length == 0)\n    {\n        // console.log(\"stack length\", this._triggerStack.length); // eslint-disable-line\n        return;\n    }\n    console.groupCollapsed( // eslint-disable-line\n        \"trigger port stack \" + this._triggerStack[this._triggerStack.length - 1].op.name + \".\" + this._triggerStack[this._triggerStack.length - 1].name,\n    );\n\n    const rows = [];\n    for (let i = 0; i < this._triggerStack.length; i++)\n    {\n        rows.push(i + \". \" + this._triggerStack[i].op.name + \" \" + this._triggerStack[i].name);\n    }\n\n    console.table(rows); // eslint-disable-line\n    console.groupEnd(); // eslint-disable-line\n};\n\n/**\n * returns document object of the patch could be != global document object when opening canvas ina popout window\n * @function getDocument\n * @memberof Patch\n * @instance\n * @return {Object} document\n */\nPatch.prototype.getDocument = function ()\n{\n    return this.cgl.canvas.ownerDocument;\n};\n\nPatch.replaceOpIds = function (json, options)\n{\n    const opids = {};\n    for (const i in json.ops)\n    {\n        opids[json.ops[i].id] = json.ops[i];\n    }\n\n    for (const j in json.ops)\n    {\n        for (const k in json.ops[j].portsOut)\n        {\n            const links = json.ops[j].portsOut[k].links;\n            if (links)\n            {\n                let l = links.length;\n\n                while (l--)\n                {\n                    if (links[l] && (!opids[links[l].objIn] || !opids[links[l].objOut]))\n                    {\n                        if (!options.doNotUnlinkLostLinks)\n                        {\n                            links.splice(l, 1);\n                        }\n                        else\n                        {\n                            if (options.fixLostLinks)\n                            {\n                                // console.log(\"lost link...?\", links[l]);\n                                const op = gui.corePatch().getOpById(links[l].objIn);\n                                if (!op) console.log(\"op not found!\");\n                                else\n                                {\n                                    const outerOp = gui.patchView.getSubPatchOuterOp(op.uiAttribs.subPatch);\n                                    if (outerOp)\n                                    {\n                                        op.storage = op.storage || {};\n                                        op.storage.ref = op.storage.ref || CABLES.shortId();\n                                        links[l].refOp = op.storage.ref;\n                                        links[l].subOpRef = outerOp.storage.ref;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n\n\n    for (const i in json.ops)\n    {\n        const op = json.ops[i];\n        const oldId = op.id;\n        let newId = CABLES.shortId();\n        if (options.prefixHash) newId = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.prefixedHash)(options.prefixHash + oldId);\n        else if (options.prefixId) newId = options.prefixId + oldId;\n        else if (options.refAsId) // when saving json\n        {\n            if (op.storage && op.storage.ref)\n            {\n                newId = op.storage.ref;\n                delete op.storage.ref;\n            }\n            else\n            {\n                op.storage = op.storage || {};\n                op.storage.ref = newId = CABLES.shortId();\n            }\n        }\n\n        const newID = op.id = newId;\n\n        if (options.oldIdAsRef) // when loading json\n        {\n            op.storage = op.storage || {};\n            op.storage.ref = oldId;\n        }\n\n        for (const j in json.ops)\n        {\n            if (json.ops[j].portsIn)\n                for (const k in json.ops[j].portsIn)\n                {\n                    if (json.ops[j].portsIn[k].links)\n                    {\n                        let l = json.ops[j].portsIn[k].links.length;\n\n                        while (l--) if (json.ops[j].portsIn[k].links[l] === null) json.ops[j].portsIn[k].links.splice(l, 1);\n\n                        for (l in json.ops[j].portsIn[k].links)\n                        {\n                            if (json.ops[j].portsIn[k].links[l].objIn === oldId) json.ops[j].portsIn[k].links[l].objIn = newID;\n                            if (json.ops[j].portsIn[k].links[l].objOut === oldId) json.ops[j].portsIn[k].links[l].objOut = newID;\n                        }\n                    }\n                }\n\n            if (json.ops[j].portsOut)\n                for (const k in json.ops[j].portsOut)\n                {\n                    if (json.ops[j].portsOut[k].links)\n                    {\n                        let l = json.ops[j].portsOut[k].links.length;\n\n                        while (l--) if (json.ops[j].portsOut[k].links[l] === null) json.ops[j].portsOut[k].links.splice(l, 1);\n\n                        for (l in json.ops[j].portsOut[k].links)\n                        {\n                            if (json.ops[j].portsOut[k].links[l].objIn === oldId) json.ops[j].portsOut[k].links[l].objIn = newID;\n                            if (json.ops[j].portsOut[k].links[l].objOut === oldId) json.ops[j].portsOut[k].links[l].objOut = newID;\n                        }\n                    }\n                }\n        }\n    }\n\n    // set correct subpatch\n    const subpatchIds = [];\n    const fixedSubPatches = [];\n\n    for (let i = 0; i < json.ops.length; i++)\n    {\n        // if (CABLES.Op.isSubPatchOpName(json.ops[i].objName))\n        if (json.ops[i].storage && json.ops[i].storage.subPatchVer)\n        {\n            for (const k in json.ops[i].portsIn)\n            {\n                if (json.ops[i].portsIn[k].name === \"patchId\")\n                {\n                    let newId = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.uuid)();\n                    if (options.prefixHash) newId = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.prefixedHash)(options.prefixHash + json.ops[i].portsIn[k].value);\n\n                    const oldSubPatchId = json.ops[i].portsIn[k].value;\n                    const newSubPatchId = json.ops[i].portsIn[k].value = newId;\n\n                    subpatchIds.push(newSubPatchId);\n\n                    for (let j = 0; j < json.ops.length; j++)\n                    {\n                        // op has no uiAttribs in export, we don't care about subpatches in export though\n                        if (json.ops[j].uiAttribs)\n                        {\n                            if (json.ops[j].uiAttribs.subPatch === oldSubPatchId)\n                            {\n                                json.ops[j].uiAttribs.subPatch = newSubPatchId;\n                                fixedSubPatches.push(json.ops[j].id);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (const kk in json.ops)\n    {\n        let found = false;\n        for (let j = 0; j < fixedSubPatches.length; j++)\n        {\n            if (json.ops[kk].id === fixedSubPatches[j])\n            {\n                found = true;\n                break;\n            }\n        }\n        // op has no uiAttribs in export, we don't care about subpatches in export though\n        if (!found && json.ops[kk].uiAttribs && options.parentSubPatchId != null)\n            json.ops[kk].uiAttribs.subPatch = options.parentSubPatchId;\n    }\n\n    return json;\n};\n\n/**\n * remove an eventlistener\n * @instance\n * @function addEventListener\n * @param {String} name of event\n * @param {function} callback\n */\n\n/**\n * remove an eventlistener\n * @instance\n * @function removeEventListener\n * @param {String} name of event\n * @param {function} callback\n */\n\n/**\n * op added to patch event\n * @event onOpAdd\n *\n * @memberof Patch\n * @type {Object}\n * @property {Op} op new op\n */\n\n/**\n * op deleted from patch\n * @event onOpDelete\n * @memberof Patch\n * @type {Object}\n * @property {Op} op that will be deleted\n */\n\n/**\n * link event - two ports will be linked\n * @event onLink\n * @memberof Patch\n * @type {Object}\n * @property {Port} port1\n * @property {Port} port2\n */\n\n/**\n * unlink event - a link was deleted\n * @event onUnLink\n * @memberof Patch\n * @type {Object}\n */\n\n/**\n * variables has been changed / a variable has been added to the patch\n * @event variablesChanged\n * @memberof Patch\n * @type {Object}\n * @property {Port} port1\n * @property {Port} port2\n */\n\n/**\n * configuration object for loading a patch\n * @typedef {Object} PatchConfig\n * @hideconstructor\n * @property {String} [prefixAssetPath=''] prefix for path to assets\n * @property {String} [assetPath=''] path to assets\n * @property {String} [jsPath=''] path to javascript files\n * @property {String} [glCanvasId='glcanvas'] dom element id of canvas element\n * @property {Function} [onError=null] called when an error occurs\n * @property {Function} [onFinishedLoading=null] called when patch finished loading all assets\n * @property {Function} [onFirstFrameRendered=null] called when patch rendered it's first frame\n * @property {Boolean} [glCanvasResizeToWindow=false] resize canvas automatically to window size\n * @property {Boolean} [doRequestAnimation=true] do requestAnimationFrame set to false if you want to trigger exec() from outside (only do if you know what you are doing)\n * @property {Boolean} [clearCanvasColor=true] clear canvas in transparent color every frame\n * @property {Boolean} [clearCanvasDepth=true] clear depth every frame\n * @property {Boolean} [glValidateShader=true] enable/disable validation of shaders *\n * @property {Boolean} [silent=false]\n * @property {Number} [fpsLimit=0] 0 for maximum possible frames per second\n * @property {String} [glslPrecision='mediump'] default precision for glsl shader\n *\n */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Patch);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/core_patch.js\n");

/***/ }),

/***/ "./src/core/core_port.js":
/*!*******************************!*\
  !*** ./src/core/core_port.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Port\": () => (/* binding */ Port)\n/* harmony export */ });\n/* harmony import */ var _eventtarget__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventtarget */ \"./src/core/eventtarget.js\");\n/* harmony import */ var _anim__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./anim */ \"./src/core/anim.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"./src/core/constants.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core_logger */ \"./src/core/core_logger.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"./src/core/utils.js\");\n\n\n\n\n\n\n\n/**\n * data is coming into and out of ops through input and output ports\n * @external CABLES\n * @namespace Port\n * @class\n * @hideconstructor\n * @example\n * const myPort=op.inString(\"String Port\");\n */\nconst Port = function (___op, name, type, uiAttribs)\n{\n    _eventtarget__WEBPACK_IMPORTED_MODULE_0__.EventTarget.apply(this);\n\n    this.data = {}; // UNUSED, DEPRECATED, only left in for backwards compatibility with userops\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"core_port\");\n    /**\n     * @type {Number}\n     * @name direction\n     * @instance\n     * @memberof Port\n     * @description direction of port (input(0) or output(1))\n     */\n    this.direction = _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.PORT.PORT_DIR_IN;\n    this.id = String(CABLES.simpleId());\n    this._op = ___op;\n\n    /**\n     * @type {Array<Link>}\n     * @name links\n     * @instance\n     * @memberof Port\n     * @description links of port\n     */\n    this.links = [];\n    this.value = 0.0;\n    this.name = name;\n    this.type = type || _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE;\n    this.uiAttribs = uiAttribs || {};\n    this.anim = null;\n    this._oldAnimVal = -5711;\n    this.defaultValue = null;\n\n\n    this._uiActiveState = true;\n    this.ignoreValueSerialize = false;\n    this.onLinkChanged = null;\n    this.crashed = false;\n\n    this._valueBeforeLink = null;\n    this._lastAnimFrame = -1;\n    this._animated = false;\n\n    this.onValueChanged = null;\n    this.onTriggered = null;\n    this.onUiActiveStateChange = null;\n    this.changeAlways = false;\n    this.forceRefChange = false;\n\n    this._useVariableName = null;\n\n    this.activityCounter = 0;\n    this.apf = 0;\n    this.activityCounterStartFrame = 0;\n\n    this._tempLastUiValue = null;\n\n    Object.defineProperty(this, \"title\", {\n        get()\n        {\n            return this.uiAttribs.title || this.name;\n        } });\n\n\n    Object.defineProperty(this, \"parent\", {\n        get()\n        {\n            this._log.stack(\"use port.op, not .parent\");\n            return this._op;\n        } });\n\n\n\n    Object.defineProperty(this, \"op\", {\n        get()\n        {\n            return this._op;\n        } });\n\n\n    Object.defineProperty(this, \"val\", {\n        get()\n        {\n            this._log.warn(\"val getter deprecated!\", this);\n            this._log.stack(\"val getter deprecated\");\n            return this.get();\n        },\n        set(v)\n        {\n            this._log.warn(\"val setter deprecated!\", this);\n            this._log.stack(\"val setter deprecated\");\n            this.setValue(v);\n        }\n    });\n};\n\n\n/**\n * copy over a uiattrib from an external connected port to another port\n * @function copyLinkedUiAttrib\n * @memberof Port\n * @param {which} attrib name\n * @param {Port} source port\n * @instance\n * @example\n\ninArray.onLinkChanged=()=>\n{\n    if(inArray) inArray.copyLinkedUiAttrib(\"stride\", outArray);\n};\n\n */\nPort.prototype.copyLinkedUiAttrib = function (which, port)\n{\n    if (!CABLES.UI) return;\n    if (!this.isLinked()) return;\n\n    const attr = {};\n    attr[which] = this.links[0].getOtherPort(this).getUiAttrib(which);\n    port.setUiAttribs(attr);\n};\n\n\n// TODO make extend class for ports, like for ops only for ui\nPort.prototype.getValueForDisplay = function ()\n{\n    let str = this.value;\n\n    if (typeof this.value === \"string\" || this.value instanceof String)\n    {\n        if (str.length > 1000)\n        {\n            str = str.substring(0, 999);\n            str += \"...\";\n        }\n        if (this.uiAttribs && (this.uiAttribs.display == \"boolnum\"))\n        {\n            str += \" - \";\n\n            if (!this.value) str += \"false\";\n            else str += \"true\";\n        }\n\n        // str = str.replace(/(<([^>]+)>)/ig, \"\");\n\n        str = str.replace(/[\\u00A0-\\u9999<>\\&]/g, function (i)\n        {\n            return \"&#\" + i.charCodeAt(0) + \";\";\n        });\n\n\n        if (str.length > 100) str = str.substring(0, 100);\n    }\n    else\n    {\n        str = this.value;\n    }\n    return str;\n};\n\n/**\n * change listener for input value ports, overwrite to react to changes\n * @function onChange\n * @memberof Port\n * @instance\n * @example\n * const myPort=op.inString(\"MyPort\");\n * myPort.onChange=function()\n * {\n *   console.log(\"was changed to: \",myPort.get());\n * }\n *\n */\n\nPort.prototype.onAnimToggle = function () {};\nPort.prototype._onAnimToggle = function ()\n{\n    this.onAnimToggle();\n};\n\n\n/**\n * @function remove\n * @memberof Port\n * @instance\n * @description remove port\n */\nPort.prototype.remove = function ()\n{\n    // this.setUiAttribs({hidePort:true});\n    this.removeLinks();\n    this._op.removePort(this);\n};\n\n/**\n * set ui attributes\n * @function setUiAttribs\n * @memberof Port\n * @instance\n * @param {Object} newAttribs\n * <pre>\n * title - overwrite title of port (by default this is portname)\n * greyout - port paramater will appear greyed out, can not be\n * hidePort - port will be hidden from op\n * hideParam - port params will be hidden from parameter panel\n * showIndex - only for dropdowns - show value index (e.g. `0 - normal` )\n * editorSyntax - set syntax highlighting theme for editor port\n * ignoreObjTypeErrors - do not auto check object types\n * </pre>\n * @example\n * myPort.setUiAttribs({greyout:true});\n */\nPort.prototype.setUiAttribs = function (newAttribs)\n{\n    let changed = false;\n    if (!this.uiAttribs) this.uiAttribs = {};\n\n    for (const p in newAttribs)\n    {\n        if (this.uiAttribs[p] != newAttribs[p]) changed = true;\n        this.uiAttribs[p] = newAttribs[p];\n\n        if (p == \"group\" && this.indexPort) this.indexPort.setUiAttribs({ \"group\": newAttribs[p] });\n    }\n\n    if (newAttribs.hasOwnProperty(\"expose\")) this._op.patch.emitEvent(\"subpatchExpose\", this._op.uiAttribs.subPatch);\n\n    if (changed) this.emitEvent(\"onUiAttrChange\", newAttribs, this);\n};\n\n/**\n * get ui attributes\n * @function getUiAttribs\n * @memberof Port\n * @example\n * myPort.getUiAttribs();\n */\nPort.prototype.getUiAttribs = function ()\n{\n    return this.uiAttribs;\n};\n\n/**\n * get ui attribute\n * @function getUiAttrib\n * @memberof Port\n * @instance\n * @param {String} attribName\n * <pre>\n * attribName - return value of the ui-attribute, or null on unknown attribute\n * </pre>\n * @example\n * myPort.setUiAttribs(\"values\");\n */\nPort.prototype.getUiAttrib = function (attribName)\n{\n    if (!this.uiAttribs || !this.uiAttribs.hasOwnProperty(attribName))\n    {\n        return null;\n    }\n    return this.uiAttribs[attribName];\n};\n\n/**\n * @function get\n * @memberof Port\n * @instance\n * @description get value of port\n */\nPort.prototype.get = function ()\n{\n    if (this._animated && this._lastAnimFrame != this._op.patch.getFrameNum())\n    {\n        this._lastAnimFrame = this._op.patch.getFrameNum();\n        this.value = this.anim.getValue(this._op.patch.timer.getTime());\n\n        this._oldAnimVal = this.value;\n        this.forceChange();\n    }\n\n    return this.value;\n};\n\nPort.prototype.setRef = function (v)\n{\n    this.forceRefChange = true;\n    this.set(v);\n};\n\n/**\n * @function setValue\n * @memberof Port\n * @instance\n * @description set value of port / will send value to all linked ports (only for output ports)\n */\nPort.prototype.set = Port.prototype.setValue = function (v)\n{\n    if (v === undefined) v = null;\n\n    if (this._op.enabled && !this.crashed)\n    {\n        if (v !== this.value || this.changeAlways || this.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_TEXTURE || this.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_ARRAY)\n        {\n            if (this._animated)\n            {\n                this.anim.setValue(this._op.patch.timer.getTime(), v);\n            }\n            else\n            {\n                try\n                {\n                    this.value = v;\n                    this.forceChange();\n                }\n                catch (ex)\n                {\n                    this.crashed = true;\n                    this.setValue = function (_v) {};\n                    this.onTriggered = function () {};\n\n                    this._log.error(\"onvaluechanged exception cought\", ex);\n                    this._log.error(ex.stack);\n                    this._log.warn(\"exception in: \" + this._op.name);\n\n                    if (this._op.patch.isEditorMode()) gui.showOpCrash(this._op);\n\n                    this._op.patch.emitEvent(\"exception\", ex, this._op);\n                    if (this._op.onError) this._op.onError(ex);\n                }\n\n                if (this._op && this._op.patch && this._op.patch.isEditorMode() && this.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_TEXTURE) gui.texturePreview().updateTexturePort(this);\n            }\n\n            if (this.direction == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.PORT.PORT_DIR_OUT) for (let i = 0; i < this.links.length; ++i) this.links[i].setValue();\n        }\n    }\n};\n\nPort.prototype.updateAnim = function ()\n{\n    if (this._animated)\n    {\n        this.value = this.get();\n\n        if (this._oldAnimVal != this.value || this.changeAlways)\n        {\n            this._oldAnimVal = this.value;\n            this.forceChange();\n        }\n        this._oldAnimVal = this.value;\n    }\n};\n\nPort.args = function (func)\n{\n    return (func + \"\")\n        .replace(/[/][/].*$/gm, \"\") // strip single-line comments\n        .replace(/\\s+/g, \"\") // strip white space\n        .replace(/[/][*][^/*]*[*][/]/g, \"\") // strip multi-line comments\n        .split(\"){\", 1)[0]\n        .replace(/^[^(]*[(]/, \"\") // extract the parameters\n        .replace(/=[^,]+/g, \"\") // strip any ES6 defaults\n        .split(\",\")\n        .filter(Boolean); // split & filter [\"\"]\n};\n\nPort.prototype.forceChange = function ()\n{\n    if (this.onValueChanged || this.onChange)\n    {\n        // very temporary: deprecated warning!!!!!!!!!\n        // var params=Port.args(this.onValueChanged||this.onChange)\n        // if(params.length>0) this._log.warn('TOM: port has onchange params!',this._op.objName,this.name);\n    }\n    this._activity();\n    this.emitEvent(\"change\", this.value, this);\n\n    if (this.onChange) this.onChange(this, this.value);\n    else if (this.onValueChanged) this.onValueChanged(this, this.value); // deprecated\n};\n\n/**\n * @function getTypeString\n * @memberof Port\n * @instance\n * @description get port type as string, e.g. \"Function\",\"Value\"...\n * @return {String} type\n */\nPort.prototype.getTypeString = function ()\n{\n    if (this.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE) return \"Number\";\n    if (this.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION) return \"Trigger\";\n    if (this.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT) return \"Object\";\n    if (this.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC) return \"Dynamic\";\n    if (this.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_ARRAY) return \"Array\";\n    if (this.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_STRING) return \"String\";\n    return \"Unknown\";\n};\n\nPort.prototype.deSerializeSettings = function (objPort)\n{\n    if (!objPort) return;\n    if (objPort.animated) this.setAnimated(objPort.animated);\n    if (objPort.useVariable) this.setVariableName(objPort.useVariable);\n    if (objPort.title) this.setUiAttribs({ \"title\": objPort.title });\n    if (objPort.expose) this.setUiAttribs({ \"expose\": true });\n    if (objPort.order) this.setUiAttribs({ \"order\": objPort.order });\n    if (objPort.anim)\n    {\n        if (!this.anim) this.anim = new _anim__WEBPACK_IMPORTED_MODULE_1__.Anim({ \"name\": \"port \" + this.name });\n        this._op._hasAnimPort = true;\n        this.anim.addEventListener(\"onChange\", () =>\n        {\n            this._op.patch.emitEvent(\"portAnimUpdated\", this._op, this, this.anim);\n        });\n        if (objPort.anim.loop) this.anim.loop = objPort.anim.loop;\n        for (const ani in objPort.anim.keys)\n        {\n            this.anim.keys.push(new _anim__WEBPACK_IMPORTED_MODULE_1__.ANIM.Key(objPort.anim.keys[ani]));\n        }\n        this.anim.sortKeys();\n    }\n};\n\nPort.prototype.getSerialized = function ()\n{\n    let obj = {};\n    obj.name = this.getName();\n\n    if (!this.ignoreValueSerialize && this.links.length === 0)\n    {\n        if (this.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT && this.value && this.value.tex)\n        {\n        }\n        else obj.value = this.value;\n    }\n    if (this._useVariableName) obj.useVariable = this._useVariableName;\n    if (this._animated) obj.animated = true;\n    if (this.anim) obj.anim = this.anim.getSerialized();\n    if (this.uiAttribs.display == \"file\") obj.display = this.uiAttribs.display;\n    if (this.uiAttribs.expose)\n    {\n        obj.expose = true;\n        if (this.uiAttribs.hasOwnProperty(\"order\")) obj.order = this.uiAttribs.order;\n    }\n    if (this.uiAttribs.title) obj.title = this.uiAttribs.title;\n    if (this.direction == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.PORT.PORT_DIR_OUT && this.links.length > 0)\n    {\n        obj.links = [];\n        for (const i in this.links)\n        {\n            if (!this.links[i].ignoreInSerialize && (this.links[i].portIn && this.links[i].portOut)) obj.links.push(this.links[i].getSerialized());\n        }\n    }\n\n    if (this.direction == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.PORT.PORT_DIR_IN && this.links.length > 0)\n    {\n        for (const i in this.links)\n        {\n            if (!this.links[i].portIn || !this.links[i].portOut) continue;\n\n            const otherp = this.links[i].getOtherPort(this);\n            if (otherp.op.isInBlueprint2() && !this.op.isInBlueprint2())\n            {\n                obj.links = obj.links || [];\n                obj.links.push(this.links[i].getSerialized());\n            }\n        }\n    }\n\n    if (obj.links && obj.links.length == 0) delete obj.links;\n    if (this.type === _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION) delete obj.value;\n    if (this.type === _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION && this.links.length == 0) obj = null;\n    if (obj && Object.keys(obj).length == 1 && obj.name)obj = null;\n    (0,_utils__WEBPACK_IMPORTED_MODULE_4__.cleanJson)(obj);\n\n    return obj;\n};\n\nPort.prototype.shouldLink = function ()\n{\n    return true;\n};\n\n/**\n * @function removeLinks\n * @memberof Port\n * @instance\n * @description remove all links from port\n */\nPort.prototype.removeLinks = function ()\n{\n    let count = 0;\n    while (this.links.length > 0)\n    {\n        count++;\n        if (count > 5000)\n        {\n            this._log.warn(\"could not delete links... / infinite loop\");\n            this.links.length = 0;\n            break;\n        }\n        this.links[0].remove();\n    }\n};\n\n/**\n * @function removeLink\n * @memberof Port\n * @instance\n * @description remove all link from port\n * @param {CABLES.Link} link\n */\nPort.prototype.removeLink = function (link)\n{\n    for (const i in this.links)\n        if (this.links[i] == link)\n            this.links.splice(i, 1);\n\n    if (this.direction == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.PORT.PORT_DIR_IN)\n    {\n        if (this.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE) this.setValue(this._valueBeforeLink || 0);\n        else this.setValue(this._valueBeforeLink || null);\n    }\n\n    if (CABLES.UI && this._op.checkLinkTimeWarnings) this._op.checkLinkTimeWarnings();\n\n    if (this.onLinkChanged) this.onLinkChanged();\n    this.emitEvent(\"onLinkChanged\");\n    this._op.emitEvent(\"onLinkChanged\");\n};\n\n/**\n * @function getName\n * @memberof Port\n * @instance\n * @description return port name\n */\nPort.prototype.getName = function ()\n{\n    return this.name;\n};\n\n/**\n * @function getTitle\n * @memberof Port\n * @instance\n * @description return port name or title\n */\nPort.prototype.getTitle = function ()\n{\n    if (this.uiAttribs.title) return this.uiAttribs.title;\n    return this.name;\n};\n\nPort.prototype.addLink = function (l)\n{\n    this._valueBeforeLink = this.value;\n    this.links.push(l);\n    if (CABLES.UI && this._op.checkLinkTimeWarnings) this._op.checkLinkTimeWarnings();\n\n    if (this.onLinkChanged) this.onLinkChanged();\n    this.emitEvent(\"onLinkChanged\");\n    this._op.emitEvent(\"onLinkChanged\");\n};\n\n/**\n * @function getLinkTo\n * @memberof Port\n * @instance\n * @param {Port} otherPort\n * @description return link, which is linked to otherPort\n */\nPort.prototype.getLinkTo = function (p2)\n{\n    for (const i in this.links) if (this.links[i].portIn == p2 || this.links[i].portOut == p2) return this.links[i];\n};\n\n/**\n * @function removeLinkTo\n * @memberof Port\n * @instance\n * @param {Port} otherPort\n * @description removes link, which is linked to otherPort\n */\nPort.prototype.removeLinkTo = function (p2)\n{\n    for (const i in this.links)\n    {\n        if (this.links[i].portIn == p2 || this.links[i].portOut == p2)\n        {\n            this.links[i].remove();\n            if (CABLES.UI && this._op.checkLinkTimeWarnings) this._op.checkLinkTimeWarnings();\n\n            if (this.onLinkChanged) this.onLinkChanged();\n            this.emitEvent(\"onLinkChanged\");\n            return;\n        }\n    }\n};\n\n/**\n * @function isLinkedTo\n * @memberof Port\n * @instance\n * @param {Port} otherPort\n * @description returns true if port is linked to otherPort\n */\nPort.prototype.isLinkedTo = function (p2)\n{\n    for (const i in this.links) if (this.links[i].portIn == p2 || this.links[i].portOut == p2) return true;\n\n    return false;\n};\n\nPort.prototype._activity = function ()\n{\n    this.activityCounter++;\n};\n\n/**\n * @function trigger\n * @memberof Port\n * @instance\n * @description trigger the linked port (usually invoked on an output function port)\n */\nPort.prototype.trigger = function ()\n{\n    const linksLength = this.links.length;\n\n    this._activity();\n    if (linksLength === 0) return;\n    if (!this._op.enabled) return;\n\n    let portTriggered = null;\n    try\n    {\n        for (let i = 0; i < linksLength; ++i)\n        {\n            if (this.links[i].portIn)\n            {\n                portTriggered = this.links[i].portIn;\n\n                portTriggered.op.patch.pushTriggerStack(portTriggered);\n                portTriggered._onTriggered();\n\n                portTriggered.op.patch.popTriggerStack();\n            }\n            if (this.links[i]) this.links[i].activity();\n        }\n    }\n    catch (ex)\n    {\n        this._op.enabled = false;\n\n        if (this._op.patch.isEditorMode())\n        {\n            this._op.patch.emitEvent(\"exception\", ex, portTriggered.op);\n            this._op.patch.emitEvent(\"opcrash\", portTriggered);\n            if (portTriggered.op.onError) portTriggered.op.onError(ex);\n        }\n        this._log.warn(\"exception!\");\n        this._log.error(\"ontriggered exception caught\", ex);\n        this._log.error(ex.stack);\n        this._log.warn(\"exception in: \" + portTriggered.op.name);\n    }\n};\n\nPort.prototype.call = function ()\n{\n    this._log.warn(\"call deprecated - use trigger() \");\n    this.trigger();\n};\n\nPort.prototype.execute = function ()\n{\n    this._log.warn(\"### execute port: \" + this.getName(), this.goals.length);\n};\n\nPort.prototype.setVariableName = function (n)\n{\n    this._useVariableName = n;\n\n\n    this._op.patch.on(\"variableRename\", (oldname, newname) =>\n    {\n        if (oldname != this._useVariableName) return;\n        this._useVariableName = newname;\n    });\n};\n\nPort.prototype.getVariableName = function ()\n{\n    return this._useVariableName;\n};\n\nPort.prototype.setVariable = function (v)\n{\n    this.setAnimated(false);\n    const attr = { \"useVariable\": false };\n\n    if (this._variableIn && this._varChangeListenerId)\n    {\n        this._variableIn.off(this._varChangeListenerId);\n        this._variableIn = null;\n    }\n\n    if (v)\n    {\n        this._variableIn = this._op.patch.getVar(v);\n\n        if (!this._variableIn)\n        {\n            this._log.warn(\"PORT VAR NOT FOUND!!!\", v);\n        }\n        else\n        {\n            if (this.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT)\n            {\n                this._varChangeListenerId = this._variableIn.on(\"change\", () => { this.set(null); this.set(this._variableIn.getValue()); });\n            }\n            else\n            {\n                this._varChangeListenerId = this._variableIn.on(\"change\", this.set.bind(this));\n            }\n            this.set(this._variableIn.getValue());\n        }\n        this._useVariableName = v;\n        attr.useVariable = true;\n        attr.variableName = this._useVariableName;\n    }\n    else\n    {\n        attr.variableName = this._useVariableName = null;\n        attr.useVariable = false;\n    }\n\n    this.setUiAttribs(attr);\n    this._op.patch.emitEvent(\"portSetVariable\", this._op, this, v);\n};\n\nPort.prototype._handleNoTriggerOpAnimUpdates = function (a)\n{\n    let hasTriggerPort = false;\n    for (let i = 0; i < this._op.portsIn.length; i++)\n    {\n        if (this._op.portsIn.type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION)\n        {\n            hasTriggerPort = true;\n            break;\n        }\n    }\n\n    if (!hasTriggerPort)\n    {\n        if (a) this._notriggerAnimUpdate = this._op.patch.on(\"onRenderFrame\",\n            () =>\n            {\n                this.updateAnim();\n            });\n        else this._op.patch.removeEventListener(this._notriggerAnimUpdate);\n    }\n};\n\nPort.prototype.setAnimated = function (a)\n{\n    if (this._animated != a)\n    {\n        this._animated = a;\n        this._op._hasAnimPort = true;\n\n        if (this._animated && !this.anim)\n        {\n            this.anim = new _anim__WEBPACK_IMPORTED_MODULE_1__.Anim({ \"name\": \"port \" + this.name });\n            this.anim.addEventListener(\"onChange\", () =>\n            {\n                this._op.patch.emitEvent(\"portAnimUpdated\", this._op, this, this.anim);\n            });\n        }\n        this._onAnimToggle();\n    }\n\n    this._handleNoTriggerOpAnimUpdates(a);\n    if (!a)\n    {\n        this.anim = null;\n    }\n\n    this.setUiAttribs({ \"isAnimated\": this._animated });\n};\n\nPort.prototype.toggleAnim = function ()\n{\n    this._animated = !this._animated;\n    if (this._animated && !this.anim)\n    {\n        this.anim = new _anim__WEBPACK_IMPORTED_MODULE_1__.Anim({ \"name\": \"port \" + this.name });\n        this.anim.addEventListener(\"onChange\", () =>\n        {\n            this._op.patch.emitEvent(\"portAnimUpdated\", this._op, this, this.anim);\n        });\n    }\n    this.setAnimated(this._animated);\n    this._onAnimToggle();\n    this.setUiAttribs({ \"isAnimated\": this._animated });\n};\n\n/**\n * <pre>\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_VALUE = 0;\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION = 1;\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_OBJECT = 2;\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_TEXTURE = 2;\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_ARRAY = 3;\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC = 4;\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_STRING = 5;\n * </pre>\n * @function getType\n * @memberof Port\n * @instance\n * @return {Number} type of port\n */\nPort.prototype.getType = function ()\n{\n    return this.type;\n};\n\n/**\n * @function isLinked\n * @memberof Port\n * @instance\n * @return {Boolean} true if port is linked\n */\nPort.prototype.isLinked = function ()\n{\n    return this.links.length > 0 || this._animated || this._useVariableName != null;\n};\n\nPort.prototype.isBoundToVar = function ()\n{\n    const b = this._useVariableName != null;\n    this.uiAttribs.boundToVar = b;\n    return b;\n};\n/**\n * @function isAnimated\n * @memberof Port\n * @instance\n * @return {Boolean} true if port is animated\n */\nPort.prototype.isAnimated = function ()\n{\n    return this._animated;\n};\n\n/**\n * @function isHidden\n * @memberof Port\n * @instance\n * @return {Boolean} true if port is hidden\n */\nPort.prototype.isHidden = function ()\n{\n    return this.uiAttribs.hidePort;\n};\n\n/**\n * @function onTriggered\n * @memberof Port\n * @instance\n * @param {onTriggeredCallback} callback\n * @description set callback, which will be executed when port was triggered (usually output port)\n */\nPort.prototype._onTriggered = function (a)\n{\n    this._activity();\n    this._op.updateAnims();\n    if (this._op.enabled && this.onTriggered) this.onTriggered(a);\n};\n\nPort.prototype._onSetProfiling = function (v)\n{\n    this._op.patch.profiler.add(\"port\", this);\n    this.setValue(v);\n    // if (this._op.enabled && this.onTriggered) this.onTriggered();\n    this._op.patch.profiler.add(\"port\", null);\n};\n\nPort.prototype._onTriggeredProfiling = function ()\n{\n    // this._op.updateAnims();\n\n    if (this._op.enabled && this.onTriggered)\n    {\n        this._op.patch.profiler.add(\"port\", this);\n        this.onTriggered();\n        this._op.patch.profiler.add(\"port\", null);\n    }\n};\n\nPort.prototype.onValueChange = function (cb)\n{\n    // deprecated\n    this.onChange = cb;\n};\n\nPort.prototype.getUiActiveState = function ()\n{\n    return this._uiActiveState;\n};\n\nPort.prototype.setUiActiveState = function (onoff)\n{\n    this._uiActiveState = onoff;\n    if (this.onUiActiveStateChange) this.onUiActiveStateChange();\n};\n\nPort.prototype.hidePort = function ()\n{\n    this._log.warn(\"op.hideport() is deprecated, do not use it!\");\n};\n\n\n/**\n * Returns the port type string, e.g. \"value\" based on the port type number\n * @function portTypeNumberToString\n * @instance\n * @memberof Port\n * @param {Number} type - The port type number\n * @returns {String} - The port type as string\n */\nPort.portTypeNumberToString = function (type)\n{\n    if (type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_VALUE) return \"value\";\n    if (type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION) return \"function\";\n    if (type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT) return \"object\";\n    if (type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_ARRAY) return \"array\";\n    if (type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_STRING) return \"string\";\n    if (type == _constants__WEBPACK_IMPORTED_MODULE_2__.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC) return \"dynamic\";\n    return \"unknown\";\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/core_port.js\n");

/***/ }),

/***/ "./src/core/core_port_select.js":
/*!**************************************!*\
  !*** ./src/core/core_port_select.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ValueSelectPort\": () => (/* binding */ ValueSelectPort)\n/* harmony export */ });\n/* harmony import */ var _core_port_switch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core_port_switch */ \"./src/core/core_port_switch.js\");\n\n\n\n\nclass ValueSelectPort extends _core_port_switch__WEBPACK_IMPORTED_MODULE_0__.SwitchPort\n{\n    setUiAttribs(newAttribs)\n    {\n        // never unhide valuePort when indexPort is linked\n        if (this.indexPort.isLinked())\n        {\n            for (const p in newAttribs)\n            {\n                if (p == \"greyout\" && !newAttribs[p]) newAttribs[p] = \"true\";\n            }\n        }\n        super.setUiAttribs(newAttribs);\n    }\n}\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jb3JlX3BvcnRfc2VsZWN0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL2NvcmVfcG9ydF9zZWxlY3QuanM/Y2FiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IFN3aXRjaFBvcnQgfSBmcm9tIFwiLi9jb3JlX3BvcnRfc3dpdGNoXCI7XG5cblxuY2xhc3MgVmFsdWVTZWxlY3RQb3J0IGV4dGVuZHMgU3dpdGNoUG9ydFxue1xuICAgIHNldFVpQXR0cmlicyhuZXdBdHRyaWJzKVxuICAgIHtcbiAgICAgICAgLy8gbmV2ZXIgdW5oaWRlIHZhbHVlUG9ydCB3aGVuIGluZGV4UG9ydCBpcyBsaW5rZWRcbiAgICAgICAgaWYgKHRoaXMuaW5kZXhQb3J0LmlzTGlua2VkKCkpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgcCBpbiBuZXdBdHRyaWJzKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmIChwID09IFwiZ3JleW91dFwiICYmICFuZXdBdHRyaWJzW3BdKSBuZXdBdHRyaWJzW3BdID0gXCJ0cnVlXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIuc2V0VWlBdHRyaWJzKG5ld0F0dHJpYnMpO1xuICAgIH1cbn1cblxuXG5cbmV4cG9ydCB7IFZhbHVlU2VsZWN0UG9ydCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/core_port_select.js\n");

/***/ }),

/***/ "./src/core/core_port_switch.js":
/*!**************************************!*\
  !*** ./src/core/core_port_switch.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SwitchPort\": () => (/* binding */ SwitchPort)\n/* harmony export */ });\n/* harmony import */ var _core_port__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core_port */ \"./src/core/core_port.js\");\n\n\n\n\nclass SwitchPort extends _core_port__WEBPACK_IMPORTED_MODULE_0__.Port\n{\n    constructor(__parent, name, type, uiAttribs, indexPort)\n    {\n        super(__parent, name, type, uiAttribs);\n\n        this.get = () =>\n        {\n            let s = super.get();\n\n            if (CABLES.UI)\n            {\n                if (\n                    s === \"\" ||\n                    s === null ||\n                    s === undefined ||\n                    (uiAttribs.values && uiAttribs.values.indexOf(String(s)) === -1)\n                )\n                {\n                    this.op.setUiError(\"invalidswitch\", \"Invalid Value [\" + this.name + \"]: \\\"\" + s + \"\\\"\");\n                }\n                else this.op.setUiError(\"invalidswitch\", null);\n            }\n\n            if (s === null || s === undefined)s = \"\";\n\n            return s;\n        };\n\n        this.indexPort = indexPort;\n        this.indexPort.set = (value) =>\n        {\n            const values = uiAttribs.values;\n\n            if (!values)\n            {\n                // console.log(\"switch port has no values\", this);\n                return;\n            }\n\n            let intValue = Math.floor(value);\n\n            intValue = Math.min(intValue, values.length - 1);\n            intValue = Math.max(intValue, 0);\n\n            this.indexPort.setValue(intValue);\n            this.set(values[intValue]);\n\n            if (this.op.patch.isEditorMode() && window.gui && gui.patchView.isCurrentOp(this.op)) gui.opParams.show(this.op);\n        };\n    }\n\n    setUiAttribs(attribs)\n    {\n        const hidePort = attribs.hidePort;\n        attribs.hidePort = true;\n        super.setUiAttribs(attribs);\n        if (typeof hidePort !== \"undefined\")\n        {\n            this.indexPort.setUiAttribs({ hidePort });\n        }\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jb3JlX3BvcnRfc3dpdGNoLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ0FCTEVTLy4vc3JjL2NvcmUvY29yZV9wb3J0X3N3aXRjaC5qcz82NTM3Il0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgUG9ydCB9IGZyb20gXCIuL2NvcmVfcG9ydFwiO1xuXG5cbmNsYXNzIFN3aXRjaFBvcnQgZXh0ZW5kcyBQb3J0XG57XG4gICAgY29uc3RydWN0b3IoX19wYXJlbnQsIG5hbWUsIHR5cGUsIHVpQXR0cmlicywgaW5kZXhQb3J0KVxuICAgIHtcbiAgICAgICAgc3VwZXIoX19wYXJlbnQsIG5hbWUsIHR5cGUsIHVpQXR0cmlicyk7XG5cbiAgICAgICAgdGhpcy5nZXQgPSAoKSA9PlxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgcyA9IHN1cGVyLmdldCgpO1xuXG4gICAgICAgICAgICBpZiAoQ0FCTEVTLlVJKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgcyA9PT0gXCJcIiB8fFxuICAgICAgICAgICAgICAgICAgICBzID09PSBudWxsIHx8XG4gICAgICAgICAgICAgICAgICAgIHMgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgICAgICAgICAodWlBdHRyaWJzLnZhbHVlcyAmJiB1aUF0dHJpYnMudmFsdWVzLmluZGV4T2YoU3RyaW5nKHMpKSA9PT0gLTEpXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcC5zZXRVaUVycm9yKFwiaW52YWxpZHN3aXRjaFwiLCBcIkludmFsaWQgVmFsdWUgW1wiICsgdGhpcy5uYW1lICsgXCJdOiBcXFwiXCIgKyBzICsgXCJcXFwiXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHRoaXMub3Auc2V0VWlFcnJvcihcImludmFsaWRzd2l0Y2hcIiwgbnVsbCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzID09PSBudWxsIHx8IHMgPT09IHVuZGVmaW5lZClzID0gXCJcIjtcblxuICAgICAgICAgICAgcmV0dXJuIHM7XG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5pbmRleFBvcnQgPSBpbmRleFBvcnQ7XG4gICAgICAgIHRoaXMuaW5kZXhQb3J0LnNldCA9ICh2YWx1ZSkgPT5cbiAgICAgICAge1xuICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gdWlBdHRyaWJzLnZhbHVlcztcblxuICAgICAgICAgICAgaWYgKCF2YWx1ZXMpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJzd2l0Y2ggcG9ydCBoYXMgbm8gdmFsdWVzXCIsIHRoaXMpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbGV0IGludFZhbHVlID0gTWF0aC5mbG9vcih2YWx1ZSk7XG5cbiAgICAgICAgICAgIGludFZhbHVlID0gTWF0aC5taW4oaW50VmFsdWUsIHZhbHVlcy5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgIGludFZhbHVlID0gTWF0aC5tYXgoaW50VmFsdWUsIDApO1xuXG4gICAgICAgICAgICB0aGlzLmluZGV4UG9ydC5zZXRWYWx1ZShpbnRWYWx1ZSk7XG4gICAgICAgICAgICB0aGlzLnNldCh2YWx1ZXNbaW50VmFsdWVdKTtcblxuICAgICAgICAgICAgaWYgKHRoaXMub3AucGF0Y2guaXNFZGl0b3JNb2RlKCkgJiYgd2luZG93Lmd1aSAmJiBndWkucGF0Y2hWaWV3LmlzQ3VycmVudE9wKHRoaXMub3ApKSBndWkub3BQYXJhbXMuc2hvdyh0aGlzLm9wKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBzZXRVaUF0dHJpYnMoYXR0cmlicylcbiAgICB7XG4gICAgICAgIGNvbnN0IGhpZGVQb3J0ID0gYXR0cmlicy5oaWRlUG9ydDtcbiAgICAgICAgYXR0cmlicy5oaWRlUG9ydCA9IHRydWU7XG4gICAgICAgIHN1cGVyLnNldFVpQXR0cmlicyhhdHRyaWJzKTtcbiAgICAgICAgaWYgKHR5cGVvZiBoaWRlUG9ydCAhPT0gXCJ1bmRlZmluZWRcIilcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5pbmRleFBvcnQuc2V0VWlBdHRyaWJzKHsgaGlkZVBvcnQgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCB7IFN3aXRjaFBvcnQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/core_port_switch.js\n");

/***/ }),

/***/ "./src/core/core_profiler.js":
/*!***********************************!*\
  !*** ./src/core/core_profiler.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Profiler\": () => (/* binding */ Profiler)\n/* harmony export */ });\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer */ \"./src/core/timer.js\");\n\n\nclass Profiler\n{\n    constructor(patch)\n    {\n        this.startFrame = patch.getFrameNum();\n        this.items = {};\n        this.currentId = null;\n        this.currentStart = 0;\n        this._patch = patch;\n    }\n\n    getItems()\n    {\n        return this.items;\n    }\n\n    clear()\n    {\n        if (this.paused) return;\n        this.items = {};\n    }\n\n    togglePause()\n    {\n        this.paused = !this.paused;\n        if (!this.paused)\n        {\n            this.items = {};\n            this.currentStart = performance.now();\n        }\n    }\n\n    add(type, object)\n    {\n        if (this.paused) return;\n\n        if (this.currentId !== null)\n        {\n            if (!object || object.id != this.currentId)\n            {\n                if (this.items[this.currentId])\n                {\n                    this.items[this.currentId].timeUsed += performance.now() - this.currentStart;\n\n                    if (!this.items[this.currentId].peakTime || (0,_timer__WEBPACK_IMPORTED_MODULE_0__.now)() - this.items[this.currentId].peakTime > 5000)\n                    {\n                        this.items[this.currentId].peak = 0;\n                        this.items[this.currentId].peakTime = (0,_timer__WEBPACK_IMPORTED_MODULE_0__.now)();\n                    }\n                    this.items[this.currentId].peak = Math.max(this.items[this.currentId].peak, performance.now() - this.currentStart);\n                }\n            }\n        }\n\n        if (object !== null)\n        {\n            if (!this.items[object.id])\n            {\n                this.items[object.id] = {\n                    \"numTriggers\": 0,\n                    \"timeUsed\": 0,\n                };\n            }\n\n            if (this.items[object.id].lastFrame != this._patch.getFrameNum()) this.items[object.id].numTriggers = 0;\n\n            this.items[object.id].lastFrame = this._patch.getFrameNum();\n            this.items[object.id].numTriggers++;\n            this.items[object.id].opid = object.op.id;\n            this.items[object.id].title = object.op.name + \".\" + object.name;\n            this.items[object.id].subPatch = object.op.uiAttribs.subPatch;\n\n            this.currentId = object.id;\n            this.currentStart = performance.now();\n        }\n        else\n        {\n            this.currentId = null;\n        }\n    }\n\n    print()\n    {\n        console.log(\"--------\");\n        for (const i in this.items)\n        {\n            console.log(this.items[i].title + \": \" + this.items[i].numTriggers + \" / \" + this.items[i].timeUsed);\n        }\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jb3JlX3Byb2ZpbGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DQUJMRVMvLi9zcmMvY29yZS9jb3JlX3Byb2ZpbGVyLmpzP2FiMzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbm93IH0gZnJvbSBcIi4vdGltZXJcIjtcblxuY2xhc3MgUHJvZmlsZXJcbntcbiAgICBjb25zdHJ1Y3RvcihwYXRjaClcbiAgICB7XG4gICAgICAgIHRoaXMuc3RhcnRGcmFtZSA9IHBhdGNoLmdldEZyYW1lTnVtKCk7XG4gICAgICAgIHRoaXMuaXRlbXMgPSB7fTtcbiAgICAgICAgdGhpcy5jdXJyZW50SWQgPSBudWxsO1xuICAgICAgICB0aGlzLmN1cnJlbnRTdGFydCA9IDA7XG4gICAgICAgIHRoaXMuX3BhdGNoID0gcGF0Y2g7XG4gICAgfVxuXG4gICAgZ2V0SXRlbXMoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXRlbXM7XG4gICAgfVxuXG4gICAgY2xlYXIoKVxuICAgIHtcbiAgICAgICAgaWYgKHRoaXMucGF1c2VkKSByZXR1cm47XG4gICAgICAgIHRoaXMuaXRlbXMgPSB7fTtcbiAgICB9XG5cbiAgICB0b2dnbGVQYXVzZSgpXG4gICAge1xuICAgICAgICB0aGlzLnBhdXNlZCA9ICF0aGlzLnBhdXNlZDtcbiAgICAgICAgaWYgKCF0aGlzLnBhdXNlZClcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5pdGVtcyA9IHt9O1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50U3RhcnQgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFkZCh0eXBlLCBvYmplY3QpXG4gICAge1xuICAgICAgICBpZiAodGhpcy5wYXVzZWQpIHJldHVybjtcblxuICAgICAgICBpZiAodGhpcy5jdXJyZW50SWQgIT09IG51bGwpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmICghb2JqZWN0IHx8IG9iamVjdC5pZCAhPSB0aGlzLmN1cnJlbnRJZClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5pdGVtc1t0aGlzLmN1cnJlbnRJZF0pXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1zW3RoaXMuY3VycmVudElkXS50aW1lVXNlZCArPSBwZXJmb3JtYW5jZS5ub3coKSAtIHRoaXMuY3VycmVudFN0YXJ0O1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5pdGVtc1t0aGlzLmN1cnJlbnRJZF0ucGVha1RpbWUgfHwgbm93KCkgLSB0aGlzLml0ZW1zW3RoaXMuY3VycmVudElkXS5wZWFrVGltZSA+IDUwMDApXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXNbdGhpcy5jdXJyZW50SWRdLnBlYWsgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtc1t0aGlzLmN1cnJlbnRJZF0ucGVha1RpbWUgPSBub3coKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1zW3RoaXMuY3VycmVudElkXS5wZWFrID0gTWF0aC5tYXgodGhpcy5pdGVtc1t0aGlzLmN1cnJlbnRJZF0ucGVhaywgcGVyZm9ybWFuY2Uubm93KCkgLSB0aGlzLmN1cnJlbnRTdGFydCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9iamVjdCAhPT0gbnVsbClcbiAgICAgICAge1xuICAgICAgICAgICAgaWYgKCF0aGlzLml0ZW1zW29iamVjdC5pZF0pXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5pdGVtc1tvYmplY3QuaWRdID0ge1xuICAgICAgICAgICAgICAgICAgICBcIm51bVRyaWdnZXJzXCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwidGltZVVzZWRcIjogMCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5pdGVtc1tvYmplY3QuaWRdLmxhc3RGcmFtZSAhPSB0aGlzLl9wYXRjaC5nZXRGcmFtZU51bSgpKSB0aGlzLml0ZW1zW29iamVjdC5pZF0ubnVtVHJpZ2dlcnMgPSAwO1xuXG4gICAgICAgICAgICB0aGlzLml0ZW1zW29iamVjdC5pZF0ubGFzdEZyYW1lID0gdGhpcy5fcGF0Y2guZ2V0RnJhbWVOdW0oKTtcbiAgICAgICAgICAgIHRoaXMuaXRlbXNbb2JqZWN0LmlkXS5udW1UcmlnZ2VycysrO1xuICAgICAgICAgICAgdGhpcy5pdGVtc1tvYmplY3QuaWRdLm9waWQgPSBvYmplY3Qub3AuaWQ7XG4gICAgICAgICAgICB0aGlzLml0ZW1zW29iamVjdC5pZF0udGl0bGUgPSBvYmplY3Qub3AubmFtZSArIFwiLlwiICsgb2JqZWN0Lm5hbWU7XG4gICAgICAgICAgICB0aGlzLml0ZW1zW29iamVjdC5pZF0uc3ViUGF0Y2ggPSBvYmplY3Qub3AudWlBdHRyaWJzLnN1YlBhdGNoO1xuXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRJZCA9IG9iamVjdC5pZDtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudFN0YXJ0ID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRJZCA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcmludCgpXG4gICAge1xuICAgICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tXCIpO1xuICAgICAgICBmb3IgKGNvbnN0IGkgaW4gdGhpcy5pdGVtcylcbiAgICAgICAge1xuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5pdGVtc1tpXS50aXRsZSArIFwiOiBcIiArIHRoaXMuaXRlbXNbaV0ubnVtVHJpZ2dlcnMgKyBcIiAvIFwiICsgdGhpcy5pdGVtc1tpXS50aW1lVXNlZCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCB7IFByb2ZpbGVyIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/core_profiler.js\n");

/***/ }),

/***/ "./src/core/core_variable.js":
/*!***********************************!*\
  !*** ./src/core/core_variable.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _eventtarget__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventtarget */ \"./src/core/eventtarget.js\");\n\n\n/**\n * @type {Object}\n * @name Variable\n * @param {String} name\n * @param {String|Number} value\n * @memberof Patch\n * @constructor\n */\nclass PatchVariable extends _eventtarget__WEBPACK_IMPORTED_MODULE_0__.EventTarget\n{\n    constructor(name, val, type)\n    {\n        super();\n        this._name = name;\n        this.type = type;\n        this.setValue(val);\n    }\n\n    /**\n     * keeping this for backwards compatibility in older\n     * exports before using eventtarget\n     *\n     * @param cb\n     */\n    addListener(cb)\n    {\n        this.on(\"change\", cb, \"var\");\n    }\n\n    /**\n     * @function Variable.getValue\n     * @memberof Variable\n     * @returns {String|Number|Boolean}\n     */\n\n    getValue()\n    {\n        return this._v;\n    }\n\n    /**\n     * @function getName\n     * @memberof Variable\n     * @instance\n     * @returns {String|Number|Boolean}\n     * @function\n     */\n    getName()\n    {\n        return this._name;\n    }\n\n    /**\n     * @function setValue\n     * @memberof Variable\n     * @instance\n     * @returns {String|Number|Boolean}\n     * @function\n     */\n    setValue(v)\n    {\n        this._v = v;\n        this.emitEvent(\"change\", v, this);\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PatchVariable);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9jb3JlX3ZhcmlhYmxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ0FCTEVTLy4vc3JjL2NvcmUvY29yZV92YXJpYWJsZS5qcz85YzViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50VGFyZ2V0IH0gZnJvbSBcIi4vZXZlbnR0YXJnZXRcIjtcblxuLyoqXG4gKiBAdHlwZSB7T2JqZWN0fVxuICogQG5hbWUgVmFyaWFibGVcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IHZhbHVlXG4gKiBAbWVtYmVyb2YgUGF0Y2hcbiAqIEBjb25zdHJ1Y3RvclxuICovXG5jbGFzcyBQYXRjaFZhcmlhYmxlIGV4dGVuZHMgRXZlbnRUYXJnZXRcbntcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCB2YWwsIHR5cGUpXG4gICAge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5zZXRWYWx1ZSh2YWwpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGtlZXBpbmcgdGhpcyBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgaW4gb2xkZXJcbiAgICAgKiBleHBvcnRzIGJlZm9yZSB1c2luZyBldmVudHRhcmdldFxuICAgICAqXG4gICAgICogQHBhcmFtIGNiXG4gICAgICovXG4gICAgYWRkTGlzdGVuZXIoY2IpXG4gICAge1xuICAgICAgICB0aGlzLm9uKFwiY2hhbmdlXCIsIGNiLCBcInZhclwiKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAZnVuY3Rpb24gVmFyaWFibGUuZ2V0VmFsdWVcbiAgICAgKiBAbWVtYmVyb2YgVmFyaWFibGVcbiAgICAgKiBAcmV0dXJucyB7U3RyaW5nfE51bWJlcnxCb29sZWFufVxuICAgICAqL1xuXG4gICAgZ2V0VmFsdWUoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Y7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGZ1bmN0aW9uIGdldE5hbWVcbiAgICAgKiBAbWVtYmVyb2YgVmFyaWFibGVcbiAgICAgKiBAaW5zdGFuY2VcbiAgICAgKiBAcmV0dXJucyB7U3RyaW5nfE51bWJlcnxCb29sZWFufVxuICAgICAqIEBmdW5jdGlvblxuICAgICAqL1xuICAgIGdldE5hbWUoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX25hbWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGZ1bmN0aW9uIHNldFZhbHVlXG4gICAgICogQG1lbWJlcm9mIFZhcmlhYmxlXG4gICAgICogQGluc3RhbmNlXG4gICAgICogQHJldHVybnMge1N0cmluZ3xOdW1iZXJ8Qm9vbGVhbn1cbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKi9cbiAgICBzZXRWYWx1ZSh2KVxuICAgIHtcbiAgICAgICAgdGhpcy5fdiA9IHY7XG4gICAgICAgIHRoaXMuZW1pdEV2ZW50KFwiY2hhbmdlXCIsIHYsIHRoaXMpO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGF0Y2hWYXJpYWJsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/core_variable.js\n");

/***/ }),

/***/ "./src/core/embedding.js":
/*!*******************************!*\
  !*** ./src/core/embedding.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EMBED\": () => (/* binding */ EMBED)\n/* harmony export */ });\n/* harmony import */ var _core_patch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core_patch */ \"./src/core/core_patch.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/core/utils.js\");\n\n\n\nconst EMBED = {};\n\n/**\n * add patch into html element (will create canvas and set size to fill containerElement)\n * @name CABLES.EMBED#addPatch\n * @param {object|string} containerElement dom element or id of element\n * @param {options} patch options\n * @function\n */\nEMBED.addPatch = function (_element, options)\n{\n    let el = _element;\n    let id = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.generateUUID)();\n    if (typeof _element == \"string\")\n    {\n        id = _element;\n        el = document.getElementById(id);\n\n        if (!el)\n        {\n            console.error(id + \" Polyshape Container Element not found!\");\n            return;\n        }\n    }\n\n    const canvEl = document.createElement(\"canvas\");\n    canvEl.id = \"glcanvas_\" + id;\n    canvEl.width = el.clientWidth;\n    canvEl.height = el.clientHeight;\n\n    window.addEventListener(\n        \"resize\",\n        function ()\n        {\n            this.setAttribute(\"width\", el.clientWidth);\n            this.height = el.clientHeight;\n        }.bind(canvEl),\n    );\n\n    el.appendChild(canvEl);\n\n    options = options || {};\n    options.glCanvasId = canvEl.id;\n\n    if (!options.onError)\n    {\n        options.onError = function (err)\n        {\n            console.error(err);\n        };\n    }\n\n    CABLES.patch = new _core_patch__WEBPACK_IMPORTED_MODULE_0__[\"default\"](options);\n    return canvEl;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9lbWJlZGRpbmcuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ0FCTEVTLy4vc3JjL2NvcmUvZW1iZWRkaW5nLmpzP2YwZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBhdGNoIGZyb20gXCIuL2NvcmVfcGF0Y2hcIjtcbmltcG9ydCB7IGdlbmVyYXRlVVVJRCB9IGZyb20gXCIuL3V0aWxzXCI7XG5cbmNvbnN0IEVNQkVEID0ge307XG5cbi8qKlxuICogYWRkIHBhdGNoIGludG8gaHRtbCBlbGVtZW50ICh3aWxsIGNyZWF0ZSBjYW52YXMgYW5kIHNldCBzaXplIHRvIGZpbGwgY29udGFpbmVyRWxlbWVudClcbiAqIEBuYW1lIENBQkxFUy5FTUJFRCNhZGRQYXRjaFxuICogQHBhcmFtIHtvYmplY3R8c3RyaW5nfSBjb250YWluZXJFbGVtZW50IGRvbSBlbGVtZW50IG9yIGlkIG9mIGVsZW1lbnRcbiAqIEBwYXJhbSB7b3B0aW9uc30gcGF0Y2ggb3B0aW9uc1xuICogQGZ1bmN0aW9uXG4gKi9cbkVNQkVELmFkZFBhdGNoID0gZnVuY3Rpb24gKF9lbGVtZW50LCBvcHRpb25zKVxue1xuICAgIGxldCBlbCA9IF9lbGVtZW50O1xuICAgIGxldCBpZCA9IGdlbmVyYXRlVVVJRCgpO1xuICAgIGlmICh0eXBlb2YgX2VsZW1lbnQgPT0gXCJzdHJpbmdcIilcbiAgICB7XG4gICAgICAgIGlkID0gX2VsZW1lbnQ7XG4gICAgICAgIGVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuXG4gICAgICAgIGlmICghZWwpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoaWQgKyBcIiBQb2x5c2hhcGUgQ29udGFpbmVyIEVsZW1lbnQgbm90IGZvdW5kIVwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGNhbnZFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XG4gICAgY2FudkVsLmlkID0gXCJnbGNhbnZhc19cIiArIGlkO1xuICAgIGNhbnZFbC53aWR0aCA9IGVsLmNsaWVudFdpZHRoO1xuICAgIGNhbnZFbC5oZWlnaHQgPSBlbC5jbGllbnRIZWlnaHQ7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgXCJyZXNpemVcIixcbiAgICAgICAgZnVuY3Rpb24gKClcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLCBlbC5jbGllbnRXaWR0aCk7XG4gICAgICAgICAgICB0aGlzLmhlaWdodCA9IGVsLmNsaWVudEhlaWdodDtcbiAgICAgICAgfS5iaW5kKGNhbnZFbCksXG4gICAgKTtcblxuICAgIGVsLmFwcGVuZENoaWxkKGNhbnZFbCk7XG5cbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICBvcHRpb25zLmdsQ2FudmFzSWQgPSBjYW52RWwuaWQ7XG5cbiAgICBpZiAoIW9wdGlvbnMub25FcnJvcilcbiAgICB7XG4gICAgICAgIG9wdGlvbnMub25FcnJvciA9IGZ1bmN0aW9uIChlcnIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBDQUJMRVMucGF0Y2ggPSBuZXcgUGF0Y2gob3B0aW9ucyk7XG4gICAgcmV0dXJuIGNhbnZFbDtcbn07XG5cbmV4cG9ydCB7IEVNQkVEIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/embedding.js\n");

/***/ }),

/***/ "./src/core/eventtarget.js":
/*!*********************************!*\
  !*** ./src/core/eventtarget.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EventTarget\": () => (/* binding */ EventTarget)\n/* harmony export */ });\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core_logger */ \"./src/core/core_logger.js\");\n\n\nconst EventTarget = function ()\n{\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"eventtaget\");\n    this._eventCallbacks = {};\n    this._logName = \"\";\n    this._logEvents = false;\n    this._listeners = {};\n    CABLES.eventTargetProfile = CABLES.eventTargetProfile || {};\n\n    this.addEventListener = this.on = function (which, cb, idPrefix)\n    {\n        const event =\n        {\n            \"id\": (idPrefix || \"\") + CABLES.simpleId(),\n            \"name\": which,\n            \"cb\": cb,\n        };\n        if (!this._eventCallbacks[which]) this._eventCallbacks[which] = [event];\n        else this._eventCallbacks[which].push(event);\n\n        this._listeners[event.id] = event;\n\n        return event.id;\n    };\n\n    this.hasEventListener = function (which, cb)\n    {\n        if (which && !cb)\n        {\n            // check by id\n            if (this._listeners[which]) return true;\n            else return false;\n        }\n        else\n        {\n            this._log.warn(\"old eventtarget function haseventlistener!\");\n            if (which && cb)\n            {\n                if (this._eventCallbacks[which])\n                {\n                    const idx = this._eventCallbacks[which].indexOf(cb);\n                    if (idx == -1) return false;\n                    return true;\n                }\n            }\n        }\n    };\n\n    this.removeEventListener = this.off = function (which, cb)\n    {\n        if (which === null || which === undefined) return;\n\n        if (!cb) // new style, remove by id, not by name/callback\n        {\n            const event = this._listeners[which];\n            if (!event)\n            {\n                console.log(\"could not find event...\");\n                return;\n            }\n\n            let found = true;\n            while (found)\n            {\n                found = false;\n                let index = -1;\n                for (let i = 0; i < this._eventCallbacks[event.name].length; i++)\n                {\n                    if (this._eventCallbacks[event.name][i].id.indexOf(which) === 0) // this._eventCallbacks[event.name][i].id == which ||\n                    {\n                        found = true;\n                        index = i;\n                    }\n                }\n\n                if (index !== -1)\n                {\n                    this._eventCallbacks[event.name].splice(index, 1);\n                    delete this._listeners[which];\n                }\n            }\n\n\n            return;\n        }\n\n        this._log.stack(\" old function signature: removeEventListener! use listener id\");\n\n        let index = null;\n        for (let i = 0; i < this._eventCallbacks[which].length; i++)\n            if (this._eventCallbacks[which][i].cb == cb)\n                index = i;\n\n        if (index !== null)\n        {\n            delete this._eventCallbacks[index];\n        }\n        else this._log.warn(\"removeEventListener not found \" + which);\n    };\n\n    this.logEvents = function (enabled, name)\n    {\n        this._logEvents = enabled;\n        this._logName = name;\n    };\n\n    this.emitEvent = function (which, param1, param2, param3, param4, param5, param6)\n    {\n        if (this._logEvents) console.log(\"[event] \", this._logName, which, this._eventCallbacks); // eslint-disable-line\n\n        if (this._eventCallbacks[which])\n        {\n            const execCallbacks = [];\n            for (let i = 0; i < this._eventCallbacks[which].length; i++)\n            {\n                if (!execCallbacks[which]) execCallbacks[which] = [];\n                execCallbacks[which].push(this._eventCallbacks[which][i]);\n            }\n\n            if (execCallbacks[which])\n            {\n                for (let i = 0; i < execCallbacks[which].length; i++)\n                {\n                    if (execCallbacks[which][i])\n                    {\n                        const evName = this.constructor.name + \" \" + which;\n                        CABLES.eventTargetProfile[evName] = (CABLES.eventTargetProfile[evName] || { \"name\": this.constructor.name, \"event\": which, \"count\": 0 });\n                        CABLES.eventTargetProfile[evName].active = this._eventCallbacks[which].length;\n                        CABLES.eventTargetProfile[evName].count++;\n\n                        execCallbacks[which][i].cb(param1, param2, param3, param4, param5, param6);\n                    }\n                }\n            }\n        }\n        else\n        {\n            if (this._logEvents) console.log(\"[event] has no event callback\", which, this._eventCallbacks); // eslint-disable-line\n        }\n    };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9ldmVudHRhcmdldC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ0FCTEVTLy4vc3JjL2NvcmUvZXZlbnR0YXJnZXQuanM/YWY0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTG9nZ2VyIGZyb20gXCIuL2NvcmVfbG9nZ2VyXCI7XG5cbmNvbnN0IEV2ZW50VGFyZ2V0ID0gZnVuY3Rpb24gKClcbntcbiAgICB0aGlzLl9sb2cgPSBuZXcgTG9nZ2VyKFwiZXZlbnR0YWdldFwiKTtcbiAgICB0aGlzLl9ldmVudENhbGxiYWNrcyA9IHt9O1xuICAgIHRoaXMuX2xvZ05hbWUgPSBcIlwiO1xuICAgIHRoaXMuX2xvZ0V2ZW50cyA9IGZhbHNlO1xuICAgIHRoaXMuX2xpc3RlbmVycyA9IHt9O1xuICAgIENBQkxFUy5ldmVudFRhcmdldFByb2ZpbGUgPSBDQUJMRVMuZXZlbnRUYXJnZXRQcm9maWxlIHx8IHt9O1xuXG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyID0gdGhpcy5vbiA9IGZ1bmN0aW9uICh3aGljaCwgY2IsIGlkUHJlZml4KVxuICAgIHtcbiAgICAgICAgY29uc3QgZXZlbnQgPVxuICAgICAgICB7XG4gICAgICAgICAgICBcImlkXCI6IChpZFByZWZpeCB8fCBcIlwiKSArIENBQkxFUy5zaW1wbGVJZCgpLFxuICAgICAgICAgICAgXCJuYW1lXCI6IHdoaWNoLFxuICAgICAgICAgICAgXCJjYlwiOiBjYixcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKCF0aGlzLl9ldmVudENhbGxiYWNrc1t3aGljaF0pIHRoaXMuX2V2ZW50Q2FsbGJhY2tzW3doaWNoXSA9IFtldmVudF07XG4gICAgICAgIGVsc2UgdGhpcy5fZXZlbnRDYWxsYmFja3Nbd2hpY2hdLnB1c2goZXZlbnQpO1xuXG4gICAgICAgIHRoaXMuX2xpc3RlbmVyc1tldmVudC5pZF0gPSBldmVudDtcblxuICAgICAgICByZXR1cm4gZXZlbnQuaWQ7XG4gICAgfTtcblxuICAgIHRoaXMuaGFzRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uICh3aGljaCwgY2IpXG4gICAge1xuICAgICAgICBpZiAod2hpY2ggJiYgIWNiKVxuICAgICAgICB7XG4gICAgICAgICAgICAvLyBjaGVjayBieSBpZFxuICAgICAgICAgICAgaWYgKHRoaXMuX2xpc3RlbmVyc1t3aGljaF0pIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgZWxzZSByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9sb2cud2FybihcIm9sZCBldmVudHRhcmdldCBmdW5jdGlvbiBoYXNldmVudGxpc3RlbmVyIVwiKTtcbiAgICAgICAgICAgIGlmICh3aGljaCAmJiBjYilcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fZXZlbnRDYWxsYmFja3Nbd2hpY2hdKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaWR4ID0gdGhpcy5fZXZlbnRDYWxsYmFja3Nbd2hpY2hdLmluZGV4T2YoY2IpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaWR4ID09IC0xKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSB0aGlzLm9mZiA9IGZ1bmN0aW9uICh3aGljaCwgY2IpXG4gICAge1xuICAgICAgICBpZiAod2hpY2ggPT09IG51bGwgfHwgd2hpY2ggPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgICAgIGlmICghY2IpIC8vIG5ldyBzdHlsZSwgcmVtb3ZlIGJ5IGlkLCBub3QgYnkgbmFtZS9jYWxsYmFja1xuICAgICAgICB7XG4gICAgICAgICAgICBjb25zdCBldmVudCA9IHRoaXMuX2xpc3RlbmVyc1t3aGljaF07XG4gICAgICAgICAgICBpZiAoIWV2ZW50KVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiY291bGQgbm90IGZpbmQgZXZlbnQuLi5cIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgZm91bmQgPSB0cnVlO1xuICAgICAgICAgICAgd2hpbGUgKGZvdW5kKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZvdW5kID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgbGV0IGluZGV4ID0gLTE7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9ldmVudENhbGxiYWNrc1tldmVudC5uYW1lXS5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl9ldmVudENhbGxiYWNrc1tldmVudC5uYW1lXVtpXS5pZC5pbmRleE9mKHdoaWNoKSA9PT0gMCkgLy8gdGhpcy5fZXZlbnRDYWxsYmFja3NbZXZlbnQubmFtZV1baV0uaWQgPT0gd2hpY2ggfHxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm91bmQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSBpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGluZGV4ICE9PSAtMSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2V2ZW50Q2FsbGJhY2tzW2V2ZW50Lm5hbWVdLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLl9saXN0ZW5lcnNbd2hpY2hdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9sb2cuc3RhY2soXCIgb2xkIGZ1bmN0aW9uIHNpZ25hdHVyZTogcmVtb3ZlRXZlbnRMaXN0ZW5lciEgdXNlIGxpc3RlbmVyIGlkXCIpO1xuXG4gICAgICAgIGxldCBpbmRleCA9IG51bGw7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fZXZlbnRDYWxsYmFja3Nbd2hpY2hdLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgaWYgKHRoaXMuX2V2ZW50Q2FsbGJhY2tzW3doaWNoXVtpXS5jYiA9PSBjYilcbiAgICAgICAgICAgICAgICBpbmRleCA9IGk7XG5cbiAgICAgICAgaWYgKGluZGV4ICE9PSBudWxsKVxuICAgICAgICB7XG4gICAgICAgICAgICBkZWxldGUgdGhpcy5fZXZlbnRDYWxsYmFja3NbaW5kZXhdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgdGhpcy5fbG9nLndhcm4oXCJyZW1vdmVFdmVudExpc3RlbmVyIG5vdCBmb3VuZCBcIiArIHdoaWNoKTtcbiAgICB9O1xuXG4gICAgdGhpcy5sb2dFdmVudHMgPSBmdW5jdGlvbiAoZW5hYmxlZCwgbmFtZSlcbiAgICB7XG4gICAgICAgIHRoaXMuX2xvZ0V2ZW50cyA9IGVuYWJsZWQ7XG4gICAgICAgIHRoaXMuX2xvZ05hbWUgPSBuYW1lO1xuICAgIH07XG5cbiAgICB0aGlzLmVtaXRFdmVudCA9IGZ1bmN0aW9uICh3aGljaCwgcGFyYW0xLCBwYXJhbTIsIHBhcmFtMywgcGFyYW00LCBwYXJhbTUsIHBhcmFtNilcbiAgICB7XG4gICAgICAgIGlmICh0aGlzLl9sb2dFdmVudHMpIGNvbnNvbGUubG9nKFwiW2V2ZW50XSBcIiwgdGhpcy5fbG9nTmFtZSwgd2hpY2gsIHRoaXMuX2V2ZW50Q2FsbGJhY2tzKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgICAgIGlmICh0aGlzLl9ldmVudENhbGxiYWNrc1t3aGljaF0pXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnN0IGV4ZWNDYWxsYmFja3MgPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fZXZlbnRDYWxsYmFja3Nbd2hpY2hdLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmICghZXhlY0NhbGxiYWNrc1t3aGljaF0pIGV4ZWNDYWxsYmFja3Nbd2hpY2hdID0gW107XG4gICAgICAgICAgICAgICAgZXhlY0NhbGxiYWNrc1t3aGljaF0ucHVzaCh0aGlzLl9ldmVudENhbGxiYWNrc1t3aGljaF1baV0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoZXhlY0NhbGxiYWNrc1t3aGljaF0pXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBleGVjQ2FsbGJhY2tzW3doaWNoXS5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChleGVjQ2FsbGJhY2tzW3doaWNoXVtpXSlcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXZOYW1lID0gdGhpcy5jb25zdHJ1Y3Rvci5uYW1lICsgXCIgXCIgKyB3aGljaDtcbiAgICAgICAgICAgICAgICAgICAgICAgIENBQkxFUy5ldmVudFRhcmdldFByb2ZpbGVbZXZOYW1lXSA9IChDQUJMRVMuZXZlbnRUYXJnZXRQcm9maWxlW2V2TmFtZV0gfHwgeyBcIm5hbWVcIjogdGhpcy5jb25zdHJ1Y3Rvci5uYW1lLCBcImV2ZW50XCI6IHdoaWNoLCBcImNvdW50XCI6IDAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBDQUJMRVMuZXZlbnRUYXJnZXRQcm9maWxlW2V2TmFtZV0uYWN0aXZlID0gdGhpcy5fZXZlbnRDYWxsYmFja3Nbd2hpY2hdLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIENBQkxFUy5ldmVudFRhcmdldFByb2ZpbGVbZXZOYW1lXS5jb3VudCsrO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBleGVjQ2FsbGJhY2tzW3doaWNoXVtpXS5jYihwYXJhbTEsIHBhcmFtMiwgcGFyYW0zLCBwYXJhbTQsIHBhcmFtNSwgcGFyYW02KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9sb2dFdmVudHMpIGNvbnNvbGUubG9nKFwiW2V2ZW50XSBoYXMgbm8gZXZlbnQgY2FsbGJhY2tcIiwgd2hpY2gsIHRoaXMuX2V2ZW50Q2FsbGJhY2tzKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgICAgICB9XG4gICAgfTtcbn07XG5cbmV4cG9ydCB7IEV2ZW50VGFyZ2V0IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/eventtarget.js\n");

/***/ }),

/***/ "./src/core/index.js":
/*!***************************!*\
  !*** ./src/core/index.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cgl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cgl */ \"./src/core/cgl/index.js\");\n/* harmony import */ var _base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base64 */ \"./src/core/base64.js\");\n/* harmony import */ var _eventtarget__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./eventtarget */ \"./src/core/eventtarget.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/core/utils.js\");\n/* harmony import */ var _anim__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./anim */ \"./src/core/anim.js\");\n/* harmony import */ var _core_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core_link */ \"./src/core/core_link.js\");\n/* harmony import */ var _core_port__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./core_port */ \"./src/core/core_port.js\");\n/* harmony import */ var _core_op__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./core_op */ \"./src/core/core_op.js\");\n/* harmony import */ var _embedding__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./embedding */ \"./src/core/embedding.js\");\n/* harmony import */ var _core_profiler__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./core_profiler */ \"./src/core/core_profiler.js\");\n/* harmony import */ var _core_patch__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core_patch */ \"./src/core/core_patch.js\");\n/* harmony import */ var _instancing__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./instancing */ \"./src/core/instancing.js\");\n/* harmony import */ var _loadingstatus__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./loadingstatus */ \"./src/core/loadingstatus.js\");\n/* harmony import */ var _webaudio__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./webaudio */ \"./src/core/webaudio.js\");\n/* harmony import */ var _sessionvar__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./sessionvar */ \"./src/core/sessionvar.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./timer */ \"./src/core/timer.js\");\n/* harmony import */ var _patchConnection__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./patchConnection */ \"./src/core/patchConnection.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./constants */ \"./src/core/constants.js\");\n/* harmony import */ var _banchprofiler__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./banchprofiler */ \"./src/core/banchprofiler.js\");\n/* harmony import */ var _cgp__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./cgp */ \"./src/core/cgp/index.js\");\n/* harmony import */ var _cg_cg_constants__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./cg/cg_constants */ \"./src/core/cg/cg_constants.js\");\n // * if you remove this, the project wont build CGL properly.. wtf?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nwindow.CABLES = window.CABLES || {};\n\nCABLES.CG = _cg_cg_constants__WEBPACK_IMPORTED_MODULE_20__.CG;\nCABLES.CGP = _cgp__WEBPACK_IMPORTED_MODULE_19__.CGP;\nCABLES.EventTarget = _eventtarget__WEBPACK_IMPORTED_MODULE_2__.EventTarget;\nCABLES.EMBED = _embedding__WEBPACK_IMPORTED_MODULE_8__.EMBED;\nCABLES.Link = _core_link__WEBPACK_IMPORTED_MODULE_5__.Link;\nCABLES.Port = _core_port__WEBPACK_IMPORTED_MODULE_6__.Port;\nCABLES.Op = _core_op__WEBPACK_IMPORTED_MODULE_7__.Op;\nCABLES.Profiler = _core_profiler__WEBPACK_IMPORTED_MODULE_9__.Profiler;\nCABLES.Patch = _core_patch__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\nCABLES.Instancing = _instancing__WEBPACK_IMPORTED_MODULE_11__.Instancing;\nCABLES.Timer = _timer__WEBPACK_IMPORTED_MODULE_15__.Timer;\nCABLES.WEBAUDIO = _webaudio__WEBPACK_IMPORTED_MODULE_13__.WEBAUDIO;\nCABLES.Variable = _sessionvar__WEBPACK_IMPORTED_MODULE_14__.Variable;\nCABLES.LoadingStatus = _loadingstatus__WEBPACK_IMPORTED_MODULE_12__.LoadingStatus;\nCABLES.now = _timer__WEBPACK_IMPORTED_MODULE_15__.now;\nCABLES.internalNow = _timer__WEBPACK_IMPORTED_MODULE_15__.internalNow;\nCABLES.BranchStack = _banchprofiler__WEBPACK_IMPORTED_MODULE_18__.BranchStack;\nCABLES.Branch = _banchprofiler__WEBPACK_IMPORTED_MODULE_18__.Branch;\n\n\nCABLES = Object.assign(CABLES,\n    _base64__WEBPACK_IMPORTED_MODULE_1__,\n    _utils__WEBPACK_IMPORTED_MODULE_3__,\n    _anim__WEBPACK_IMPORTED_MODULE_4__,\n    _patchConnection__WEBPACK_IMPORTED_MODULE_16__,\n    _constants__WEBPACK_IMPORTED_MODULE_17__.CONSTANTS.PORT,\n    _constants__WEBPACK_IMPORTED_MODULE_17__.CONSTANTS.PACO,\n    _constants__WEBPACK_IMPORTED_MODULE_17__.CONSTANTS.ANIM,\n    _constants__WEBPACK_IMPORTED_MODULE_17__.CONSTANTS.OP\n);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CABLES);\n\nif (!(function () { return !this; }())) console.warn(\"not in strict mode: index core\"); // eslint-disable-line\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DQUJMRVMvLi9zcmMvY29yZS9pbmRleC5qcz9jN2IyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENHTCB9IGZyb20gXCIuL2NnbFwiOyAvLyAqIGlmIHlvdSByZW1vdmUgdGhpcywgdGhlIHByb2plY3Qgd29udCBidWlsZCBDR0wgcHJvcGVybHkuLiB3dGY/XG5pbXBvcnQgKiBhcyBiYXNlNjQgZnJvbSBcIi4vYmFzZTY0XCI7XG5pbXBvcnQgeyBFdmVudFRhcmdldCB9IGZyb20gXCIuL2V2ZW50dGFyZ2V0XCI7XG5pbXBvcnQgKiBhcyB1dGlscyBmcm9tIFwiLi91dGlsc1wiO1xuaW1wb3J0ICogYXMgYW5pbSBmcm9tIFwiLi9hbmltXCI7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSBcIi4vY29yZV9saW5rXCI7XG5pbXBvcnQgeyBQb3J0IH0gZnJvbSBcIi4vY29yZV9wb3J0XCI7XG5pbXBvcnQgeyBPcCB9IGZyb20gXCIuL2NvcmVfb3BcIjtcbmltcG9ydCB7IEVNQkVEIH0gZnJvbSBcIi4vZW1iZWRkaW5nXCI7XG5pbXBvcnQgeyBQcm9maWxlciB9IGZyb20gXCIuL2NvcmVfcHJvZmlsZXJcIjtcbmltcG9ydCBQYXRjaCBmcm9tIFwiLi9jb3JlX3BhdGNoXCI7XG5pbXBvcnQgeyBJbnN0YW5jaW5nIH0gZnJvbSBcIi4vaW5zdGFuY2luZ1wiO1xuaW1wb3J0IHsgTG9hZGluZ1N0YXR1cyB9IGZyb20gXCIuL2xvYWRpbmdzdGF0dXNcIjtcbmltcG9ydCB7IFdFQkFVRElPIH0gZnJvbSBcIi4vd2ViYXVkaW9cIjtcbmltcG9ydCB7IFZhcmlhYmxlIH0gZnJvbSBcIi4vc2Vzc2lvbnZhclwiO1xuaW1wb3J0IHsgVGltZXIsIG5vdywgaW50ZXJuYWxOb3cgfSBmcm9tIFwiLi90aW1lclwiO1xuaW1wb3J0ICogYXMgUGF0Y2hDb25uZWN0aW9ucyBmcm9tIFwiLi9wYXRjaENvbm5lY3Rpb25cIjtcbmltcG9ydCB7IENPTlNUQU5UUyB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgQnJhbmNoU3RhY2ssIEJyYW5jaCB9IGZyb20gXCIuL2JhbmNocHJvZmlsZXJcIjtcbmltcG9ydCB7IENHUCB9IGZyb20gXCIuL2NncFwiO1xuaW1wb3J0IHsgQ0cgfSBmcm9tIFwiLi9jZy9jZ19jb25zdGFudHNcIjtcblxud2luZG93LkNBQkxFUyA9IHdpbmRvdy5DQUJMRVMgfHwge307XG5cbkNBQkxFUy5DRyA9IENHO1xuQ0FCTEVTLkNHUCA9IENHUDtcbkNBQkxFUy5FdmVudFRhcmdldCA9IEV2ZW50VGFyZ2V0O1xuQ0FCTEVTLkVNQkVEID0gRU1CRUQ7XG5DQUJMRVMuTGluayA9IExpbms7XG5DQUJMRVMuUG9ydCA9IFBvcnQ7XG5DQUJMRVMuT3AgPSBPcDtcbkNBQkxFUy5Qcm9maWxlciA9IFByb2ZpbGVyO1xuQ0FCTEVTLlBhdGNoID0gUGF0Y2g7XG5DQUJMRVMuSW5zdGFuY2luZyA9IEluc3RhbmNpbmc7XG5DQUJMRVMuVGltZXIgPSBUaW1lcjtcbkNBQkxFUy5XRUJBVURJTyA9IFdFQkFVRElPO1xuQ0FCTEVTLlZhcmlhYmxlID0gVmFyaWFibGU7XG5DQUJMRVMuTG9hZGluZ1N0YXR1cyA9IExvYWRpbmdTdGF0dXM7XG5DQUJMRVMubm93ID0gbm93O1xuQ0FCTEVTLmludGVybmFsTm93ID0gaW50ZXJuYWxOb3c7XG5DQUJMRVMuQnJhbmNoU3RhY2sgPSBCcmFuY2hTdGFjaztcbkNBQkxFUy5CcmFuY2ggPSBCcmFuY2g7XG5cblxuQ0FCTEVTID0gT2JqZWN0LmFzc2lnbihDQUJMRVMsXG4gICAgYmFzZTY0LFxuICAgIHV0aWxzLFxuICAgIGFuaW0sXG4gICAgUGF0Y2hDb25uZWN0aW9ucyxcbiAgICBDT05TVEFOVFMuUE9SVCxcbiAgICBDT05TVEFOVFMuUEFDTyxcbiAgICBDT05TVEFOVFMuQU5JTSxcbiAgICBDT05TVEFOVFMuT1Bcbik7XG5cbmV4cG9ydCBkZWZhdWx0IENBQkxFUztcblxuaWYgKCEoZnVuY3Rpb24gKCkgeyByZXR1cm4gIXRoaXM7IH0oKSkpIGNvbnNvbGUud2FybihcIm5vdCBpbiBzdHJpY3QgbW9kZTogaW5kZXggY29yZVwiKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/index.js\n");

/***/ }),

/***/ "./src/core/instancing.js":
/*!********************************!*\
  !*** ./src/core/instancing.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Instancing\": () => (/* binding */ Instancing)\n/* harmony export */ });\n// todo: needs to be removed...\n\nconst Instancing = function ()\n{\n    this._loops = [];\n    this._indizes = [];\n    this._index = 0;\n};\n\nInstancing.prototype.pushLoop = function (maxNum)\n{\n    this._loops.push(Math.abs(Math.floor(maxNum)));\n    this._indizes.push(this._index);\n};\n\nInstancing.prototype.popLoop = function ()\n{\n    this._loops.pop();\n    // this._index--;\n    this._index = this._indizes.pop();\n    if (this._loops.length === 0) this._index = 0;\n};\n\nInstancing.prototype.numLoops = function ()\n{\n    return this._loops.length;\n};\n\nInstancing.prototype.numCycles = function ()\n{\n    if (this._loops.length === 0) return 0;\n    let num = this._loops[0];\n    for (let i = 1; i < this._loops.length; i++) num *= this._loops[i];\n\n    return num;\n};\n\nInstancing.prototype.inLoop = function ()\n{\n    return this._loops.length > 0;\n};\n\nInstancing.prototype.increment = function ()\n{\n    this._index++;\n};\n\nInstancing.prototype.index = function ()\n{\n    return this._index;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9pbnN0YW5jaW5nLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ0FCTEVTLy4vc3JjL2NvcmUvaW5zdGFuY2luZy5qcz8xZTQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHRvZG86IG5lZWRzIHRvIGJlIHJlbW92ZWQuLi5cblxuY29uc3QgSW5zdGFuY2luZyA9IGZ1bmN0aW9uICgpXG57XG4gICAgdGhpcy5fbG9vcHMgPSBbXTtcbiAgICB0aGlzLl9pbmRpemVzID0gW107XG4gICAgdGhpcy5faW5kZXggPSAwO1xufTtcblxuSW5zdGFuY2luZy5wcm90b3R5cGUucHVzaExvb3AgPSBmdW5jdGlvbiAobWF4TnVtKVxue1xuICAgIHRoaXMuX2xvb3BzLnB1c2goTWF0aC5hYnMoTWF0aC5mbG9vcihtYXhOdW0pKSk7XG4gICAgdGhpcy5faW5kaXplcy5wdXNoKHRoaXMuX2luZGV4KTtcbn07XG5cbkluc3RhbmNpbmcucHJvdG90eXBlLnBvcExvb3AgPSBmdW5jdGlvbiAoKVxue1xuICAgIHRoaXMuX2xvb3BzLnBvcCgpO1xuICAgIC8vIHRoaXMuX2luZGV4LS07XG4gICAgdGhpcy5faW5kZXggPSB0aGlzLl9pbmRpemVzLnBvcCgpO1xuICAgIGlmICh0aGlzLl9sb29wcy5sZW5ndGggPT09IDApIHRoaXMuX2luZGV4ID0gMDtcbn07XG5cbkluc3RhbmNpbmcucHJvdG90eXBlLm51bUxvb3BzID0gZnVuY3Rpb24gKClcbntcbiAgICByZXR1cm4gdGhpcy5fbG9vcHMubGVuZ3RoO1xufTtcblxuSW5zdGFuY2luZy5wcm90b3R5cGUubnVtQ3ljbGVzID0gZnVuY3Rpb24gKClcbntcbiAgICBpZiAodGhpcy5fbG9vcHMubGVuZ3RoID09PSAwKSByZXR1cm4gMDtcbiAgICBsZXQgbnVtID0gdGhpcy5fbG9vcHNbMF07XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCB0aGlzLl9sb29wcy5sZW5ndGg7IGkrKykgbnVtICo9IHRoaXMuX2xvb3BzW2ldO1xuXG4gICAgcmV0dXJuIG51bTtcbn07XG5cbkluc3RhbmNpbmcucHJvdG90eXBlLmluTG9vcCA9IGZ1bmN0aW9uICgpXG57XG4gICAgcmV0dXJuIHRoaXMuX2xvb3BzLmxlbmd0aCA+IDA7XG59O1xuXG5JbnN0YW5jaW5nLnByb3RvdHlwZS5pbmNyZW1lbnQgPSBmdW5jdGlvbiAoKVxue1xuICAgIHRoaXMuX2luZGV4Kys7XG59O1xuXG5JbnN0YW5jaW5nLnByb3RvdHlwZS5pbmRleCA9IGZ1bmN0aW9uICgpXG57XG4gICAgcmV0dXJuIHRoaXMuX2luZGV4O1xufTtcblxuZXhwb3J0IHsgSW5zdGFuY2luZyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/instancing.js\n");

/***/ }),

/***/ "./src/core/loadingstatus.js":
/*!***********************************!*\
  !*** ./src/core/loadingstatus.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LoadingStatus\": () => (/* binding */ LoadingStatus)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/core/utils.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core_logger */ \"./src/core/core_logger.js\");\n\n\n\n/**\n * LoadingStatus class, manages asynchronous loading jobs\n *\n * @external CABLES\n * @namespace LoadingStatus\n * @hideconstructor\n * @class\n */\nconst LoadingStatus = function (patch)\n{\n    CABLES.EventTarget.apply(this);\n\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"LoadingStatus\");\n    this._loadingAssets = {};\n    this._cbFinished = [];\n    this._assetTasks = [];\n    this._percent = 0;\n    this._count = 0;\n    this._countFinished = 0;\n    this._order = 0;\n    this._startTime = 0;\n    this._patch = patch;\n    this._wasFinishedPrinted = false;\n    this._loadingAssetTaskCb = false;\n};\n\nLoadingStatus.prototype.setOnFinishedLoading = function (cb)\n{\n    this._cbFinished.push(cb);\n};\n\nLoadingStatus.prototype.getNumAssets = function ()\n{\n    return this._countFinished;\n};\n\nLoadingStatus.prototype.getProgress = function ()\n{\n    return this._percent;\n};\n\nLoadingStatus.prototype.checkStatus = function ()\n{\n    this._countFinished = 0;\n    this._count = 0;\n\n    for (const i in this._loadingAssets)\n    {\n        this._count++;\n        if (!this._loadingAssets[i].finished)\n        {\n            this._countFinished++;\n        }\n    }\n\n    this._percent = (this._count - this._countFinished) / this._count;\n\n    if (this._countFinished === 0)\n    {\n        for (let j = 0; j < this._cbFinished.length; j++)\n        {\n            if (this._cbFinished[j])\n            {\n                const cb = this._cbFinished[j];\n                setTimeout(() => { cb(this._patch); this.emitEvent(\"finishedAll\"); }, 100);\n            }\n        }\n\n        if (!this._wasFinishedPrinted)\n        {\n            this._wasFinishedPrinted = true;\n            this.print();\n        }\n        this.emitEvent(\"finishedAll\");\n    }\n};\n\nLoadingStatus.prototype.getList = function ()\n{\n    let arr = [];\n    for (const i in this._loadingAssets)\n    {\n        arr.push(this._loadingAssets[i]);\n    }\n\n    return arr;\n};\n\n\nLoadingStatus.prototype.getListJobs = function ()\n{\n    let arr = [];\n    for (const i in this._loadingAssets)\n    {\n        if (!this._loadingAssets[i].finished)arr.push(this._loadingAssets[i].name);\n    }\n\n    return arr;\n};\n\nLoadingStatus.prototype.print = function ()\n{\n    if (this._patch.config.silent) return;\n\n    const rows = [];\n\n    for (const i in this._loadingAssets)\n    {\n        rows.push([\n            this._loadingAssets[i].order,\n            this._loadingAssets[i].type,\n            this._loadingAssets[i].name,\n            (this._loadingAssets[i].timeEnd - this._loadingAssets[i].timeStart) / 1000 + \"s\",\n        ]);\n    }\n\n    this._log.groupCollapsed(\n        \"finished loading \" + this._order + \" assets in \" + (Date.now() - this._startTime) / 1000 + \"s\",\n    );\n    this._log.table(rows);\n    this._log.groupEnd();\n};\n\nLoadingStatus.prototype.finished = function (id)\n{\n    const l = this._loadingAssets[id];\n    if (l)\n    {\n        if (l.finished) this._log.warn(\"loading job was already finished\", l);\n\n        if (l.op) l.op.setUiAttribs({ \"loading\": false });\n        l.finished = true;\n        l.timeEnd = Date.now();\n    }\n\n    this.checkStatus();\n    this.emitEvent(\"finishedTask\");\n};\n\nLoadingStatus.prototype._startAssetTasks = function ()\n{\n    for (let i = 0; i < this._assetTasks.length; i++) this._assetTasks[i]();\n    this._assetTasks.length = 0;\n};\n\n/**\n * delay an asset loading task, mainly to wait for ui to be finished loading and showing, and only then start loading assets\n * @function addAssetLoadingTask\n * @instance\n * @memberof Op\n * @param {function} callback\n */\nLoadingStatus.prototype.addAssetLoadingTask = function (cb)\n{\n    if (this._patch.isEditorMode() && !CABLES.UI.loaded)\n    {\n        this._assetTasks.push(cb);\n\n        if (!this._loadingAssetTaskCb)window.gui.addEventListener(\"uiloaded\", this._startAssetTasks.bind(this));\n        this._loadingAssetTaskCb = true;\n    }\n    else\n    {\n        cb();\n    }\n    this.emitEvent(\"addAssetTask\");\n};\n\nLoadingStatus.prototype.existByName = function (name)\n{\n    for (let i in this._loadingAssets)\n    {\n        if (this._loadingAssets[i].name == name && !this._loadingAssets[i].finished)\n        {\n            return true;\n        }\n    }\n};\n\nLoadingStatus.prototype.start = function (type, name, op)\n{\n    if (this._startTime == 0) this._startTime = Date.now();\n    const id = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.generateUUID)();\n\n    if (op)op.setUiAttribs({ \"loading\": true });\n\n    this._loadingAssets[id] = {\n        \"id\": id,\n        \"op\": op,\n        \"type\": type,\n        \"name\": name,\n        \"finished\": false,\n        \"timeStart\": Date.now(),\n        \"order\": this._order,\n    };\n    this._order++;\n\n    this.emitEvent(\"startTask\");\n\n    return id;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9sb2FkaW5nc3RhdHVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DQUJMRVMvLi9zcmMvY29yZS9sb2FkaW5nc3RhdHVzLmpzPzFiMzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2VuZXJhdGVVVUlEIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmltcG9ydCBMb2dnZXIgZnJvbSBcIi4vY29yZV9sb2dnZXJcIjtcblxuLyoqXG4gKiBMb2FkaW5nU3RhdHVzIGNsYXNzLCBtYW5hZ2VzIGFzeW5jaHJvbm91cyBsb2FkaW5nIGpvYnNcbiAqXG4gKiBAZXh0ZXJuYWwgQ0FCTEVTXG4gKiBAbmFtZXNwYWNlIExvYWRpbmdTdGF0dXNcbiAqIEBoaWRlY29uc3RydWN0b3JcbiAqIEBjbGFzc1xuICovXG5jb25zdCBMb2FkaW5nU3RhdHVzID0gZnVuY3Rpb24gKHBhdGNoKVxue1xuICAgIENBQkxFUy5FdmVudFRhcmdldC5hcHBseSh0aGlzKTtcblxuICAgIHRoaXMuX2xvZyA9IG5ldyBMb2dnZXIoXCJMb2FkaW5nU3RhdHVzXCIpO1xuICAgIHRoaXMuX2xvYWRpbmdBc3NldHMgPSB7fTtcbiAgICB0aGlzLl9jYkZpbmlzaGVkID0gW107XG4gICAgdGhpcy5fYXNzZXRUYXNrcyA9IFtdO1xuICAgIHRoaXMuX3BlcmNlbnQgPSAwO1xuICAgIHRoaXMuX2NvdW50ID0gMDtcbiAgICB0aGlzLl9jb3VudEZpbmlzaGVkID0gMDtcbiAgICB0aGlzLl9vcmRlciA9IDA7XG4gICAgdGhpcy5fc3RhcnRUaW1lID0gMDtcbiAgICB0aGlzLl9wYXRjaCA9IHBhdGNoO1xuICAgIHRoaXMuX3dhc0ZpbmlzaGVkUHJpbnRlZCA9IGZhbHNlO1xuICAgIHRoaXMuX2xvYWRpbmdBc3NldFRhc2tDYiA9IGZhbHNlO1xufTtcblxuTG9hZGluZ1N0YXR1cy5wcm90b3R5cGUuc2V0T25GaW5pc2hlZExvYWRpbmcgPSBmdW5jdGlvbiAoY2IpXG57XG4gICAgdGhpcy5fY2JGaW5pc2hlZC5wdXNoKGNiKTtcbn07XG5cbkxvYWRpbmdTdGF0dXMucHJvdG90eXBlLmdldE51bUFzc2V0cyA9IGZ1bmN0aW9uICgpXG57XG4gICAgcmV0dXJuIHRoaXMuX2NvdW50RmluaXNoZWQ7XG59O1xuXG5Mb2FkaW5nU3RhdHVzLnByb3RvdHlwZS5nZXRQcm9ncmVzcyA9IGZ1bmN0aW9uICgpXG57XG4gICAgcmV0dXJuIHRoaXMuX3BlcmNlbnQ7XG59O1xuXG5Mb2FkaW5nU3RhdHVzLnByb3RvdHlwZS5jaGVja1N0YXR1cyA9IGZ1bmN0aW9uICgpXG57XG4gICAgdGhpcy5fY291bnRGaW5pc2hlZCA9IDA7XG4gICAgdGhpcy5fY291bnQgPSAwO1xuXG4gICAgZm9yIChjb25zdCBpIGluIHRoaXMuX2xvYWRpbmdBc3NldHMpXG4gICAge1xuICAgICAgICB0aGlzLl9jb3VudCsrO1xuICAgICAgICBpZiAoIXRoaXMuX2xvYWRpbmdBc3NldHNbaV0uZmluaXNoZWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2NvdW50RmluaXNoZWQrKztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuX3BlcmNlbnQgPSAodGhpcy5fY291bnQgLSB0aGlzLl9jb3VudEZpbmlzaGVkKSAvIHRoaXMuX2NvdW50O1xuXG4gICAgaWYgKHRoaXMuX2NvdW50RmluaXNoZWQgPT09IDApXG4gICAge1xuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMuX2NiRmluaXNoZWQubGVuZ3RoOyBqKyspXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jYkZpbmlzaGVkW2pdKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNiID0gdGhpcy5fY2JGaW5pc2hlZFtqXTtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsgY2IodGhpcy5fcGF0Y2gpOyB0aGlzLmVtaXRFdmVudChcImZpbmlzaGVkQWxsXCIpOyB9LCAxMDApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF0aGlzLl93YXNGaW5pc2hlZFByaW50ZWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX3dhc0ZpbmlzaGVkUHJpbnRlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLnByaW50KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5lbWl0RXZlbnQoXCJmaW5pc2hlZEFsbFwiKTtcbiAgICB9XG59O1xuXG5Mb2FkaW5nU3RhdHVzLnByb3RvdHlwZS5nZXRMaXN0ID0gZnVuY3Rpb24gKClcbntcbiAgICBsZXQgYXJyID0gW107XG4gICAgZm9yIChjb25zdCBpIGluIHRoaXMuX2xvYWRpbmdBc3NldHMpXG4gICAge1xuICAgICAgICBhcnIucHVzaCh0aGlzLl9sb2FkaW5nQXNzZXRzW2ldKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJyO1xufTtcblxuXG5Mb2FkaW5nU3RhdHVzLnByb3RvdHlwZS5nZXRMaXN0Sm9icyA9IGZ1bmN0aW9uICgpXG57XG4gICAgbGV0IGFyciA9IFtdO1xuICAgIGZvciAoY29uc3QgaSBpbiB0aGlzLl9sb2FkaW5nQXNzZXRzKVxuICAgIHtcbiAgICAgICAgaWYgKCF0aGlzLl9sb2FkaW5nQXNzZXRzW2ldLmZpbmlzaGVkKWFyci5wdXNoKHRoaXMuX2xvYWRpbmdBc3NldHNbaV0ubmFtZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFycjtcbn07XG5cbkxvYWRpbmdTdGF0dXMucHJvdG90eXBlLnByaW50ID0gZnVuY3Rpb24gKClcbntcbiAgICBpZiAodGhpcy5fcGF0Y2guY29uZmlnLnNpbGVudCkgcmV0dXJuO1xuXG4gICAgY29uc3Qgcm93cyA9IFtdO1xuXG4gICAgZm9yIChjb25zdCBpIGluIHRoaXMuX2xvYWRpbmdBc3NldHMpXG4gICAge1xuICAgICAgICByb3dzLnB1c2goW1xuICAgICAgICAgICAgdGhpcy5fbG9hZGluZ0Fzc2V0c1tpXS5vcmRlcixcbiAgICAgICAgICAgIHRoaXMuX2xvYWRpbmdBc3NldHNbaV0udHlwZSxcbiAgICAgICAgICAgIHRoaXMuX2xvYWRpbmdBc3NldHNbaV0ubmFtZSxcbiAgICAgICAgICAgICh0aGlzLl9sb2FkaW5nQXNzZXRzW2ldLnRpbWVFbmQgLSB0aGlzLl9sb2FkaW5nQXNzZXRzW2ldLnRpbWVTdGFydCkgLyAxMDAwICsgXCJzXCIsXG4gICAgICAgIF0pO1xuICAgIH1cblxuICAgIHRoaXMuX2xvZy5ncm91cENvbGxhcHNlZChcbiAgICAgICAgXCJmaW5pc2hlZCBsb2FkaW5nIFwiICsgdGhpcy5fb3JkZXIgKyBcIiBhc3NldHMgaW4gXCIgKyAoRGF0ZS5ub3coKSAtIHRoaXMuX3N0YXJ0VGltZSkgLyAxMDAwICsgXCJzXCIsXG4gICAgKTtcbiAgICB0aGlzLl9sb2cudGFibGUocm93cyk7XG4gICAgdGhpcy5fbG9nLmdyb3VwRW5kKCk7XG59O1xuXG5Mb2FkaW5nU3RhdHVzLnByb3RvdHlwZS5maW5pc2hlZCA9IGZ1bmN0aW9uIChpZClcbntcbiAgICBjb25zdCBsID0gdGhpcy5fbG9hZGluZ0Fzc2V0c1tpZF07XG4gICAgaWYgKGwpXG4gICAge1xuICAgICAgICBpZiAobC5maW5pc2hlZCkgdGhpcy5fbG9nLndhcm4oXCJsb2FkaW5nIGpvYiB3YXMgYWxyZWFkeSBmaW5pc2hlZFwiLCBsKTtcblxuICAgICAgICBpZiAobC5vcCkgbC5vcC5zZXRVaUF0dHJpYnMoeyBcImxvYWRpbmdcIjogZmFsc2UgfSk7XG4gICAgICAgIGwuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICBsLnRpbWVFbmQgPSBEYXRlLm5vdygpO1xuICAgIH1cblxuICAgIHRoaXMuY2hlY2tTdGF0dXMoKTtcbiAgICB0aGlzLmVtaXRFdmVudChcImZpbmlzaGVkVGFza1wiKTtcbn07XG5cbkxvYWRpbmdTdGF0dXMucHJvdG90eXBlLl9zdGFydEFzc2V0VGFza3MgPSBmdW5jdGlvbiAoKVxue1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fYXNzZXRUYXNrcy5sZW5ndGg7IGkrKykgdGhpcy5fYXNzZXRUYXNrc1tpXSgpO1xuICAgIHRoaXMuX2Fzc2V0VGFza3MubGVuZ3RoID0gMDtcbn07XG5cbi8qKlxuICogZGVsYXkgYW4gYXNzZXQgbG9hZGluZyB0YXNrLCBtYWlubHkgdG8gd2FpdCBmb3IgdWkgdG8gYmUgZmluaXNoZWQgbG9hZGluZyBhbmQgc2hvd2luZywgYW5kIG9ubHkgdGhlbiBzdGFydCBsb2FkaW5nIGFzc2V0c1xuICogQGZ1bmN0aW9uIGFkZEFzc2V0TG9hZGluZ1Rhc2tcbiAqIEBpbnN0YW5jZVxuICogQG1lbWJlcm9mIE9wXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xuICovXG5Mb2FkaW5nU3RhdHVzLnByb3RvdHlwZS5hZGRBc3NldExvYWRpbmdUYXNrID0gZnVuY3Rpb24gKGNiKVxue1xuICAgIGlmICh0aGlzLl9wYXRjaC5pc0VkaXRvck1vZGUoKSAmJiAhQ0FCTEVTLlVJLmxvYWRlZClcbiAgICB7XG4gICAgICAgIHRoaXMuX2Fzc2V0VGFza3MucHVzaChjYik7XG5cbiAgICAgICAgaWYgKCF0aGlzLl9sb2FkaW5nQXNzZXRUYXNrQ2Ipd2luZG93Lmd1aS5hZGRFdmVudExpc3RlbmVyKFwidWlsb2FkZWRcIiwgdGhpcy5fc3RhcnRBc3NldFRhc2tzLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLl9sb2FkaW5nQXNzZXRUYXNrQ2IgPSB0cnVlO1xuICAgIH1cbiAgICBlbHNlXG4gICAge1xuICAgICAgICBjYigpO1xuICAgIH1cbiAgICB0aGlzLmVtaXRFdmVudChcImFkZEFzc2V0VGFza1wiKTtcbn07XG5cbkxvYWRpbmdTdGF0dXMucHJvdG90eXBlLmV4aXN0QnlOYW1lID0gZnVuY3Rpb24gKG5hbWUpXG57XG4gICAgZm9yIChsZXQgaSBpbiB0aGlzLl9sb2FkaW5nQXNzZXRzKVxuICAgIHtcbiAgICAgICAgaWYgKHRoaXMuX2xvYWRpbmdBc3NldHNbaV0ubmFtZSA9PSBuYW1lICYmICF0aGlzLl9sb2FkaW5nQXNzZXRzW2ldLmZpbmlzaGVkKVxuICAgICAgICB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5cbkxvYWRpbmdTdGF0dXMucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gKHR5cGUsIG5hbWUsIG9wKVxue1xuICAgIGlmICh0aGlzLl9zdGFydFRpbWUgPT0gMCkgdGhpcy5fc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBjb25zdCBpZCA9IGdlbmVyYXRlVVVJRCgpO1xuXG4gICAgaWYgKG9wKW9wLnNldFVpQXR0cmlicyh7IFwibG9hZGluZ1wiOiB0cnVlIH0pO1xuXG4gICAgdGhpcy5fbG9hZGluZ0Fzc2V0c1tpZF0gPSB7XG4gICAgICAgIFwiaWRcIjogaWQsXG4gICAgICAgIFwib3BcIjogb3AsXG4gICAgICAgIFwidHlwZVwiOiB0eXBlLFxuICAgICAgICBcIm5hbWVcIjogbmFtZSxcbiAgICAgICAgXCJmaW5pc2hlZFwiOiBmYWxzZSxcbiAgICAgICAgXCJ0aW1lU3RhcnRcIjogRGF0ZS5ub3coKSxcbiAgICAgICAgXCJvcmRlclwiOiB0aGlzLl9vcmRlcixcbiAgICB9O1xuICAgIHRoaXMuX29yZGVyKys7XG5cbiAgICB0aGlzLmVtaXRFdmVudChcInN0YXJ0VGFza1wiKTtcblxuICAgIHJldHVybiBpZDtcbn07XG5cbmV4cG9ydCB7IExvYWRpbmdTdGF0dXMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/loadingstatus.js\n");

/***/ }),

/***/ "./src/core/patchConnection.js":
/*!*************************************!*\
  !*** ./src/core/patchConnection.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PatchConnectionReceiver\": () => (/* binding */ PatchConnectionReceiver),\n/* harmony export */   \"PatchConnectionSender\": () => (/* binding */ PatchConnectionSender),\n/* harmony export */   \"PatchConnectorBroadcastChannel\": () => (/* binding */ PatchConnectorBroadcastChannel)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/core/constants.js\");\n/* harmony import */ var _core_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core_logger */ \"./src/core/core_logger.js\");\n\n\n\nconst PatchConnectionReceiver = function (patch, options, connector)\n{\n    this._patch = patch;\n    this.connector = connector;\n    this._log = new _core_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"PatchConnectionReceiver\");\n};\n\nPatchConnectionReceiver.prototype._addOp = function (data)\n{\n    let uiAttribs = null;\n    if (data.vars.uiAttribs) uiAttribs = data.vars.uiAttribs;\n    const op = this._patch.addOp(data.vars.objName, uiAttribs, data.vars.opId, true);\n    if (op)\n    {\n        op.id = data.vars.opId;\n        if (data.vars.portsIn)\n        {\n            data.vars.portsIn.forEach((portInfo) =>\n            {\n                const port = op.getPortByName(portInfo.name);\n                if (port) port.set(portInfo.value);\n            });\n        }\n    }\n};\n\nPatchConnectionReceiver.prototype._receive = function (ev)\n{\n    let data = {};\n    if (ev.hasOwnProperty(\"event\")) data = ev;\n    else data = JSON.parse(ev.data);\n\n    if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_OP_CREATE)\n    {\n        if (this._patch.getOpById(data.vars.opId)) return;\n        this._log.verbose(\"op create:\", data.vars.objName);\n\n        if (window.gui)\n        {\n            gui.serverOps.loadOpLibs(data.vars.objName, () =>\n            {\n                this._addOp(data);\n            });\n        }\n        else\n        {\n            this._addOp(data);\n        }\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_DESERIALIZE)\n    {\n        if (data.vars.json)\n        {\n            if (window.gui)\n            {\n                gui.serverOps.loadProjectDependencies(data.vars.json, () =>\n                {\n                    this._patch.deSerialize(data.vars.json, { \"genIds\": data.vars.genIds });\n                });\n            }\n            else\n            {\n                this._patch.deSerialize(data.vars.json, { \"genIds\": data.vars.genIds });\n            }\n        }\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_LOAD)\n    {\n        this._log.verbose(\"PACO load patch.....\");\n        this._patch.clear();\n        if (window.gui)\n        {\n            gui.serverOps.loadProjectDependencies(JSON.parse(data.vars.patch), () =>\n            {\n                this._patch.deSerialize(data.vars.patch);\n            });\n        }\n        else\n        {\n            this._patch.deSerialize(data.vars.patch);\n        }\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_CLEAR)\n    {\n        this._patch.clear();\n        this._log.log(\"clear\");\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_OP_DELETE)\n    {\n        this._log.verbose(\"op delete\", data.vars.objName);\n        const op = this._patch.getOpById(data.vars.op);\n        this._patch.deleteOp(data.vars.op, true);\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_OP_ENABLE)\n    {\n        const op = this._patch.getOpById(data.vars.op);\n        if (op) op.enabled = true;\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_OP_DISABLE)\n    {\n        const op = this._patch.getOpById(data.vars.op);\n        if (op) op.enabled = false;\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_UIATTRIBS)\n    {\n        const op = this._patch.getOpById(data.vars.op);\n        op?.setUiAttrib(data.vars.uiAttribs);\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_UNLINK)\n    {\n        const op1 = this._patch.getOpById(data.vars.op1);\n        const op2 = this._patch.getOpById(data.vars.op2);\n        // if (!op1 || !op2) return;\n        const port1 = op1?.getPort(data.vars.port1);\n        const port2 = op2?.getPort(data.vars.port2);\n\n        if (port1 && port2) port1.removeLinkTo(port2);\n        else this._log.warn(\"paco unlink could not find port...\");\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_LINK)\n    {\n        const op1 = this._patch.getOpById(data.vars.op1);\n        const op2 = this._patch.getOpById(data.vars.op2);\n        if (op1 && op2) this._patch.link(op1, data.vars.port1, op2, data.vars.port2);\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_VALUECHANGE)\n    {\n        // do not handle variable creation events\n        if (data.vars.v === \"+ create new one\") return;\n        const op = this._patch.getOpById(data.vars.op);\n        if (op)\n        {\n            const p = op.getPort(data.vars.port);\n            if (p) p.set(data.vars.v);\n        }\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_VARIABLES)\n    {\n        const op = this._patch.getOpById(data.vars.opId);\n        if (op)\n        {\n            if (op.varName) op.varName.set(data.vars.varName);\n        }\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_TRIGGERS)\n    {\n        const op = this._patch.getOpById(data.vars.opId);\n        if (op)\n        {\n            if (op.varName) op.varName.set(data.vars.varName);\n        }\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_PORT_SETVARIABLE)\n    {\n        const op = this._patch.getOpById(data.vars.opId);\n        if (op)\n        {\n            const p = op.getPortByName(data.vars.portName);\n            if (p) p.setVariable(data.vars.variableName);\n        }\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_PORT_SETANIMATED)\n    {\n        const op = this._patch.getOpById(data.vars.opId);\n        if (op)\n        {\n            const p = op.portsIn[data.vars.portIndex];\n            if (p)\n            {\n                if (data.vars.hasOwnProperty(\"targetState\"))\n                {\n                    this._patch.emitEvent(\"pacoPortValueSetAnimated\", op, data.vars.portIndex, data.vars.targetState, data.vars.defaultValue);\n                }\n            }\n        }\n    }\n    else if (data.event == _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.PACO.PACO_PORT_ANIM_UPDATED)\n    {\n        const op = this._patch.getOpById(data.vars.opId);\n        if (op)\n        {\n            const p = op.getPortByName(data.vars.portName);\n            if (p)\n            {\n                const objPort = p.getSerialized();\n                objPort.anim = data.vars.anim;\n                p.anim = null;\n                p.deSerializeSettings(objPort);\n                this._patch.emitEvent(\"pacoPortAnimUpdated\", p);\n            }\n        }\n    }\n    else\n    {\n        this._log.warn(\"unknown patchConnectionEvent!\", ev);\n    }\n};\n\n\n// ---------------\n\n\nconst PatchConnectionSender = function (patch)\n{\n    this.connectors = [];\n    this.paused = false;\n\n    patch.addEventListener(\"onOpDelete\",\n        (op) =>\n        {\n            this.send(CABLES.PACO_OP_DELETE, { \"op\": op.id, \"objName\": op.objName });\n        });\n\n    patch.addEventListener(\"patchClearStart\", () =>\n    {\n        this.paused = true;\n    });\n\n    patch.addEventListener(\"patchClearEnd\",\n        () =>\n        {\n            this.paused = false;\n        });\n\n    patch.addEventListener(\"patchLoadStart\", () =>\n    {\n        this.paused = true;\n    });\n\n    patch.addEventListener(\"patchLoadEnd\",\n        (newOps, json, genIds) =>\n        {\n            this.paused = false;\n            this.send(CABLES.PACO_DESERIALIZE, { \"json\": json, \"genIds\": genIds });\n        });\n\n    patch.addEventListener(\"onOpAdd\",\n        (op) =>\n        {\n            const portsIn = [];\n            op.portsIn.forEach((portIn) =>\n            {\n                const port = {\n                    \"id\": portIn.id,\n                    \"name\": portIn.name,\n                    \"value\": portIn.get()\n                };\n                portsIn.push(port);\n            });\n            let newUiAttribs = { };\n            if (op.uiAttribs)\n            {\n                newUiAttribs = { ...op.uiAttribs };\n            }\n            this.send(CABLES.PACO_OP_CREATE, {\n                \"opId\": op.id,\n                \"objName\": op.objName,\n                \"uiAttribs\": newUiAttribs,\n                \"portsIn\": portsIn\n            });\n        });\n\n    patch.addEventListener(\"onUnLink\", (p1, p2) =>\n    {\n        this.send(CABLES.PACO_UNLINK, {\n            \"op1\": p1.op.id,\n            \"op2\": p2.op.id,\n            \"port1\": p1.getName(),\n            \"port2\": p2.getName()\n        });\n    });\n\n    patch.addEventListener(\"onUiAttribsChange\", (op, newAttribs) =>\n    {\n        if (!newAttribs) return;\n\n        delete newAttribs.extendTitle;\n        delete newAttribs.history;\n        delete newAttribs.translate;\n        if (Object.keys(newAttribs).length > 0)\n        {\n            this.send(CABLES.PACO_UIATTRIBS, { \"op\": op.id, \"uiAttribs\": newAttribs });\n        }\n    });\n\n    patch.addEventListener(\"opVariableNameChanged\", (op, varName) =>\n    {\n        const vars = {\n            \"opId\": op.id,\n            \"varName\": varName\n        };\n        this.send(CABLES.PACO_VARIABLES, vars);\n    });\n\n    patch.addEventListener(\"opTriggerNameChanged\", (op, varName) =>\n    {\n        const vars = {\n            \"opId\": op.id,\n            \"varName\": varName\n        };\n        this.send(CABLES.PACO_TRIGGERS, vars);\n    });\n\n    patch.addEventListener(\"onLink\", (p1, p2) =>\n    {\n        this.send(CABLES.PACO_LINK, {\n            \"op1\": p1.op.id,\n            \"op2\": p2.op.id,\n            \"port1\": p1.name,\n            \"port2\": p2.name\n        });\n    });\n\n    patch.addEventListener(\"portSetVariable\", (op, port, variableName) =>\n    {\n        const vars = {\n            \"opId\": op.id,\n            \"portName\": port.name,\n            \"variableName\": variableName\n        };\n        this.send(CABLES.PACO_PORT_SETVARIABLE, vars);\n    });\n\n    patch.addEventListener(\"portAnimUpdated\", (op, port, anim) =>\n    {\n        if (op && port)\n        {\n            const vars = {\n                \"opId\": op.id,\n                \"portName\": port.name,\n                \"anim\": anim.getSerialized()\n            };\n            this.send(CABLES.PACO_PORT_ANIM_UPDATED, vars);\n        }\n    });\n};\n\nPatchConnectionSender.prototype.send = function (event, vars)\n{\n    if (this.paused) return;\n    // do not send variable creation events\n    if (event === CABLES.PACO_VALUECHANGE && vars.v === \"+ create new one\") return;\n    for (let i = 0; i < this.connectors.length; i++)\n    {\n        this.connectors[i].send(event, vars);\n    }\n};\n\n// -------------\n\nconst PatchConnectorBroadcastChannel = function ()\n{\n    if (!window.BroadcastChannel) return;\n\n    this.bc = new BroadcastChannel(\"test_channel\");\n};\n\nPatchConnectorBroadcastChannel.prototype.receive = function (paco)\n{\n    if (!this.bc) return;\n    this._log.log(\"init\");\n    this.bc.onmessage = paco._receive.bind(paco);\n};\n\nPatchConnectorBroadcastChannel.prototype.send = function (event, vars)\n{\n    if (!this.bc) return;\n    const data = {};\n    data.event = event;\n    data.vars = vars;\n    this.bc.postMessage(JSON.stringify(data));\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/patchConnection.js\n");

/***/ }),

/***/ "./src/core/sessionvar.js":
/*!********************************!*\
  !*** ./src/core/sessionvar.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Variable\": () => (/* binding */ Variable)\n/* harmony export */ });\n// todo: old... remove this from ops...\n\nconst Variable = function ()\n{\n    let value = null;\n    const changedCallbacks = [];\n\n    this.onChanged = function (f)\n    {\n        changedCallbacks.push(f);\n    };\n\n    this.getValue = function ()\n    {\n        return value;\n    };\n\n    this.setValue = function (v)\n    {\n        value = v;\n        this.emitChanged();\n    };\n\n    this.emitChanged = function ()\n    {\n        for (let i = 0; i < changedCallbacks.length; i++)\n        {\n            changedCallbacks[i]();\n        }\n    };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9zZXNzaW9udmFyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DQUJMRVMvLi9zcmMvY29yZS9zZXNzaW9udmFyLmpzPzcwYmYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdG9kbzogb2xkLi4uIHJlbW92ZSB0aGlzIGZyb20gb3BzLi4uXG5cbmNvbnN0IFZhcmlhYmxlID0gZnVuY3Rpb24gKClcbntcbiAgICBsZXQgdmFsdWUgPSBudWxsO1xuICAgIGNvbnN0IGNoYW5nZWRDYWxsYmFja3MgPSBbXTtcblxuICAgIHRoaXMub25DaGFuZ2VkID0gZnVuY3Rpb24gKGYpXG4gICAge1xuICAgICAgICBjaGFuZ2VkQ2FsbGJhY2tzLnB1c2goZik7XG4gICAgfTtcblxuICAgIHRoaXMuZ2V0VmFsdWUgPSBmdW5jdGlvbiAoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG5cbiAgICB0aGlzLnNldFZhbHVlID0gZnVuY3Rpb24gKHYpXG4gICAge1xuICAgICAgICB2YWx1ZSA9IHY7XG4gICAgICAgIHRoaXMuZW1pdENoYW5nZWQoKTtcbiAgICB9O1xuXG4gICAgdGhpcy5lbWl0Q2hhbmdlZCA9IGZ1bmN0aW9uICgpXG4gICAge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoYW5nZWRDYWxsYmFja3MubGVuZ3RoOyBpKyspXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNoYW5nZWRDYWxsYmFja3NbaV0oKTtcbiAgICAgICAgfVxuICAgIH07XG59O1xuXG5leHBvcnQgeyBWYXJpYWJsZSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/sessionvar.js\n");

/***/ }),

/***/ "./src/core/timer.js":
/*!***************************!*\
  !*** ./src/core/timer.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Timer\": () => (/* binding */ Timer),\n/* harmony export */   \"internalNow\": () => (/* binding */ internalNow),\n/* harmony export */   \"now\": () => (/* binding */ now)\n/* harmony export */ });\n/** @namespace CABLES */\n\nconst internalNow = function ()\n{\n    return window.performance.now();\n};\n\n/**\n * current time in milliseconds\n * @memberof CABLES\n * @function now\n * @static\n */\nconst now = function ()\n{\n    return internalNow();\n};\n\n// ----------------------------\n\n/**\n * Measuring time\n * @external CABLES\n * @namespace Timer\n * @hideconstructor\n * @class\n */\nconst Timer = function ()\n{\n    CABLES.EventTarget.apply(this);\n\n    this._timeStart = internalNow();\n    this._timeOffset = 0;\n\n    this._currentTime = 0;\n    this._lastTime = 0;\n    this._paused = true;\n    this._delay = 0;\n    this.overwriteTime = -1;\n};\n\nTimer.prototype._getTime = function ()\n{\n    this._lastTime = (internalNow() - this._timeStart) / 1000;\n    return this._lastTime + this._timeOffset;\n};\n\nTimer.prototype.setDelay = function (d)\n{\n    this._delay = d;\n    this.emitEvent(\"timeChange\");\n};\n\n/**\n * @function\n * @memberof Timer\n * @instance\n * @description returns true if timer is playing\n * @return {Boolean} value\n */\nTimer.prototype.isPlaying = function ()\n{\n    return !this._paused;\n};\n\n/**\n * @function\n * @memberof Timer\n * @instance\n * @description update timer\n * @return {Number} time\n */\nTimer.prototype.update = function ()\n{\n    if (this._paused) return;\n    this._currentTime = this._getTime();\n\n    return this._currentTime;\n};\n\n/**\n * @function\n * @memberof Timer\n * @instance\n * @return {Number} time in milliseconds\n */\nTimer.prototype.getMillis = function ()\n{\n    return this.get() * 1000;\n};\n\n/**\n * @function\n * @memberof Timer\n * @instance\n * @return {Number} value time in seconds\n */\nTimer.prototype.get = Timer.prototype.getTime = function ()\n{\n    if (this.overwriteTime >= 0) return this.overwriteTime - this._delay;\n    return this._currentTime - this._delay;\n};\n\n/**\n * toggle between play/pause state\n * @function\n * @memberof Timer\n * @instance\n */\nTimer.prototype.togglePlay = function ()\n{\n    if (this._paused) this.play();\n    else this.pause();\n};\n\n/**\n * set current time\n * @function\n * @memberof Timer\n * @instance\n * @param {Number} t\n */\nTimer.prototype.setTime = function (t)\n{\n    if (isNaN(t) || t < 0) t = 0;\n    this._timeStart = internalNow();\n    this._timeOffset = t;\n    this._currentTime = t;\n    this.emitEvent(\"timeChange\");\n};\n\nTimer.prototype.setOffset = function (val)\n{\n    if (this._currentTime + val < 0)\n    {\n        this._timeStart = internalNow();\n        this._timeOffset = 0;\n        this._currentTime = 0;\n    }\n    else\n    {\n        this._timeOffset += val;\n        this._currentTime = this._lastTime + this._timeOffset;\n    }\n    this.emitEvent(\"timeChange\");\n};\n\n/**\n * (re)starts the timer\n * @function\n * @memberof Timer\n * @instance\n */\nTimer.prototype.play = function ()\n{\n    this._timeStart = internalNow();\n    this._paused = false;\n    this.emitEvent(\"playPause\");\n};\n\n/**\n * pauses the timer\n * @function\n * @memberof Timer\n * @instance\n */\nTimer.prototype.pause = function ()\n{\n    this._timeOffset = this._currentTime;\n    this._paused = true;\n    this.emitEvent(\"playPause\");\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS90aW1lci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DQUJMRVMvLi9zcmMvY29yZS90aW1lci5qcz85NGQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAbmFtZXNwYWNlIENBQkxFUyAqL1xuXG5leHBvcnQgY29uc3QgaW50ZXJuYWxOb3cgPSBmdW5jdGlvbiAoKVxue1xuICAgIHJldHVybiB3aW5kb3cucGVyZm9ybWFuY2Uubm93KCk7XG59O1xuXG4vKipcbiAqIGN1cnJlbnQgdGltZSBpbiBtaWxsaXNlY29uZHNcbiAqIEBtZW1iZXJvZiBDQUJMRVNcbiAqIEBmdW5jdGlvbiBub3dcbiAqIEBzdGF0aWNcbiAqL1xuZXhwb3J0IGNvbnN0IG5vdyA9IGZ1bmN0aW9uICgpXG57XG4gICAgcmV0dXJuIGludGVybmFsTm93KCk7XG59O1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8qKlxuICogTWVhc3VyaW5nIHRpbWVcbiAqIEBleHRlcm5hbCBDQUJMRVNcbiAqIEBuYW1lc3BhY2UgVGltZXJcbiAqIEBoaWRlY29uc3RydWN0b3JcbiAqIEBjbGFzc1xuICovXG5jb25zdCBUaW1lciA9IGZ1bmN0aW9uICgpXG57XG4gICAgQ0FCTEVTLkV2ZW50VGFyZ2V0LmFwcGx5KHRoaXMpO1xuXG4gICAgdGhpcy5fdGltZVN0YXJ0ID0gaW50ZXJuYWxOb3coKTtcbiAgICB0aGlzLl90aW1lT2Zmc2V0ID0gMDtcblxuICAgIHRoaXMuX2N1cnJlbnRUaW1lID0gMDtcbiAgICB0aGlzLl9sYXN0VGltZSA9IDA7XG4gICAgdGhpcy5fcGF1c2VkID0gdHJ1ZTtcbiAgICB0aGlzLl9kZWxheSA9IDA7XG4gICAgdGhpcy5vdmVyd3JpdGVUaW1lID0gLTE7XG59O1xuXG5UaW1lci5wcm90b3R5cGUuX2dldFRpbWUgPSBmdW5jdGlvbiAoKVxue1xuICAgIHRoaXMuX2xhc3RUaW1lID0gKGludGVybmFsTm93KCkgLSB0aGlzLl90aW1lU3RhcnQpIC8gMTAwMDtcbiAgICByZXR1cm4gdGhpcy5fbGFzdFRpbWUgKyB0aGlzLl90aW1lT2Zmc2V0O1xufTtcblxuVGltZXIucHJvdG90eXBlLnNldERlbGF5ID0gZnVuY3Rpb24gKGQpXG57XG4gICAgdGhpcy5fZGVsYXkgPSBkO1xuICAgIHRoaXMuZW1pdEV2ZW50KFwidGltZUNoYW5nZVwiKTtcbn07XG5cbi8qKlxuICogQGZ1bmN0aW9uXG4gKiBAbWVtYmVyb2YgVGltZXJcbiAqIEBpbnN0YW5jZVxuICogQGRlc2NyaXB0aW9uIHJldHVybnMgdHJ1ZSBpZiB0aW1lciBpcyBwbGF5aW5nXG4gKiBAcmV0dXJuIHtCb29sZWFufSB2YWx1ZVxuICovXG5UaW1lci5wcm90b3R5cGUuaXNQbGF5aW5nID0gZnVuY3Rpb24gKClcbntcbiAgICByZXR1cm4gIXRoaXMuX3BhdXNlZDtcbn07XG5cbi8qKlxuICogQGZ1bmN0aW9uXG4gKiBAbWVtYmVyb2YgVGltZXJcbiAqIEBpbnN0YW5jZVxuICogQGRlc2NyaXB0aW9uIHVwZGF0ZSB0aW1lclxuICogQHJldHVybiB7TnVtYmVyfSB0aW1lXG4gKi9cblRpbWVyLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoKVxue1xuICAgIGlmICh0aGlzLl9wYXVzZWQpIHJldHVybjtcbiAgICB0aGlzLl9jdXJyZW50VGltZSA9IHRoaXMuX2dldFRpbWUoKTtcblxuICAgIHJldHVybiB0aGlzLl9jdXJyZW50VGltZTtcbn07XG5cbi8qKlxuICogQGZ1bmN0aW9uXG4gKiBAbWVtYmVyb2YgVGltZXJcbiAqIEBpbnN0YW5jZVxuICogQHJldHVybiB7TnVtYmVyfSB0aW1lIGluIG1pbGxpc2Vjb25kc1xuICovXG5UaW1lci5wcm90b3R5cGUuZ2V0TWlsbGlzID0gZnVuY3Rpb24gKClcbntcbiAgICByZXR1cm4gdGhpcy5nZXQoKSAqIDEwMDA7XG59O1xuXG4vKipcbiAqIEBmdW5jdGlvblxuICogQG1lbWJlcm9mIFRpbWVyXG4gKiBAaW5zdGFuY2VcbiAqIEByZXR1cm4ge051bWJlcn0gdmFsdWUgdGltZSBpbiBzZWNvbmRzXG4gKi9cblRpbWVyLnByb3RvdHlwZS5nZXQgPSBUaW1lci5wcm90b3R5cGUuZ2V0VGltZSA9IGZ1bmN0aW9uICgpXG57XG4gICAgaWYgKHRoaXMub3ZlcndyaXRlVGltZSA+PSAwKSByZXR1cm4gdGhpcy5vdmVyd3JpdGVUaW1lIC0gdGhpcy5fZGVsYXk7XG4gICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRUaW1lIC0gdGhpcy5fZGVsYXk7XG59O1xuXG4vKipcbiAqIHRvZ2dsZSBiZXR3ZWVuIHBsYXkvcGF1c2Ugc3RhdGVcbiAqIEBmdW5jdGlvblxuICogQG1lbWJlcm9mIFRpbWVyXG4gKiBAaW5zdGFuY2VcbiAqL1xuVGltZXIucHJvdG90eXBlLnRvZ2dsZVBsYXkgPSBmdW5jdGlvbiAoKVxue1xuICAgIGlmICh0aGlzLl9wYXVzZWQpIHRoaXMucGxheSgpO1xuICAgIGVsc2UgdGhpcy5wYXVzZSgpO1xufTtcblxuLyoqXG4gKiBzZXQgY3VycmVudCB0aW1lXG4gKiBAZnVuY3Rpb25cbiAqIEBtZW1iZXJvZiBUaW1lclxuICogQGluc3RhbmNlXG4gKiBAcGFyYW0ge051bWJlcn0gdFxuICovXG5UaW1lci5wcm90b3R5cGUuc2V0VGltZSA9IGZ1bmN0aW9uICh0KVxue1xuICAgIGlmIChpc05hTih0KSB8fCB0IDwgMCkgdCA9IDA7XG4gICAgdGhpcy5fdGltZVN0YXJ0ID0gaW50ZXJuYWxOb3coKTtcbiAgICB0aGlzLl90aW1lT2Zmc2V0ID0gdDtcbiAgICB0aGlzLl9jdXJyZW50VGltZSA9IHQ7XG4gICAgdGhpcy5lbWl0RXZlbnQoXCJ0aW1lQ2hhbmdlXCIpO1xufTtcblxuVGltZXIucHJvdG90eXBlLnNldE9mZnNldCA9IGZ1bmN0aW9uICh2YWwpXG57XG4gICAgaWYgKHRoaXMuX2N1cnJlbnRUaW1lICsgdmFsIDwgMClcbiAgICB7XG4gICAgICAgIHRoaXMuX3RpbWVTdGFydCA9IGludGVybmFsTm93KCk7XG4gICAgICAgIHRoaXMuX3RpbWVPZmZzZXQgPSAwO1xuICAgICAgICB0aGlzLl9jdXJyZW50VGltZSA9IDA7XG4gICAgfVxuICAgIGVsc2VcbiAgICB7XG4gICAgICAgIHRoaXMuX3RpbWVPZmZzZXQgKz0gdmFsO1xuICAgICAgICB0aGlzLl9jdXJyZW50VGltZSA9IHRoaXMuX2xhc3RUaW1lICsgdGhpcy5fdGltZU9mZnNldDtcbiAgICB9XG4gICAgdGhpcy5lbWl0RXZlbnQoXCJ0aW1lQ2hhbmdlXCIpO1xufTtcblxuLyoqXG4gKiAocmUpc3RhcnRzIHRoZSB0aW1lclxuICogQGZ1bmN0aW9uXG4gKiBAbWVtYmVyb2YgVGltZXJcbiAqIEBpbnN0YW5jZVxuICovXG5UaW1lci5wcm90b3R5cGUucGxheSA9IGZ1bmN0aW9uICgpXG57XG4gICAgdGhpcy5fdGltZVN0YXJ0ID0gaW50ZXJuYWxOb3coKTtcbiAgICB0aGlzLl9wYXVzZWQgPSBmYWxzZTtcbiAgICB0aGlzLmVtaXRFdmVudChcInBsYXlQYXVzZVwiKTtcbn07XG5cbi8qKlxuICogcGF1c2VzIHRoZSB0aW1lclxuICogQGZ1bmN0aW9uXG4gKiBAbWVtYmVyb2YgVGltZXJcbiAqIEBpbnN0YW5jZVxuICovXG5UaW1lci5wcm90b3R5cGUucGF1c2UgPSBmdW5jdGlvbiAoKVxue1xuICAgIHRoaXMuX3RpbWVPZmZzZXQgPSB0aGlzLl9jdXJyZW50VGltZTtcbiAgICB0aGlzLl9wYXVzZWQgPSB0cnVlO1xuICAgIHRoaXMuZW1pdEV2ZW50KFwicGxheVBhdXNlXCIpO1xufTtcblxuZXhwb3J0IHsgVGltZXIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/timer.js\n");

/***/ }),

/***/ "./src/core/utils.js":
/*!***************************!*\
  !*** ./src/core/utils.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UTILS\": () => (/* binding */ UTILS),\n/* harmony export */   \"ajax\": () => (/* binding */ ajax),\n/* harmony export */   \"ajaxSync\": () => (/* binding */ ajaxSync),\n/* harmony export */   \"basename\": () => (/* binding */ basename),\n/* harmony export */   \"cacheBust\": () => (/* binding */ cacheBust),\n/* harmony export */   \"clamp\": () => (/* binding */ clamp),\n/* harmony export */   \"cleanJson\": () => (/* binding */ cleanJson),\n/* harmony export */   \"copyArray\": () => (/* binding */ copyArray),\n/* harmony export */   \"generateUUID\": () => (/* binding */ generateUUID),\n/* harmony export */   \"getShortOpName\": () => (/* binding */ getShortOpName),\n/* harmony export */   \"keyCodeToName\": () => (/* binding */ keyCodeToName),\n/* harmony export */   \"map\": () => (/* binding */ map),\n/* harmony export */   \"prefixedHash\": () => (/* binding */ prefixedHash),\n/* harmony export */   \"request\": () => (/* binding */ request),\n/* harmony export */   \"shortId\": () => (/* binding */ shortId),\n/* harmony export */   \"shuffleArray\": () => (/* binding */ shuffleArray),\n/* harmony export */   \"simpleId\": () => (/* binding */ simpleId),\n/* harmony export */   \"smoothStep\": () => (/* binding */ smoothStep),\n/* harmony export */   \"smootherStep\": () => (/* binding */ smootherStep),\n/* harmony export */   \"uuid\": () => (/* binding */ uuid)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/core/constants.js\");\n\n/**\n * @external CABLES\n * @namespace Utils\n */\n\n\n\nconst UTILS = {};\n/**\n * Merge two Float32Arrays.\n * @function float32Concat\n * @memberof Utils\n * @param {Float32Array} first Left-hand side array\n * @param {Float32Array} second Right-hand side array\n * @return {Float32Array}\n * @static\n */\nUTILS.float32Concat = function (first, second)\n{\n    if (!(first instanceof Float32Array)) first = new Float32Array(first);\n    if (!(second instanceof Float32Array)) second = new Float32Array(second);\n\n    const result = new Float32Array(first.length + second.length);\n\n    result.set(first);\n    result.set(second, first.length);\n\n    return result;\n};\n\n/**\n * get op shortname: only last part of fullname and without version\n * @function getShortOpName\n * @memberof CABLES\n * @param {String} full op name\n * @static\n */\nconst getShortOpName = function (fullname)\n{\n    let name = fullname.split(\".\")[fullname.split(\".\").length - 1];\n\n    if (name.indexOf(_constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_VERSION_PREFIX) > 0)\n    {\n        const n = name.split(_constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_VERSION_PREFIX)[1];\n        name = name.substring(0, name.length - (_constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_VERSION_PREFIX + n).length);\n    }\n    return name;\n};\n\n/**\n * randomize order of an array\n * @function shuffleArray\n * @memberof Utils\n * @param {Array|Float32Array} array {Array} original\n * @return {Array|Float32Array} shuffled array\n * @static\n */\nconst shuffleArray = function (array)\n{\n    for (let i = array.length - 1; i > 0; i--)\n    {\n        const j = Math.floor(Math.seededRandom() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n};\n\n\n/**\n * generate a short \"relativly unique\" id\n * @function shortId\n * @memberof Utils\n * @return {String} generated ID\n * @static\n */\n\nconst _shortIds = {};\nconst _shortId = function ()\n{\n    let str = Math.random().toString(36).substr(2, 9);\n\n    if (_shortIds.hasOwnProperty(str)) str = _shortId();\n    _shortIds[str] = true;\n    return str;\n};\nconst shortId = _shortId;\n\n\n/**\n * generate a UUID\n * @function uuid\n * @memberof Utils\n * @return {String} generated UUID\n * @static\n */\nconst _uuid = function ()\n{\n    let d = new Date().getTime();\n    const uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) =>\n    {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c == \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n    });\n    return uuid;\n};\nconst uuid = _uuid;\nconst generateUUID = _uuid;\n\n\n\nfunction cleanJson(obj)\n{\n    for (const i in obj)\n    {\n        if (obj[i] && typeof objValue === \"object\" && obj[i].constructor === Object) obj[i] = cleanJson(obj[i]);\n\n        if (obj[i] === null || obj[i] === undefined) delete obj[i];\n        else if (Array.isArray(obj[i]) && obj[i].length == 0) delete obj[i];\n    }\n\n    return obj;\n}\n\n\n/**\n * @see http://stackoverflow.com/q/7616461/940217\n * @return {string}\n */\nconst _prefixedHash = function (str, prefix = \"id\")\n{\n    let hash = 0;\n    if (Array.prototype.reduce)\n    {\n        hash = str.split(\"\").reduce((a, b) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0);\n    }\n    else\n    {\n        if (str.length > 0)\n        {\n            for (let i = 0; i < str.length; i++)\n            {\n                let character = str.charCodeAt(i);\n                hash = ((hash << 5) - hash) + character;\n                hash &= hash; // Convert to 32bit integer\n            }\n        }\n    }\n    return prefix + \"\" + hash;\n};\nconst prefixedHash = _prefixedHash;\n\n/**\n * generate a simple ID\n * @function simpleId\n * @memberof Utils\n * @return {Number} new id\n * @static\n */\nlet simpleIdCounter = 0;\nconst simpleId = function ()\n{\n    simpleIdCounter++;\n    return simpleIdCounter;\n};\n\n/**\n * smoothStep a value\n * @function smoothStep\n * @memberof Utils\n * @function\n * @param {Number} value value to be smoothed [0-1]\n * @return {Number} smoothed value\n * @static\n */\nconst smoothStep = function (perc)\n{\n    const x = Math.max(0, Math.min(1, (perc - 0) / (1 - 0)));\n    perc = x * x * (3 - 2 * x); // smoothstep\n    return perc;\n};\n\n/**\n * smootherstep a value\n * @function smootherStep\n * @memberof Utils\n * @param value {Number} value to be smoothed [0-1]\n * @return {Number} smoothed value\n * @static\n */\nconst smootherStep = function (perc)\n{\n    const x = Math.max(0, Math.min(1, (perc - 0) / (1 - 0)));\n    perc = x * x * x * (x * (x * 6 - 15) + 10); // smootherstep\n    return perc;\n};\n\n\n/**\n * clamp number / make sure its between min/max\n * @function map\n * @memberof Utils\n * @param {Number} value value to be mapped\n * @param {Number} min minimum value\n * @param {Number} max maximum value\n * @static\n */\nconst clamp = function (value, min, max)\n{\n    return Math.min(Math.max(value, min), max);\n};\n\n/**\n * map a value in a range to a value in another range\n * @function map\n * @memberof Utils\n * @param {Number} value value to be mapped\n * @param {Number} oldMin old range minimum value\n * @param {Number} oldMax old range maximum value\n * @param {Number} newMin new range minimum value\n * @param {Number} newMax new range maximum value\n * @return {Number} mapped value\n * @static\n */\nconst map = function (x, _oldMin, _oldMax, _newMin, _newMax, _easing)\n{\n    if (x >= _oldMax) return _newMax;\n    if (x <= _oldMin) return _newMin;\n\n    let reverseInput = false;\n    const oldMin = Math.min(_oldMin, _oldMax);\n    const oldMax = Math.max(_oldMin, _oldMax);\n    if (oldMin != _oldMin) reverseInput = true;\n\n    let reverseOutput = false;\n    const newMin = Math.min(_newMin, _newMax);\n    const newMax = Math.max(_newMin, _newMax);\n    if (newMin != _newMin) reverseOutput = true;\n\n    let portion = 0;\n    let r = 0;\n\n    if (reverseInput) portion = ((oldMax - x) * (newMax - newMin)) / (oldMax - oldMin);\n    else portion = ((x - oldMin) * (newMax - newMin)) / (oldMax - oldMin);\n\n    if (reverseOutput) r = newMax - portion;\n    else r = portion + newMin;\n\n    if (!_easing) return r;\n    if (_easing == 1)\n    {\n        // smoothstep\n        x = Math.max(0, Math.min(1, (r - _newMin) / (_newMax - _newMin)));\n        return _newMin + x * x * (3 - 2 * x) * (_newMax - _newMin);\n    }\n    if (_easing == 2)\n    {\n        // smootherstep\n        x = Math.max(0, Math.min(1, (r - _newMin) / (_newMax - _newMin)));\n        return _newMin + x * x * x * (x * (x * 6 - 15) + 10) * (_newMax - _newMin);\n    }\n\n    return r;\n};\n\n/**\n * @namespace Math\n */\n/**\n * set random seed for seededRandom()\n * @memberof Math\n * @type Number\n * @static\n */\nMath.randomSeed = 1;\n\n/**\n * generate a seeded random number\n * @function seededRandom\n * @memberof Math\n * @param {Number} max minimum possible random number\n * @param {Number} min maximum possible random number\n * @return {Number} random value\n * @static\n */\nMath.seededRandom = function (max, min)\n{\n    if (Math.randomSeed === 0) Math.randomSeed = Math.random() * 999;\n    max = max || 1;\n    min = min || 0;\n\n    Math.randomSeed = (Math.randomSeed * 9301 + 49297) % 233280;\n    const rnd = Math.randomSeed / 233280.0;\n\n    return min + rnd * (max - min);\n};\n\n// ----------------------------------------------------------------\n\nUTILS.arrayWriteToEnd = function (arr, v)\n{\n    for (let i = 1; i < arr.length; i++) arr[i - 1] = arr[i];\n    arr[arr.length - 1] = v;\n};\n\n// ----------------------------------------------------------------\n\n/**\n * returns true if parameter is a number\n * @function isNumeric\n * @memberof Utils\n * @param {Any} value The value to check.\n * @return {Boolean}\n * @static\n */\nUTILS.isNumeric = function (n)\n{\n    return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\n/**\n * returns true if parameter is array\n * @function isArray\n * @param {Any} value Value to check\n * @memberof Utils\n * @return {Boolean}\n * @static\n */\nUTILS.isArray = function (v)\n{\n    return Object.prototype.toString.call(v) === \"[object Array]\";\n};\n\n/**\n * @namespace String\n */\n\n/**\n * append a linebreak to a string\n * @function endl\n * @memberof String\n * @return {String} string with newline break appended ('\\n')\n */\nString.prototype.endl = function ()\n{\n    return this + \"\\n\";\n};\n\n/**\n * return true if string starts with prefix\n * @function startsWith\n * @memberof String\n * @param {String} prefix The prefix to check.\n * @return {Boolean}\n */\nString.prototype.startsWith = function (prefix)\n{\n    return this.indexOf(prefix) === 0;\n};\n\n/**\n * return true if string ends with suffix\n * @function endsWith\n * @memberof String\n * @param {String} suffix\n * @return {Boolean}\n */\nString.prototype.endsWith = String.prototype.endsWith || function (suffix)\n{\n    return this.match(suffix + \"$\") == suffix;\n};\n\n// ----------------------------------------------------------------\n\n/**\n * append a unique/random parameter to a url, so the browser is forced to reload the file, even if its cached\n * @function cacheBust\n * @static\n * @memberof Utils\n * @param {String} url The url to append the cachebuster parameter to.\n * @return {String} url with cachebuster parameter\n */\nconst cacheBust = function (url)\n{\n    if (url.indexOf(\"?\") > -1) url += \"&\";\n    else url += \"?\";\n    return url + \"cb=\" + CABLES.uuid();\n};\n\n/**\n * copy the content of an array\n * @function copyArray\n * @static\n * @memberof Utils\n * @param {Array} sourceArray\n * @param {Array} dst optional\n * @return {Array} dst\n */\nconst copyArray = function (src, dst)\n{\n    if (!src) return null;\n    dst = dst || [];\n    dst.length = src.length;\n    for (let i = 0; i < src.length; i++)\n    {\n        dst[i] = src[i];\n    }\n\n    return dst;\n};\n\n\n/**\n * return the filename part of a url\n * @function basename\n * @static\n * @memberof Utils\n * @param {String} url\n * @return {String} just the filename\n */\nconst basename = function (url)\n{\n    let name = \"\";\n    if (!url) return \"\";\n    const parts = (url + \"\").split(\"/\");\n    if (parts.length > 0)\n    {\n        const str = parts[parts.length - 1];\n        let parts2 = str.split(\"?\");\n        name = parts2[0];\n        parts2 = name.split(\".\");\n        name = parts2[0];\n    }\n\n    return name;\n};\n\n\n\n\nconst ajaxSync = function (url, cb, method, post, contenttype)\n{\n    request({\n        url,\n        cb,\n        method,\n        \"data\": post,\n        contenttype,\n        \"sync\": true,\n    });\n};\n\n/**\n * make an ajax request\n * @function ajax\n * @static\n */\nconst ajax = function (url, cb, method, post, contenttype, jsonP, headers = {})\n{\n    request({\n        \"url\": url,\n        \"cb\": cb,\n        \"method\": method,\n        \"data\": post,\n        \"contenttype\": contenttype,\n        \"sync\": false,\n        \"jsonP\": jsonP,\n        \"headers\": headers,\n    });\n};\n\nconst request = function (options)\n{\n    if (!options.hasOwnProperty(\"asynch\")) options.asynch = true;\n\n    let xhr;\n    try\n    {\n        xhr = new XMLHttpRequest();\n    }\n    catch (e) {}\n\n    xhr.onreadystatechange = function ()\n    {\n        if (xhr.readyState != 4) return;\n\n        if (options.cb)\n        {\n            if (xhr.status == 200 || xhr.status == 0) options.cb(false, xhr.responseText, xhr);\n            else options.cb(true, xhr.responseText, xhr);\n        }\n    };\n\n    xhr.addEventListener(\"progress\", (ev) =>\n    {\n        // console.log('progress',ev.loaded/1024+' kb');\n        // if (ev.lengthComputable)\n        // {\n        //     var percentComplete = ev.loaded / ev.total;\n        //     console.log(url,percentComplete);\n        // }\n    });\n\n    try\n    {\n        xhr.open(options.method ? options.method.toUpperCase() : \"GET\", options.url, !options.sync);\n    }\n    catch (e)\n    {\n        if (options.cb) options.cb(true, e.msg, xhr);\n    }\n\n    if (typeof options.headers === \"object\")\n    {\n        const keys = Object.keys(options.headers);\n        for (let i = 0; i < keys.length; i++)\n        {\n            const name = keys[i];\n            const value = options.headers[name];\n            xhr.setRequestHeader(name, value);\n        }\n    }\n\n    try\n    {\n        if (!options.post && !options.data)\n        {\n            xhr.send();\n        }\n        else\n        {\n            xhr.setRequestHeader(\n                \"Content-type\",\n                options.contenttype ? options.contenttype : \"application/x-www-form-urlencoded\",\n            );\n            xhr.send(options.data || options.post);\n        }\n    }\n    catch (e)\n    {\n        if (options.cb) options.cb(true, e.msg, xhr);\n    }\n};\n\n\nconst keyCodeToName = function (keyCode)\n{\n    if (!keyCode && keyCode !== 0) return \"Unidentified\";\n    const keys = {\n        \"8\": \"Backspace\",\n        \"9\": \"Tab\",\n        \"12\": \"Clear\",\n        \"13\": \"Enter\",\n        \"16\": \"Shift\",\n        \"17\": \"Control\",\n        \"18\": \"Alt\",\n        \"19\": \"Pause\",\n        \"20\": \"CapsLock\",\n        \"27\": \"Escape\",\n        \"32\": \"Space\",\n        \"33\": \"PageUp\",\n        \"34\": \"PageDown\",\n        \"35\": \"End\",\n        \"36\": \"Home\",\n        \"37\": \"ArrowLeft\",\n        \"38\": \"ArrowUp\",\n        \"39\": \"ArrowRight\",\n        \"40\": \"ArrowDown\",\n        \"45\": \"Insert\",\n        \"46\": \"Delete\",\n        \"112\": \"F1\",\n        \"113\": \"F2\",\n        \"114\": \"F3\",\n        \"115\": \"F4\",\n        \"116\": \"F5\",\n        \"117\": \"F6\",\n        \"118\": \"F7\",\n        \"119\": \"F8\",\n        \"120\": \"F9\",\n        \"121\": \"F10\",\n        \"122\": \"F11\",\n        \"123\": \"F12\",\n        \"144\": \"NumLock\",\n        \"145\": \"ScrollLock\",\n        \"224\": \"Meta\"\n    };\n    if (keys[keyCode])\n    {\n        return keys[keyCode];\n    }\n    else\n    {\n        return String.fromCharCode(keyCode);\n    }\n};\n// ----------------------------------------------------------------\n\nwindow.performance = window.performance || {\n    \"offset\": Date.now(),\n    \"now\": function now()\n    {\n        return Date.now() - this.offset;\n    },\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS91dGlscy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DQUJMRVMvLi9zcmMvY29yZS91dGlscy5qcz9iMWM3Il0sInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBAZXh0ZXJuYWwgQ0FCTEVTXG4gKiBAbmFtZXNwYWNlIFV0aWxzXG4gKi9cblxuaW1wb3J0IHsgQ09OU1RBTlRTIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbmNvbnN0IFVUSUxTID0ge307XG4vKipcbiAqIE1lcmdlIHR3byBGbG9hdDMyQXJyYXlzLlxuICogQGZ1bmN0aW9uIGZsb2F0MzJDb25jYXRcbiAqIEBtZW1iZXJvZiBVdGlsc1xuICogQHBhcmFtIHtGbG9hdDMyQXJyYXl9IGZpcnN0IExlZnQtaGFuZCBzaWRlIGFycmF5XG4gKiBAcGFyYW0ge0Zsb2F0MzJBcnJheX0gc2Vjb25kIFJpZ2h0LWhhbmQgc2lkZSBhcnJheVxuICogQHJldHVybiB7RmxvYXQzMkFycmF5fVxuICogQHN0YXRpY1xuICovXG5VVElMUy5mbG9hdDMyQ29uY2F0ID0gZnVuY3Rpb24gKGZpcnN0LCBzZWNvbmQpXG57XG4gICAgaWYgKCEoZmlyc3QgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXkpKSBmaXJzdCA9IG5ldyBGbG9hdDMyQXJyYXkoZmlyc3QpO1xuICAgIGlmICghKHNlY29uZCBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheSkpIHNlY29uZCA9IG5ldyBGbG9hdDMyQXJyYXkoc2Vjb25kKTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBGbG9hdDMyQXJyYXkoZmlyc3QubGVuZ3RoICsgc2Vjb25kLmxlbmd0aCk7XG5cbiAgICByZXN1bHQuc2V0KGZpcnN0KTtcbiAgICByZXN1bHQuc2V0KHNlY29uZCwgZmlyc3QubGVuZ3RoKTtcblxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuXG4vKipcbiAqIGdldCBvcCBzaG9ydG5hbWU6IG9ubHkgbGFzdCBwYXJ0IG9mIGZ1bGxuYW1lIGFuZCB3aXRob3V0IHZlcnNpb25cbiAqIEBmdW5jdGlvbiBnZXRTaG9ydE9wTmFtZVxuICogQG1lbWJlcm9mIENBQkxFU1xuICogQHBhcmFtIHtTdHJpbmd9IGZ1bGwgb3AgbmFtZVxuICogQHN0YXRpY1xuICovXG5leHBvcnQgY29uc3QgZ2V0U2hvcnRPcE5hbWUgPSBmdW5jdGlvbiAoZnVsbG5hbWUpXG57XG4gICAgbGV0IG5hbWUgPSBmdWxsbmFtZS5zcGxpdChcIi5cIilbZnVsbG5hbWUuc3BsaXQoXCIuXCIpLmxlbmd0aCAtIDFdO1xuXG4gICAgaWYgKG5hbWUuaW5kZXhPZihDT05TVEFOVFMuT1AuT1BfVkVSU0lPTl9QUkVGSVgpID4gMClcbiAgICB7XG4gICAgICAgIGNvbnN0IG4gPSBuYW1lLnNwbGl0KENPTlNUQU5UUy5PUC5PUF9WRVJTSU9OX1BSRUZJWClbMV07XG4gICAgICAgIG5hbWUgPSBuYW1lLnN1YnN0cmluZygwLCBuYW1lLmxlbmd0aCAtIChDT05TVEFOVFMuT1AuT1BfVkVSU0lPTl9QUkVGSVggKyBuKS5sZW5ndGgpO1xuICAgIH1cbiAgICByZXR1cm4gbmFtZTtcbn07XG5cbi8qKlxuICogcmFuZG9taXplIG9yZGVyIG9mIGFuIGFycmF5XG4gKiBAZnVuY3Rpb24gc2h1ZmZsZUFycmF5XG4gKiBAbWVtYmVyb2YgVXRpbHNcbiAqIEBwYXJhbSB7QXJyYXl8RmxvYXQzMkFycmF5fSBhcnJheSB7QXJyYXl9IG9yaWdpbmFsXG4gKiBAcmV0dXJuIHtBcnJheXxGbG9hdDMyQXJyYXl9IHNodWZmbGVkIGFycmF5XG4gKiBAc3RhdGljXG4gKi9cbmV4cG9ydCBjb25zdCBzaHVmZmxlQXJyYXkgPSBmdW5jdGlvbiAoYXJyYXkpXG57XG4gICAgZm9yIChsZXQgaSA9IGFycmF5Lmxlbmd0aCAtIDE7IGkgPiAwOyBpLS0pXG4gICAge1xuICAgICAgICBjb25zdCBqID0gTWF0aC5mbG9vcihNYXRoLnNlZWRlZFJhbmRvbSgpICogKGkgKyAxKSk7XG4gICAgICAgIGNvbnN0IHRlbXAgPSBhcnJheVtpXTtcbiAgICAgICAgYXJyYXlbaV0gPSBhcnJheVtqXTtcbiAgICAgICAgYXJyYXlbal0gPSB0ZW1wO1xuICAgIH1cbiAgICByZXR1cm4gYXJyYXk7XG59O1xuXG5cbi8qKlxuICogZ2VuZXJhdGUgYSBzaG9ydCBcInJlbGF0aXZseSB1bmlxdWVcIiBpZFxuICogQGZ1bmN0aW9uIHNob3J0SWRcbiAqIEBtZW1iZXJvZiBVdGlsc1xuICogQHJldHVybiB7U3RyaW5nfSBnZW5lcmF0ZWQgSURcbiAqIEBzdGF0aWNcbiAqL1xuXG5jb25zdCBfc2hvcnRJZHMgPSB7fTtcbmNvbnN0IF9zaG9ydElkID0gZnVuY3Rpb24gKClcbntcbiAgICBsZXQgc3RyID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpO1xuXG4gICAgaWYgKF9zaG9ydElkcy5oYXNPd25Qcm9wZXJ0eShzdHIpKSBzdHIgPSBfc2hvcnRJZCgpO1xuICAgIF9zaG9ydElkc1tzdHJdID0gdHJ1ZTtcbiAgICByZXR1cm4gc3RyO1xufTtcbmV4cG9ydCBjb25zdCBzaG9ydElkID0gX3Nob3J0SWQ7XG5cblxuLyoqXG4gKiBnZW5lcmF0ZSBhIFVVSURcbiAqIEBmdW5jdGlvbiB1dWlkXG4gKiBAbWVtYmVyb2YgVXRpbHNcbiAqIEByZXR1cm4ge1N0cmluZ30gZ2VuZXJhdGVkIFVVSURcbiAqIEBzdGF0aWNcbiAqL1xuY29uc3QgX3V1aWQgPSBmdW5jdGlvbiAoKVxue1xuICAgIGxldCBkID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgY29uc3QgdXVpZCA9IFwieHh4eHh4eHgteHh4eC00eHh4LXl4eHgteHh4eHh4eHh4eHh4XCIucmVwbGFjZSgvW3h5XS9nLCAoYykgPT5cbiAgICB7XG4gICAgICAgIGNvbnN0IHIgPSAoZCArIE1hdGgucmFuZG9tKCkgKiAxNikgJSAxNiB8IDA7XG4gICAgICAgIGQgPSBNYXRoLmZsb29yKGQgLyAxNik7XG4gICAgICAgIHJldHVybiAoYyA9PSBcInhcIiA/IHIgOiAociAmIDB4MykgfCAweDgpLnRvU3RyaW5nKDE2KTtcbiAgICB9KTtcbiAgICByZXR1cm4gdXVpZDtcbn07XG5leHBvcnQgY29uc3QgdXVpZCA9IF91dWlkO1xuZXhwb3J0IGNvbnN0IGdlbmVyYXRlVVVJRCA9IF91dWlkO1xuXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFuSnNvbihvYmopXG57XG4gICAgZm9yIChjb25zdCBpIGluIG9iailcbiAgICB7XG4gICAgICAgIGlmIChvYmpbaV0gJiYgdHlwZW9mIG9ialZhbHVlID09PSBcIm9iamVjdFwiICYmIG9ialtpXS5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0KSBvYmpbaV0gPSBjbGVhbkpzb24ob2JqW2ldKTtcblxuICAgICAgICBpZiAob2JqW2ldID09PSBudWxsIHx8IG9ialtpXSA9PT0gdW5kZWZpbmVkKSBkZWxldGUgb2JqW2ldO1xuICAgICAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KG9ialtpXSkgJiYgb2JqW2ldLmxlbmd0aCA9PSAwKSBkZWxldGUgb2JqW2ldO1xuICAgIH1cblxuICAgIHJldHVybiBvYmo7XG59XG5cblxuLyoqXG4gKiBAc2VlIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xLzc2MTY0NjEvOTQwMjE3XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmNvbnN0IF9wcmVmaXhlZEhhc2ggPSBmdW5jdGlvbiAoc3RyLCBwcmVmaXggPSBcImlkXCIpXG57XG4gICAgbGV0IGhhc2ggPSAwO1xuICAgIGlmIChBcnJheS5wcm90b3R5cGUucmVkdWNlKVxuICAgIHtcbiAgICAgICAgaGFzaCA9IHN0ci5zcGxpdChcIlwiKS5yZWR1Y2UoKGEsIGIpID0+IHsgYSA9ICgoYSA8PCA1KSAtIGEpICsgYi5jaGFyQ29kZUF0KDApOyByZXR1cm4gYSAmIGE7IH0sIDApO1xuICAgIH1cbiAgICBlbHNlXG4gICAge1xuICAgICAgICBpZiAoc3RyLmxlbmd0aCA+IDApXG4gICAgICAgIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGxldCBjaGFyYWN0ZXIgPSBzdHIuY2hhckNvZGVBdChpKTtcbiAgICAgICAgICAgICAgICBoYXNoID0gKChoYXNoIDw8IDUpIC0gaGFzaCkgKyBjaGFyYWN0ZXI7XG4gICAgICAgICAgICAgICAgaGFzaCAmPSBoYXNoOyAvLyBDb252ZXJ0IHRvIDMyYml0IGludGVnZXJcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcHJlZml4ICsgXCJcIiArIGhhc2g7XG59O1xuZXhwb3J0IGNvbnN0IHByZWZpeGVkSGFzaCA9IF9wcmVmaXhlZEhhc2g7XG5cbi8qKlxuICogZ2VuZXJhdGUgYSBzaW1wbGUgSURcbiAqIEBmdW5jdGlvbiBzaW1wbGVJZFxuICogQG1lbWJlcm9mIFV0aWxzXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IG5ldyBpZFxuICogQHN0YXRpY1xuICovXG5sZXQgc2ltcGxlSWRDb3VudGVyID0gMDtcbmV4cG9ydCBjb25zdCBzaW1wbGVJZCA9IGZ1bmN0aW9uICgpXG57XG4gICAgc2ltcGxlSWRDb3VudGVyKys7XG4gICAgcmV0dXJuIHNpbXBsZUlkQ291bnRlcjtcbn07XG5cbi8qKlxuICogc21vb3RoU3RlcCBhIHZhbHVlXG4gKiBAZnVuY3Rpb24gc21vb3RoU3RlcFxuICogQG1lbWJlcm9mIFV0aWxzXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7TnVtYmVyfSB2YWx1ZSB2YWx1ZSB0byBiZSBzbW9vdGhlZCBbMC0xXVxuICogQHJldHVybiB7TnVtYmVyfSBzbW9vdGhlZCB2YWx1ZVxuICogQHN0YXRpY1xuICovXG5leHBvcnQgY29uc3Qgc21vb3RoU3RlcCA9IGZ1bmN0aW9uIChwZXJjKVxue1xuICAgIGNvbnN0IHggPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCAocGVyYyAtIDApIC8gKDEgLSAwKSkpO1xuICAgIHBlcmMgPSB4ICogeCAqICgzIC0gMiAqIHgpOyAvLyBzbW9vdGhzdGVwXG4gICAgcmV0dXJuIHBlcmM7XG59O1xuXG4vKipcbiAqIHNtb290aGVyc3RlcCBhIHZhbHVlXG4gKiBAZnVuY3Rpb24gc21vb3RoZXJTdGVwXG4gKiBAbWVtYmVyb2YgVXRpbHNcbiAqIEBwYXJhbSB2YWx1ZSB7TnVtYmVyfSB2YWx1ZSB0byBiZSBzbW9vdGhlZCBbMC0xXVxuICogQHJldHVybiB7TnVtYmVyfSBzbW9vdGhlZCB2YWx1ZVxuICogQHN0YXRpY1xuICovXG5leHBvcnQgY29uc3Qgc21vb3RoZXJTdGVwID0gZnVuY3Rpb24gKHBlcmMpXG57XG4gICAgY29uc3QgeCA9IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIChwZXJjIC0gMCkgLyAoMSAtIDApKSk7XG4gICAgcGVyYyA9IHggKiB4ICogeCAqICh4ICogKHggKiA2IC0gMTUpICsgMTApOyAvLyBzbW9vdGhlcnN0ZXBcbiAgICByZXR1cm4gcGVyYztcbn07XG5cblxuLyoqXG4gKiBjbGFtcCBudW1iZXIgLyBtYWtlIHN1cmUgaXRzIGJldHdlZW4gbWluL21heFxuICogQGZ1bmN0aW9uIG1hcFxuICogQG1lbWJlcm9mIFV0aWxzXG4gKiBAcGFyYW0ge051bWJlcn0gdmFsdWUgdmFsdWUgdG8gYmUgbWFwcGVkXG4gKiBAcGFyYW0ge051bWJlcn0gbWluIG1pbmltdW0gdmFsdWVcbiAqIEBwYXJhbSB7TnVtYmVyfSBtYXggbWF4aW11bSB2YWx1ZVxuICogQHN0YXRpY1xuICovXG5leHBvcnQgY29uc3QgY2xhbXAgPSBmdW5jdGlvbiAodmFsdWUsIG1pbiwgbWF4KVxue1xuICAgIHJldHVybiBNYXRoLm1pbihNYXRoLm1heCh2YWx1ZSwgbWluKSwgbWF4KTtcbn07XG5cbi8qKlxuICogbWFwIGEgdmFsdWUgaW4gYSByYW5nZSB0byBhIHZhbHVlIGluIGFub3RoZXIgcmFuZ2VcbiAqIEBmdW5jdGlvbiBtYXBcbiAqIEBtZW1iZXJvZiBVdGlsc1xuICogQHBhcmFtIHtOdW1iZXJ9IHZhbHVlIHZhbHVlIHRvIGJlIG1hcHBlZFxuICogQHBhcmFtIHtOdW1iZXJ9IG9sZE1pbiBvbGQgcmFuZ2UgbWluaW11bSB2YWx1ZVxuICogQHBhcmFtIHtOdW1iZXJ9IG9sZE1heCBvbGQgcmFuZ2UgbWF4aW11bSB2YWx1ZVxuICogQHBhcmFtIHtOdW1iZXJ9IG5ld01pbiBuZXcgcmFuZ2UgbWluaW11bSB2YWx1ZVxuICogQHBhcmFtIHtOdW1iZXJ9IG5ld01heCBuZXcgcmFuZ2UgbWF4aW11bSB2YWx1ZVxuICogQHJldHVybiB7TnVtYmVyfSBtYXBwZWQgdmFsdWVcbiAqIEBzdGF0aWNcbiAqL1xuZXhwb3J0IGNvbnN0IG1hcCA9IGZ1bmN0aW9uICh4LCBfb2xkTWluLCBfb2xkTWF4LCBfbmV3TWluLCBfbmV3TWF4LCBfZWFzaW5nKVxue1xuICAgIGlmICh4ID49IF9vbGRNYXgpIHJldHVybiBfbmV3TWF4O1xuICAgIGlmICh4IDw9IF9vbGRNaW4pIHJldHVybiBfbmV3TWluO1xuXG4gICAgbGV0IHJldmVyc2VJbnB1dCA9IGZhbHNlO1xuICAgIGNvbnN0IG9sZE1pbiA9IE1hdGgubWluKF9vbGRNaW4sIF9vbGRNYXgpO1xuICAgIGNvbnN0IG9sZE1heCA9IE1hdGgubWF4KF9vbGRNaW4sIF9vbGRNYXgpO1xuICAgIGlmIChvbGRNaW4gIT0gX29sZE1pbikgcmV2ZXJzZUlucHV0ID0gdHJ1ZTtcblxuICAgIGxldCByZXZlcnNlT3V0cHV0ID0gZmFsc2U7XG4gICAgY29uc3QgbmV3TWluID0gTWF0aC5taW4oX25ld01pbiwgX25ld01heCk7XG4gICAgY29uc3QgbmV3TWF4ID0gTWF0aC5tYXgoX25ld01pbiwgX25ld01heCk7XG4gICAgaWYgKG5ld01pbiAhPSBfbmV3TWluKSByZXZlcnNlT3V0cHV0ID0gdHJ1ZTtcblxuICAgIGxldCBwb3J0aW9uID0gMDtcbiAgICBsZXQgciA9IDA7XG5cbiAgICBpZiAocmV2ZXJzZUlucHV0KSBwb3J0aW9uID0gKChvbGRNYXggLSB4KSAqIChuZXdNYXggLSBuZXdNaW4pKSAvIChvbGRNYXggLSBvbGRNaW4pO1xuICAgIGVsc2UgcG9ydGlvbiA9ICgoeCAtIG9sZE1pbikgKiAobmV3TWF4IC0gbmV3TWluKSkgLyAob2xkTWF4IC0gb2xkTWluKTtcblxuICAgIGlmIChyZXZlcnNlT3V0cHV0KSByID0gbmV3TWF4IC0gcG9ydGlvbjtcbiAgICBlbHNlIHIgPSBwb3J0aW9uICsgbmV3TWluO1xuXG4gICAgaWYgKCFfZWFzaW5nKSByZXR1cm4gcjtcbiAgICBpZiAoX2Vhc2luZyA9PSAxKVxuICAgIHtcbiAgICAgICAgLy8gc21vb3Roc3RlcFxuICAgICAgICB4ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgKHIgLSBfbmV3TWluKSAvIChfbmV3TWF4IC0gX25ld01pbikpKTtcbiAgICAgICAgcmV0dXJuIF9uZXdNaW4gKyB4ICogeCAqICgzIC0gMiAqIHgpICogKF9uZXdNYXggLSBfbmV3TWluKTtcbiAgICB9XG4gICAgaWYgKF9lYXNpbmcgPT0gMilcbiAgICB7XG4gICAgICAgIC8vIHNtb290aGVyc3RlcFxuICAgICAgICB4ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgKHIgLSBfbmV3TWluKSAvIChfbmV3TWF4IC0gX25ld01pbikpKTtcbiAgICAgICAgcmV0dXJuIF9uZXdNaW4gKyB4ICogeCAqIHggKiAoeCAqICh4ICogNiAtIDE1KSArIDEwKSAqIChfbmV3TWF4IC0gX25ld01pbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHI7XG59O1xuXG4vKipcbiAqIEBuYW1lc3BhY2UgTWF0aFxuICovXG4vKipcbiAqIHNldCByYW5kb20gc2VlZCBmb3Igc2VlZGVkUmFuZG9tKClcbiAqIEBtZW1iZXJvZiBNYXRoXG4gKiBAdHlwZSBOdW1iZXJcbiAqIEBzdGF0aWNcbiAqL1xuTWF0aC5yYW5kb21TZWVkID0gMTtcblxuLyoqXG4gKiBnZW5lcmF0ZSBhIHNlZWRlZCByYW5kb20gbnVtYmVyXG4gKiBAZnVuY3Rpb24gc2VlZGVkUmFuZG9tXG4gKiBAbWVtYmVyb2YgTWF0aFxuICogQHBhcmFtIHtOdW1iZXJ9IG1heCBtaW5pbXVtIHBvc3NpYmxlIHJhbmRvbSBudW1iZXJcbiAqIEBwYXJhbSB7TnVtYmVyfSBtaW4gbWF4aW11bSBwb3NzaWJsZSByYW5kb20gbnVtYmVyXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IHJhbmRvbSB2YWx1ZVxuICogQHN0YXRpY1xuICovXG5NYXRoLnNlZWRlZFJhbmRvbSA9IGZ1bmN0aW9uIChtYXgsIG1pbilcbntcbiAgICBpZiAoTWF0aC5yYW5kb21TZWVkID09PSAwKSBNYXRoLnJhbmRvbVNlZWQgPSBNYXRoLnJhbmRvbSgpICogOTk5O1xuICAgIG1heCA9IG1heCB8fCAxO1xuICAgIG1pbiA9IG1pbiB8fCAwO1xuXG4gICAgTWF0aC5yYW5kb21TZWVkID0gKE1hdGgucmFuZG9tU2VlZCAqIDkzMDEgKyA0OTI5NykgJSAyMzMyODA7XG4gICAgY29uc3Qgcm5kID0gTWF0aC5yYW5kb21TZWVkIC8gMjMzMjgwLjA7XG5cbiAgICByZXR1cm4gbWluICsgcm5kICogKG1heCAtIG1pbik7XG59O1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblVUSUxTLmFycmF5V3JpdGVUb0VuZCA9IGZ1bmN0aW9uIChhcnIsIHYpXG57XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCBhcnIubGVuZ3RoOyBpKyspIGFycltpIC0gMV0gPSBhcnJbaV07XG4gICAgYXJyW2Fyci5sZW5ndGggLSAxXSA9IHY7XG59O1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8qKlxuICogcmV0dXJucyB0cnVlIGlmIHBhcmFtZXRlciBpcyBhIG51bWJlclxuICogQGZ1bmN0aW9uIGlzTnVtZXJpY1xuICogQG1lbWJlcm9mIFV0aWxzXG4gKiBAcGFyYW0ge0FueX0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBzdGF0aWNcbiAqL1xuVVRJTFMuaXNOdW1lcmljID0gZnVuY3Rpb24gKG4pXG57XG4gICAgcmV0dXJuICFpc05hTihwYXJzZUZsb2F0KG4pKSAmJiBpc0Zpbml0ZShuKTtcbn07XG5cbi8qKlxuICogcmV0dXJucyB0cnVlIGlmIHBhcmFtZXRlciBpcyBhcnJheVxuICogQGZ1bmN0aW9uIGlzQXJyYXlcbiAqIEBwYXJhbSB7QW55fSB2YWx1ZSBWYWx1ZSB0byBjaGVja1xuICogQG1lbWJlcm9mIFV0aWxzXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICogQHN0YXRpY1xuICovXG5VVElMUy5pc0FycmF5ID0gZnVuY3Rpb24gKHYpXG57XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2KSA9PT0gXCJbb2JqZWN0IEFycmF5XVwiO1xufTtcblxuLyoqXG4gKiBAbmFtZXNwYWNlIFN0cmluZ1xuICovXG5cbi8qKlxuICogYXBwZW5kIGEgbGluZWJyZWFrIHRvIGEgc3RyaW5nXG4gKiBAZnVuY3Rpb24gZW5kbFxuICogQG1lbWJlcm9mIFN0cmluZ1xuICogQHJldHVybiB7U3RyaW5nfSBzdHJpbmcgd2l0aCBuZXdsaW5lIGJyZWFrIGFwcGVuZGVkICgnXFxuJylcbiAqL1xuU3RyaW5nLnByb3RvdHlwZS5lbmRsID0gZnVuY3Rpb24gKClcbntcbiAgICByZXR1cm4gdGhpcyArIFwiXFxuXCI7XG59O1xuXG4vKipcbiAqIHJldHVybiB0cnVlIGlmIHN0cmluZyBzdGFydHMgd2l0aCBwcmVmaXhcbiAqIEBmdW5jdGlvbiBzdGFydHNXaXRoXG4gKiBAbWVtYmVyb2YgU3RyaW5nXG4gKiBAcGFyYW0ge1N0cmluZ30gcHJlZml4IFRoZSBwcmVmaXggdG8gY2hlY2suXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICovXG5TdHJpbmcucHJvdG90eXBlLnN0YXJ0c1dpdGggPSBmdW5jdGlvbiAocHJlZml4KVxue1xuICAgIHJldHVybiB0aGlzLmluZGV4T2YocHJlZml4KSA9PT0gMDtcbn07XG5cbi8qKlxuICogcmV0dXJuIHRydWUgaWYgc3RyaW5nIGVuZHMgd2l0aCBzdWZmaXhcbiAqIEBmdW5jdGlvbiBlbmRzV2l0aFxuICogQG1lbWJlcm9mIFN0cmluZ1xuICogQHBhcmFtIHtTdHJpbmd9IHN1ZmZpeFxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqL1xuU3RyaW5nLnByb3RvdHlwZS5lbmRzV2l0aCA9IFN0cmluZy5wcm90b3R5cGUuZW5kc1dpdGggfHwgZnVuY3Rpb24gKHN1ZmZpeClcbntcbiAgICByZXR1cm4gdGhpcy5tYXRjaChzdWZmaXggKyBcIiRcIikgPT0gc3VmZml4O1xufTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKipcbiAqIGFwcGVuZCBhIHVuaXF1ZS9yYW5kb20gcGFyYW1ldGVyIHRvIGEgdXJsLCBzbyB0aGUgYnJvd3NlciBpcyBmb3JjZWQgdG8gcmVsb2FkIHRoZSBmaWxlLCBldmVuIGlmIGl0cyBjYWNoZWRcbiAqIEBmdW5jdGlvbiBjYWNoZUJ1c3RcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJvZiBVdGlsc1xuICogQHBhcmFtIHtTdHJpbmd9IHVybCBUaGUgdXJsIHRvIGFwcGVuZCB0aGUgY2FjaGVidXN0ZXIgcGFyYW1ldGVyIHRvLlxuICogQHJldHVybiB7U3RyaW5nfSB1cmwgd2l0aCBjYWNoZWJ1c3RlciBwYXJhbWV0ZXJcbiAqL1xuZXhwb3J0IGNvbnN0IGNhY2hlQnVzdCA9IGZ1bmN0aW9uICh1cmwpXG57XG4gICAgaWYgKHVybC5pbmRleE9mKFwiP1wiKSA+IC0xKSB1cmwgKz0gXCImXCI7XG4gICAgZWxzZSB1cmwgKz0gXCI/XCI7XG4gICAgcmV0dXJuIHVybCArIFwiY2I9XCIgKyBDQUJMRVMudXVpZCgpO1xufTtcblxuLyoqXG4gKiBjb3B5IHRoZSBjb250ZW50IG9mIGFuIGFycmF5XG4gKiBAZnVuY3Rpb24gY29weUFycmF5XG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyb2YgVXRpbHNcbiAqIEBwYXJhbSB7QXJyYXl9IHNvdXJjZUFycmF5XG4gKiBAcGFyYW0ge0FycmF5fSBkc3Qgb3B0aW9uYWxcbiAqIEByZXR1cm4ge0FycmF5fSBkc3RcbiAqL1xuZXhwb3J0IGNvbnN0IGNvcHlBcnJheSA9IGZ1bmN0aW9uIChzcmMsIGRzdClcbntcbiAgICBpZiAoIXNyYykgcmV0dXJuIG51bGw7XG4gICAgZHN0ID0gZHN0IHx8IFtdO1xuICAgIGRzdC5sZW5ndGggPSBzcmMubGVuZ3RoO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3JjLmxlbmd0aDsgaSsrKVxuICAgIHtcbiAgICAgICAgZHN0W2ldID0gc3JjW2ldO1xuICAgIH1cblxuICAgIHJldHVybiBkc3Q7XG59O1xuXG5cbi8qKlxuICogcmV0dXJuIHRoZSBmaWxlbmFtZSBwYXJ0IG9mIGEgdXJsXG4gKiBAZnVuY3Rpb24gYmFzZW5hbWVcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJvZiBVdGlsc1xuICogQHBhcmFtIHtTdHJpbmd9IHVybFxuICogQHJldHVybiB7U3RyaW5nfSBqdXN0IHRoZSBmaWxlbmFtZVxuICovXG5leHBvcnQgY29uc3QgYmFzZW5hbWUgPSBmdW5jdGlvbiAodXJsKVxue1xuICAgIGxldCBuYW1lID0gXCJcIjtcbiAgICBpZiAoIXVybCkgcmV0dXJuIFwiXCI7XG4gICAgY29uc3QgcGFydHMgPSAodXJsICsgXCJcIikuc3BsaXQoXCIvXCIpO1xuICAgIGlmIChwYXJ0cy5sZW5ndGggPiAwKVxuICAgIHtcbiAgICAgICAgY29uc3Qgc3RyID0gcGFydHNbcGFydHMubGVuZ3RoIC0gMV07XG4gICAgICAgIGxldCBwYXJ0czIgPSBzdHIuc3BsaXQoXCI/XCIpO1xuICAgICAgICBuYW1lID0gcGFydHMyWzBdO1xuICAgICAgICBwYXJ0czIgPSBuYW1lLnNwbGl0KFwiLlwiKTtcbiAgICAgICAgbmFtZSA9IHBhcnRzMlswXTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmFtZTtcbn07XG5cblxuXG5cbmV4cG9ydCBjb25zdCBhamF4U3luYyA9IGZ1bmN0aW9uICh1cmwsIGNiLCBtZXRob2QsIHBvc3QsIGNvbnRlbnR0eXBlKVxue1xuICAgIHJlcXVlc3Qoe1xuICAgICAgICB1cmwsXG4gICAgICAgIGNiLFxuICAgICAgICBtZXRob2QsXG4gICAgICAgIFwiZGF0YVwiOiBwb3N0LFxuICAgICAgICBjb250ZW50dHlwZSxcbiAgICAgICAgXCJzeW5jXCI6IHRydWUsXG4gICAgfSk7XG59O1xuXG4vKipcbiAqIG1ha2UgYW4gYWpheCByZXF1ZXN0XG4gKiBAZnVuY3Rpb24gYWpheFxuICogQHN0YXRpY1xuICovXG5leHBvcnQgY29uc3QgYWpheCA9IGZ1bmN0aW9uICh1cmwsIGNiLCBtZXRob2QsIHBvc3QsIGNvbnRlbnR0eXBlLCBqc29uUCwgaGVhZGVycyA9IHt9KVxue1xuICAgIHJlcXVlc3Qoe1xuICAgICAgICBcInVybFwiOiB1cmwsXG4gICAgICAgIFwiY2JcIjogY2IsXG4gICAgICAgIFwibWV0aG9kXCI6IG1ldGhvZCxcbiAgICAgICAgXCJkYXRhXCI6IHBvc3QsXG4gICAgICAgIFwiY29udGVudHR5cGVcIjogY29udGVudHR5cGUsXG4gICAgICAgIFwic3luY1wiOiBmYWxzZSxcbiAgICAgICAgXCJqc29uUFwiOiBqc29uUCxcbiAgICAgICAgXCJoZWFkZXJzXCI6IGhlYWRlcnMsXG4gICAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgcmVxdWVzdCA9IGZ1bmN0aW9uIChvcHRpb25zKVxue1xuICAgIGlmICghb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShcImFzeW5jaFwiKSkgb3B0aW9ucy5hc3luY2ggPSB0cnVlO1xuXG4gICAgbGV0IHhocjtcbiAgICB0cnlcbiAgICB7XG4gICAgICAgIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge31cblxuICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKVxuICAgIHtcbiAgICAgICAgaWYgKHhoci5yZWFkeVN0YXRlICE9IDQpIHJldHVybjtcblxuICAgICAgICBpZiAob3B0aW9ucy5jYilcbiAgICAgICAge1xuICAgICAgICAgICAgaWYgKHhoci5zdGF0dXMgPT0gMjAwIHx8IHhoci5zdGF0dXMgPT0gMCkgb3B0aW9ucy5jYihmYWxzZSwgeGhyLnJlc3BvbnNlVGV4dCwgeGhyKTtcbiAgICAgICAgICAgIGVsc2Ugb3B0aW9ucy5jYih0cnVlLCB4aHIucmVzcG9uc2VUZXh0LCB4aHIpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHhoci5hZGRFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIiwgKGV2KSA9PlxuICAgIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3Byb2dyZXNzJyxldi5sb2FkZWQvMTAyNCsnIGtiJyk7XG4gICAgICAgIC8vIGlmIChldi5sZW5ndGhDb21wdXRhYmxlKVxuICAgICAgICAvLyB7XG4gICAgICAgIC8vICAgICB2YXIgcGVyY2VudENvbXBsZXRlID0gZXYubG9hZGVkIC8gZXYudG90YWw7XG4gICAgICAgIC8vICAgICBjb25zb2xlLmxvZyh1cmwscGVyY2VudENvbXBsZXRlKTtcbiAgICAgICAgLy8gfVxuICAgIH0pO1xuXG4gICAgdHJ5XG4gICAge1xuICAgICAgICB4aHIub3BlbihvcHRpb25zLm1ldGhvZCA/IG9wdGlvbnMubWV0aG9kLnRvVXBwZXJDYXNlKCkgOiBcIkdFVFwiLCBvcHRpb25zLnVybCwgIW9wdGlvbnMuc3luYyk7XG4gICAgfVxuICAgIGNhdGNoIChlKVxuICAgIHtcbiAgICAgICAgaWYgKG9wdGlvbnMuY2IpIG9wdGlvbnMuY2IodHJ1ZSwgZS5tc2csIHhocik7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmhlYWRlcnMgPT09IFwib2JqZWN0XCIpXG4gICAge1xuICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob3B0aW9ucy5oZWFkZXJzKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKVxuICAgICAgICB7XG4gICAgICAgICAgICBjb25zdCBuYW1lID0ga2V5c1tpXTtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gb3B0aW9ucy5oZWFkZXJzW25hbWVdO1xuICAgICAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIobmFtZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdHJ5XG4gICAge1xuICAgICAgICBpZiAoIW9wdGlvbnMucG9zdCAmJiAhb3B0aW9ucy5kYXRhKVxuICAgICAgICB7XG4gICAgICAgICAgICB4aHIuc2VuZCgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoXG4gICAgICAgICAgICAgICAgXCJDb250ZW50LXR5cGVcIixcbiAgICAgICAgICAgICAgICBvcHRpb25zLmNvbnRlbnR0eXBlID8gb3B0aW9ucy5jb250ZW50dHlwZSA6IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIsXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgeGhyLnNlbmQob3B0aW9ucy5kYXRhIHx8IG9wdGlvbnMucG9zdCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGUpXG4gICAge1xuICAgICAgICBpZiAob3B0aW9ucy5jYikgb3B0aW9ucy5jYih0cnVlLCBlLm1zZywgeGhyKTtcbiAgICB9XG59O1xuXG5cbmV4cG9ydCBjb25zdCBrZXlDb2RlVG9OYW1lID0gZnVuY3Rpb24gKGtleUNvZGUpXG57XG4gICAgaWYgKCFrZXlDb2RlICYmIGtleUNvZGUgIT09IDApIHJldHVybiBcIlVuaWRlbnRpZmllZFwiO1xuICAgIGNvbnN0IGtleXMgPSB7XG4gICAgICAgIFwiOFwiOiBcIkJhY2tzcGFjZVwiLFxuICAgICAgICBcIjlcIjogXCJUYWJcIixcbiAgICAgICAgXCIxMlwiOiBcIkNsZWFyXCIsXG4gICAgICAgIFwiMTNcIjogXCJFbnRlclwiLFxuICAgICAgICBcIjE2XCI6IFwiU2hpZnRcIixcbiAgICAgICAgXCIxN1wiOiBcIkNvbnRyb2xcIixcbiAgICAgICAgXCIxOFwiOiBcIkFsdFwiLFxuICAgICAgICBcIjE5XCI6IFwiUGF1c2VcIixcbiAgICAgICAgXCIyMFwiOiBcIkNhcHNMb2NrXCIsXG4gICAgICAgIFwiMjdcIjogXCJFc2NhcGVcIixcbiAgICAgICAgXCIzMlwiOiBcIlNwYWNlXCIsXG4gICAgICAgIFwiMzNcIjogXCJQYWdlVXBcIixcbiAgICAgICAgXCIzNFwiOiBcIlBhZ2VEb3duXCIsXG4gICAgICAgIFwiMzVcIjogXCJFbmRcIixcbiAgICAgICAgXCIzNlwiOiBcIkhvbWVcIixcbiAgICAgICAgXCIzN1wiOiBcIkFycm93TGVmdFwiLFxuICAgICAgICBcIjM4XCI6IFwiQXJyb3dVcFwiLFxuICAgICAgICBcIjM5XCI6IFwiQXJyb3dSaWdodFwiLFxuICAgICAgICBcIjQwXCI6IFwiQXJyb3dEb3duXCIsXG4gICAgICAgIFwiNDVcIjogXCJJbnNlcnRcIixcbiAgICAgICAgXCI0NlwiOiBcIkRlbGV0ZVwiLFxuICAgICAgICBcIjExMlwiOiBcIkYxXCIsXG4gICAgICAgIFwiMTEzXCI6IFwiRjJcIixcbiAgICAgICAgXCIxMTRcIjogXCJGM1wiLFxuICAgICAgICBcIjExNVwiOiBcIkY0XCIsXG4gICAgICAgIFwiMTE2XCI6IFwiRjVcIixcbiAgICAgICAgXCIxMTdcIjogXCJGNlwiLFxuICAgICAgICBcIjExOFwiOiBcIkY3XCIsXG4gICAgICAgIFwiMTE5XCI6IFwiRjhcIixcbiAgICAgICAgXCIxMjBcIjogXCJGOVwiLFxuICAgICAgICBcIjEyMVwiOiBcIkYxMFwiLFxuICAgICAgICBcIjEyMlwiOiBcIkYxMVwiLFxuICAgICAgICBcIjEyM1wiOiBcIkYxMlwiLFxuICAgICAgICBcIjE0NFwiOiBcIk51bUxvY2tcIixcbiAgICAgICAgXCIxNDVcIjogXCJTY3JvbGxMb2NrXCIsXG4gICAgICAgIFwiMjI0XCI6IFwiTWV0YVwiXG4gICAgfTtcbiAgICBpZiAoa2V5c1trZXlDb2RlXSlcbiAgICB7XG4gICAgICAgIHJldHVybiBrZXlzW2tleUNvZGVdO1xuICAgIH1cbiAgICBlbHNlXG4gICAge1xuICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShrZXlDb2RlKTtcbiAgICB9XG59O1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG53aW5kb3cucGVyZm9ybWFuY2UgPSB3aW5kb3cucGVyZm9ybWFuY2UgfHwge1xuICAgIFwib2Zmc2V0XCI6IERhdGUubm93KCksXG4gICAgXCJub3dcIjogZnVuY3Rpb24gbm93KClcbiAgICB7XG4gICAgICAgIHJldHVybiBEYXRlLm5vdygpIC0gdGhpcy5vZmZzZXQ7XG4gICAgfSxcbn07XG5cbmV4cG9ydCB7IFVUSUxTIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/utils.js\n");

/***/ }),

/***/ "./src/core/webaudio.js":
/*!******************************!*\
  !*** ./src/core/webaudio.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WEBAUDIO\": () => (/* binding */ WEBAUDIO)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/core/constants.js\");\n/** @namespace WEBAUDIO */\n\n\n\nconst WEBAUDIO = {};\n\nWEBAUDIO.toneJsInitialized = false;\n\n/*\n * External JSDoc definitions\n */\n\n/**\n * Part of the Web Audio API, the AudioBuffer interface represents a short audio asset residing in memory.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer}\n */\n\n/**\n * Part of the Web Audio API, the AudioNode interface is a generic interface for representing an audio processing module.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AudioNode}\n */\n\n/**\n * The AudioContext interface represents an audio-processing graph built from audio modules linked together\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AudioContext}\n */\n\n/**\n * Checks if a global audio context has been created and creates\n * it if necessary. This audio context can be used for native Web Audio as well as Tone.js ops.\n * Associates the audio context with Tone.js if it is being used\n * @param {CABLES.Op} op - The operator which needs the Audio Context\n */\nWEBAUDIO.createAudioContext = function (op)\n{\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n    if (window.AudioContext)\n    {\n        if (!window.audioContext)\n        {\n            window.audioContext = new AudioContext();\n        }\n        // check if tone.js lib is being used\n        if (window.Tone && !WEBAUDIO.toneJsInitialized)\n        {\n            // set current audio context in tone.js\n            Tone.setContext(window.audioContext);\n            WEBAUDIO.toneJsInitialized = true;\n        }\n    }\n    else\n    {\n        op.patch.config.onError(\"NO_WEBAUDIO\", \"Web Audio is not supported in this browser.\");\n        return;\n    }\n    return window.audioContext;\n};\n\n/**\n * Returns the audio context.\n * Before `createAudioContext` must have been called at least once.\n * It most cases you should use `createAudioContext`, which just returns the audio context\n * when it has been created already.\n */\nWEBAUDIO.getAudioContext = function ()\n{\n    return window.audioContext;\n};\n\n/**\n * Creates an audio in port for the op with name `portName`\n * When disconnected it will disconnect the previous connected audio node\n * from the op's audio node.\n * @param {CABLES.Op} op - The operator to create the audio port in\n * @param {string} portName - The name of the port\n * @param {AudioNode} audioNode - The audionode incoming connections should connect to\n * @param {number} [inputChannelIndex=0] - If the audio node has multiple inputs, this is the index of the input channel to connect to\n * @returns {CABLES.Port|undefined} - The newly created audio in port or `undefined` if there was an error\n */\nWEBAUDIO.createAudioInPort = function (op, portName, audioNode, inputChannelIndex)\n{\n    if (!op || !portName || !audioNode)\n    {\n        const msg = \"ERROR: createAudioInPort needs three parameters, op, portName and audioNode\";\n        op.log(msg);\n        throw new Error(msg);\n        // return;\n    }\n    if (!inputChannelIndex)\n    {\n        inputChannelIndex = 0;\n    }\n    op.webAudio = op.webAudio || {};\n    op.webAudio.audioInPorts = op.webAudio.audioInPorts || [];\n    const port = op.inObject(portName);\n    port.webAudio = {};\n    port.webAudio.previousAudioInNode = null;\n    port.webAudio.audioNode = audioNode;\n\n    op.webAudio.audioInPorts[portName] = port;\n\n    port.onChange = function ()\n    {\n        const audioInNode = port.get();\n        // when port disconnected, disconnect audio nodes\n        if (!audioInNode)\n        {\n            if (port.webAudio.previousAudioInNode)\n            {\n                try\n                {\n                    if (port.webAudio.previousAudioInNode.disconnect) port.webAudio.previousAudioInNode.disconnect(port.webAudio.audioNode, 0, inputChannelIndex);\n                    op.setUiError(\"audioCtx\", null);\n                }\n                catch (e)\n                {\n                    try\n                    {\n                        port.webAudio.previousAudioInNode.disconnect(port.webAudio.audioNode);\n                    }\n                    catch (er)\n                    {\n                        op.log(\n                            \"Disconnecting audio node with in/out port index, as well as without in/out-port-index did not work \",\n                            e,\n                        );\n                        if (e.printStackTrace)\n                        {\n                            e.printStackTrace();\n                        }\n                        throw e;\n                    }\n                }\n            }\n        }\n        else\n        {\n            try\n            {\n                if (audioInNode.connect)\n                {\n                    audioInNode.connect(port.webAudio.audioNode, 0, inputChannelIndex);\n                    op.setUiError(\"audioCtx\", null);\n                }\n                else op.setUiError(\"audioCtx\", \"The passed input is not an audio context. Please make sure you connect an audio context to the input.\", 2);\n            }\n            catch (e)\n            {\n                op.log(\"Error: Failed to connect web audio node!\", e);\n                op.log(\"port.webAudio.audioNode\", port.webAudio.audioNode);\n                op.log(\"audioInNode: \", audioInNode);\n                op.log(\"inputChannelIndex:\", inputChannelIndex);\n                op.log(\"audioInNode.connect: \", audioInNode.connect);\n                throw e;\n            }\n        }\n        port.webAudio.previousAudioInNode = audioInNode;\n    };\n    // TODO: Maybe add subtype to audio-node-object?\n    return port;\n};\n\n/**\n * Sometimes it is necessary to replace a node of a port, if so all\n * connections to this node must be disconnected and connections to the new\n * node must be made.\n * Can be used for both Audio ports as well as AudioParam ports\n * if used with an AudioParam pass e.g. `synth.frequency` as newNode\n * @param {CABLES.Port} port - The port where the audio node needs to be replaced\n */\nWEBAUDIO.replaceNodeInPort = function (port, oldNode, newNode)\n{\n    const connectedNode = port.webAudio.previousAudioInNode;\n    // check if connected\n    if (connectedNode && connectedNode.disconnect)\n    {\n        try\n        {\n            connectedNode.disconnect(oldNode);\n        }\n        catch (e)\n        {\n            if (e.printStackTrace)\n            {\n                e.printStackTrace();\n            }\n            throw new Error(\"replaceNodeInPort: Could not disconnect old audio node. \" + e.name + \" \" + e.message);\n        }\n        port.webAudio.audioNode = newNode;\n        try\n        {\n            connectedNode.connect(newNode);\n        }\n        catch (e)\n        {\n            if (e.printStackTrace)\n            {\n                e.printStackTrace();\n            }\n            throw new Error(\"replaceNodeInPort: Could not connect to new node. \" + e.name + \" \" + e.message);\n        }\n    }\n};\n\n/**\n * Creates an audio out port which takes care of (dis-)connecting on it’s own\n * @param {CABLES.op} op - The op to create an audio out port for\n * @param {string} portName - The name of the port to be created\n * @param {AudioNode} audioNode - The audio node to link to the port\n * @returns {(CABLES.Port|undefined)} - The newly created audio out port or `undefined` if there was an error\n */\nWEBAUDIO.createAudioOutPort = function (op, portName, audioNode)\n{\n    if (!op || !portName || !audioNode)\n    {\n        const msg = \"ERROR: createAudioOutPort needs three parameters, op, portName and audioNode\";\n        op.log(msg);\n        throw new Error(msg);\n    }\n\n    const port = op.outObject(portName);\n    // TODO: Maybe add subtype to audio-node-object?\n    port.set(audioNode);\n    return port;\n};\n\n/**\n * Creates an audio param in port for the op with name portName.\n * The port accepts other audio nodes as signals as well as values (numbers)\n * When the port is disconnected it will disconnect the previous connected audio node\n * from the op's audio node and restore the number value set before.\n * @param {CABLES.Op} op - The operator to create an audio param input port for\n * @param {string} portName - The name of the port to create\n * @returns {(CABLES.Port|undefined)} - The newly created port, which takes care of (dis-)connecting on its own, or `undefined` if there was an error\n */\nWEBAUDIO.createAudioParamInPort = function (op, portName, audioNode, options, defaultValue)\n{\n    if (!op || !portName || !audioNode)\n    {\n        op.log(\"ERROR: createAudioParamInPort needs three parameters, op, portName and audioNode\");\n        if (op && op.name) op.log(\"opname: \", op.name);\n        op.log(\"portName\", portName);\n        op.log(\"audioNode: \", audioNode);\n        return;\n    }\n    op.webAudio = op.webAudio || {};\n    op.webAudio.audioInPorts = op.webAudio.audioInPorts || [];\n    // var port = op.inObject(portName);\n    const port = op.inDynamic(\n        portName,\n        [_constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_VALUE, _constants__WEBPACK_IMPORTED_MODULE_0__.CONSTANTS.OP.OP_PORT_TYPE_OBJECT],\n        options,\n        defaultValue,\n    );\n    port.webAudio = {};\n    port.webAudio.previousAudioInNode = null;\n    port.webAudio.audioNode = audioNode;\n\n    op.webAudio.audioInPorts[portName] = port;\n\n    // port.onLinkChanged = function() {\n    //   op.log(\"onLinkChanged\");\n    //   if(port.isLinked()) {\n    //\n    //       if(port.links[0].portOut.type === CABLES.CONSTANTS.OP.OP_PORT_TYPE_) { // value\n    //\n    //       } else if(port.links[0].portOut.type === CABLES.CONSTANTS.OP.OP_PORT_TYPE_OBJECT) { // object\n    //\n    //       }\n    //   } else { // unlinked\n    //\n    //   }\n    // };\n\n    port.onChange = function ()\n    {\n        const audioInNode = port.get();\n        const node = port.webAudio.audioNode;\n        const audioCtx = WEBAUDIO.getAudioContext();\n\n        if (audioInNode != undefined)\n        {\n            if (typeof audioInNode === \"object\" && audioInNode.connect)\n            {\n                try\n                {\n                    audioInNode.connect(node);\n                }\n                catch (e)\n                {\n                    op.log(\"Could not connect audio node: \", e);\n                    if (e.printStackTrace)\n                    {\n                        e.printStackTrace();\n                    }\n                    throw e;\n                }\n                port.webAudio.previousAudioInNode = audioInNode;\n            }\n            else\n            {\n                // tone.js audio param\n                if (node._param && node._param.minValue && node._param.maxValue)\n                {\n                    if (audioInNode >= node._param.minValue && audioInNode <= node._param.maxValue)\n                    {\n                        try\n                        {\n                            if (node.setValueAtTime)\n                            {\n                                node.setValueAtTime(audioInNode, audioCtx.currentTime);\n                            }\n                            else\n                            {\n                                node.value = audioInNode;\n                            }\n                        }\n                        catch (e)\n                        {\n                            op.log(\"Possible AudioParam problem with tone.js op: \", e);\n                            if (e.printStackTrace)\n                            {\n                                e.printStackTrace();\n                            }\n                            throw e;\n                        }\n                    }\n                    else\n                    {\n                        op.log(\"Warning: The value for an audio parameter is out of range!\");\n                    }\n                } // native Web Audio param\n                else if (node.minValue && node.maxValue)\n                {\n                    if (audioInNode >= node.minValue && audioInNode <= node.maxValue)\n                    {\n                        try\n                        {\n                            if (node.setValueAtTime)\n                            {\n                                node.setValueAtTime(audioInNode, audioCtx.currentTime);\n                            }\n                            else\n                            {\n                                node.value = audioInNode;\n                            }\n                        }\n                        catch (e)\n                        {\n                            op.log(\n                                \"AudioParam has minValue / maxValue defined, and value is in range, but setting the value failed! \",\n                                e,\n                            );\n                            if (e.printStackTrace)\n                            {\n                                e.printStackTrace();\n                            }\n                            throw e;\n                        }\n                    }\n                    else\n                    {\n                        op.log(\"Warning: The value for an audio parameter is out of range!\");\n                    }\n                } // no min-max values, try anyway\n                else\n                {\n                    try\n                    {\n                        if (node.setValueAtTime)\n                        {\n                            node.setValueAtTime(audioInNode, audioCtx.currentTime);\n                        }\n                        else\n                        {\n                            node.value = audioInNode;\n                        }\n                    }\n                    catch (e)\n                    {\n                        op.log(\"Possible AudioParam problem (without minValue / maxValue): \", e);\n                        if (e.printStackTrace)\n                        {\n                            e.printStackTrace();\n                        }\n                        throw e;\n                    }\n                }\n\n                if (port.webAudio.previousAudioInNode && port.webAudio.previousAudioInNode.disconnect)\n                {\n                    try\n                    {\n                        port.webAudio.previousAudioInNode.disconnect(node);\n                    }\n                    catch (e)\n                    {\n                        op.log(\"Could not disconnect previous audio node: \", e);\n                        throw e;\n                    }\n                    port.webAudio.previousAudioInNode = undefined;\n                }\n            }\n        }\n        else\n        {\n            // disconnected\n            if (port.webAudio.previousAudioInNode)\n            {\n            }\n        }\n    };\n    return port;\n};\n\n\n/**\n * Loads an audio file and updates the loading indicators when cables is run in the editor.\n * @param {CABLES.Patch} patch - The cables patch, when called from inside an op this is `op.patch`\n * @param {string} url - The url of the audio file to load\n * @param {loadAudioFileFinishedCallback} onFinished - The callback to be called when the loading is finished, passes the AudioBuffer\n * @param {loadAudioFileErrorCallback} onError - The callback when there was an error loading the file, the rror message is passed\n * @see {@link https://developer.mozilla.org/de/docs/Web/API/AudioContext/decodeAudioData}\n */\nWEBAUDIO.loadAudioFile = function (patch, url, onFinished, onError, loadingTask)\n{\n    const audioContext = WEBAUDIO.createAudioContext();\n\n    let loadingId = null;\n    if (loadingTask || loadingTask === undefined)\n    {\n        loadingId = patch.loading.start(\"audio\", url);\n        if (patch.isEditorMode()) gui.jobs().start({ \"id\": \"loadaudio\" + loadingId, \"title\": \" loading audio (\" + url + \")\" });\n    }\n    const request = new XMLHttpRequest();\n    if (!url)\n    {\n        return;\n    }\n    request.open(\"GET\", url, true);\n    request.responseType = \"arraybuffer\";\n    // TODO: maybe crossorigin stuff needed?\n    // Decode asynchronously\n    request.onload = function ()\n    {\n        patch.loading.finished(loadingId);\n        if (patch.isEditorMode()) gui.jobs().finish(\"loadaudio\" + loadingId);\n        audioContext.decodeAudioData(request.response, onFinished, onError);\n    };\n    request.send();\n};\n\n/**\n * Checks if the passed time is a valid time to be used in any of the Tone.js ops.\n * @param {(string|number)} t - The time to check\n * @returns {boolean} - True if time is valid, false if not\n */\nWEBAUDIO.isValidToneTime = function (t)\n{\n    try\n    {\n        const time = new Tone.Time(t);\n    }\n    catch (e)\n    {\n        return false;\n    }\n    return true;\n};\n\n/**\n * Checks if the passed note is a valid note to be used with Tone.js\n * @param {string} note - The note to be checked, e.g. `\"C4\"`\n * @returns {boolean} - True if the note is a valid note, false otherwise\n */\nWEBAUDIO.isValidToneNote = function (note)\n{\n    try\n    {\n        Tone.Frequency(note);\n    }\n    catch (e)\n    {\n        return false;\n    }\n    return true;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS93ZWJhdWRpby5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NBQkxFUy8uL3NyYy9jb3JlL3dlYmF1ZGlvLmpzPzY3MDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBuYW1lc3BhY2UgV0VCQVVESU8gKi9cblxuaW1wb3J0IHsgQ09OU1RBTlRTIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbmNvbnN0IFdFQkFVRElPID0ge307XG5cbldFQkFVRElPLnRvbmVKc0luaXRpYWxpemVkID0gZmFsc2U7XG5cbi8qXG4gKiBFeHRlcm5hbCBKU0RvYyBkZWZpbml0aW9uc1xuICovXG5cbi8qKlxuICogUGFydCBvZiB0aGUgV2ViIEF1ZGlvIEFQSSwgdGhlIEF1ZGlvQnVmZmVyIGludGVyZmFjZSByZXByZXNlbnRzIGEgc2hvcnQgYXVkaW8gYXNzZXQgcmVzaWRpbmcgaW4gbWVtb3J5LlxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0F1ZGlvQnVmZmVyfVxuICovXG5cbi8qKlxuICogUGFydCBvZiB0aGUgV2ViIEF1ZGlvIEFQSSwgdGhlIEF1ZGlvTm9kZSBpbnRlcmZhY2UgaXMgYSBnZW5lcmljIGludGVyZmFjZSBmb3IgcmVwcmVzZW50aW5nIGFuIGF1ZGlvIHByb2Nlc3NpbmcgbW9kdWxlLlxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0F1ZGlvTm9kZX1cbiAqL1xuXG4vKipcbiAqIFRoZSBBdWRpb0NvbnRleHQgaW50ZXJmYWNlIHJlcHJlc2VudHMgYW4gYXVkaW8tcHJvY2Vzc2luZyBncmFwaCBidWlsdCBmcm9tIGF1ZGlvIG1vZHVsZXMgbGlua2VkIHRvZ2V0aGVyXG4gKiBAc2VlIHtAbGluayBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvQXVkaW9Db250ZXh0fVxuICovXG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2xvYmFsIGF1ZGlvIGNvbnRleHQgaGFzIGJlZW4gY3JlYXRlZCBhbmQgY3JlYXRlc1xuICogaXQgaWYgbmVjZXNzYXJ5LiBUaGlzIGF1ZGlvIGNvbnRleHQgY2FuIGJlIHVzZWQgZm9yIG5hdGl2ZSBXZWIgQXVkaW8gYXMgd2VsbCBhcyBUb25lLmpzIG9wcy5cbiAqIEFzc29jaWF0ZXMgdGhlIGF1ZGlvIGNvbnRleHQgd2l0aCBUb25lLmpzIGlmIGl0IGlzIGJlaW5nIHVzZWRcbiAqIEBwYXJhbSB7Q0FCTEVTLk9wfSBvcCAtIFRoZSBvcGVyYXRvciB3aGljaCBuZWVkcyB0aGUgQXVkaW8gQ29udGV4dFxuICovXG5XRUJBVURJTy5jcmVhdGVBdWRpb0NvbnRleHQgPSBmdW5jdGlvbiAob3ApXG57XG4gICAgd2luZG93LkF1ZGlvQ29udGV4dCA9IHdpbmRvdy5BdWRpb0NvbnRleHQgfHwgd2luZG93LndlYmtpdEF1ZGlvQ29udGV4dDtcbiAgICBpZiAod2luZG93LkF1ZGlvQ29udGV4dClcbiAgICB7XG4gICAgICAgIGlmICghd2luZG93LmF1ZGlvQ29udGV4dClcbiAgICAgICAge1xuICAgICAgICAgICAgd2luZG93LmF1ZGlvQ29udGV4dCA9IG5ldyBBdWRpb0NvbnRleHQoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBjaGVjayBpZiB0b25lLmpzIGxpYiBpcyBiZWluZyB1c2VkXG4gICAgICAgIGlmICh3aW5kb3cuVG9uZSAmJiAhV0VCQVVESU8udG9uZUpzSW5pdGlhbGl6ZWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIC8vIHNldCBjdXJyZW50IGF1ZGlvIGNvbnRleHQgaW4gdG9uZS5qc1xuICAgICAgICAgICAgVG9uZS5zZXRDb250ZXh0KHdpbmRvdy5hdWRpb0NvbnRleHQpO1xuICAgICAgICAgICAgV0VCQVVESU8udG9uZUpzSW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2VcbiAgICB7XG4gICAgICAgIG9wLnBhdGNoLmNvbmZpZy5vbkVycm9yKFwiTk9fV0VCQVVESU9cIiwgXCJXZWIgQXVkaW8gaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXIuXCIpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHJldHVybiB3aW5kb3cuYXVkaW9Db250ZXh0O1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBhdWRpbyBjb250ZXh0LlxuICogQmVmb3JlIGBjcmVhdGVBdWRpb0NvbnRleHRgIG11c3QgaGF2ZSBiZWVuIGNhbGxlZCBhdCBsZWFzdCBvbmNlLlxuICogSXQgbW9zdCBjYXNlcyB5b3Ugc2hvdWxkIHVzZSBgY3JlYXRlQXVkaW9Db250ZXh0YCwgd2hpY2gganVzdCByZXR1cm5zIHRoZSBhdWRpbyBjb250ZXh0XG4gKiB3aGVuIGl0IGhhcyBiZWVuIGNyZWF0ZWQgYWxyZWFkeS5cbiAqL1xuV0VCQVVESU8uZ2V0QXVkaW9Db250ZXh0ID0gZnVuY3Rpb24gKClcbntcbiAgICByZXR1cm4gd2luZG93LmF1ZGlvQ29udGV4dDtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhdWRpbyBpbiBwb3J0IGZvciB0aGUgb3Agd2l0aCBuYW1lIGBwb3J0TmFtZWBcbiAqIFdoZW4gZGlzY29ubmVjdGVkIGl0IHdpbGwgZGlzY29ubmVjdCB0aGUgcHJldmlvdXMgY29ubmVjdGVkIGF1ZGlvIG5vZGVcbiAqIGZyb20gdGhlIG9wJ3MgYXVkaW8gbm9kZS5cbiAqIEBwYXJhbSB7Q0FCTEVTLk9wfSBvcCAtIFRoZSBvcGVyYXRvciB0byBjcmVhdGUgdGhlIGF1ZGlvIHBvcnQgaW5cbiAqIEBwYXJhbSB7c3RyaW5nfSBwb3J0TmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBwb3J0XG4gKiBAcGFyYW0ge0F1ZGlvTm9kZX0gYXVkaW9Ob2RlIC0gVGhlIGF1ZGlvbm9kZSBpbmNvbWluZyBjb25uZWN0aW9ucyBzaG91bGQgY29ubmVjdCB0b1xuICogQHBhcmFtIHtudW1iZXJ9IFtpbnB1dENoYW5uZWxJbmRleD0wXSAtIElmIHRoZSBhdWRpbyBub2RlIGhhcyBtdWx0aXBsZSBpbnB1dHMsIHRoaXMgaXMgdGhlIGluZGV4IG9mIHRoZSBpbnB1dCBjaGFubmVsIHRvIGNvbm5lY3QgdG9cbiAqIEByZXR1cm5zIHtDQUJMRVMuUG9ydHx1bmRlZmluZWR9IC0gVGhlIG5ld2x5IGNyZWF0ZWQgYXVkaW8gaW4gcG9ydCBvciBgdW5kZWZpbmVkYCBpZiB0aGVyZSB3YXMgYW4gZXJyb3JcbiAqL1xuV0VCQVVESU8uY3JlYXRlQXVkaW9JblBvcnQgPSBmdW5jdGlvbiAob3AsIHBvcnROYW1lLCBhdWRpb05vZGUsIGlucHV0Q2hhbm5lbEluZGV4KVxue1xuICAgIGlmICghb3AgfHwgIXBvcnROYW1lIHx8ICFhdWRpb05vZGUpXG4gICAge1xuICAgICAgICBjb25zdCBtc2cgPSBcIkVSUk9SOiBjcmVhdGVBdWRpb0luUG9ydCBuZWVkcyB0aHJlZSBwYXJhbWV0ZXJzLCBvcCwgcG9ydE5hbWUgYW5kIGF1ZGlvTm9kZVwiO1xuICAgICAgICBvcC5sb2cobXNnKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG4gICAgICAgIC8vIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCFpbnB1dENoYW5uZWxJbmRleClcbiAgICB7XG4gICAgICAgIGlucHV0Q2hhbm5lbEluZGV4ID0gMDtcbiAgICB9XG4gICAgb3Aud2ViQXVkaW8gPSBvcC53ZWJBdWRpbyB8fCB7fTtcbiAgICBvcC53ZWJBdWRpby5hdWRpb0luUG9ydHMgPSBvcC53ZWJBdWRpby5hdWRpb0luUG9ydHMgfHwgW107XG4gICAgY29uc3QgcG9ydCA9IG9wLmluT2JqZWN0KHBvcnROYW1lKTtcbiAgICBwb3J0LndlYkF1ZGlvID0ge307XG4gICAgcG9ydC53ZWJBdWRpby5wcmV2aW91c0F1ZGlvSW5Ob2RlID0gbnVsbDtcbiAgICBwb3J0LndlYkF1ZGlvLmF1ZGlvTm9kZSA9IGF1ZGlvTm9kZTtcblxuICAgIG9wLndlYkF1ZGlvLmF1ZGlvSW5Qb3J0c1twb3J0TmFtZV0gPSBwb3J0O1xuXG4gICAgcG9ydC5vbkNoYW5nZSA9IGZ1bmN0aW9uICgpXG4gICAge1xuICAgICAgICBjb25zdCBhdWRpb0luTm9kZSA9IHBvcnQuZ2V0KCk7XG4gICAgICAgIC8vIHdoZW4gcG9ydCBkaXNjb25uZWN0ZWQsIGRpc2Nvbm5lY3QgYXVkaW8gbm9kZXNcbiAgICAgICAgaWYgKCFhdWRpb0luTm9kZSlcbiAgICAgICAge1xuICAgICAgICAgICAgaWYgKHBvcnQud2ViQXVkaW8ucHJldmlvdXNBdWRpb0luTm9kZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0cnlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwb3J0LndlYkF1ZGlvLnByZXZpb3VzQXVkaW9Jbk5vZGUuZGlzY29ubmVjdCkgcG9ydC53ZWJBdWRpby5wcmV2aW91c0F1ZGlvSW5Ob2RlLmRpc2Nvbm5lY3QocG9ydC53ZWJBdWRpby5hdWRpb05vZGUsIDAsIGlucHV0Q2hhbm5lbEluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgb3Auc2V0VWlFcnJvcihcImF1ZGlvQ3R4XCIsIG51bGwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRyeVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3J0LndlYkF1ZGlvLnByZXZpb3VzQXVkaW9Jbk5vZGUuZGlzY29ubmVjdChwb3J0LndlYkF1ZGlvLmF1ZGlvTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGVyKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcC5sb2coXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJEaXNjb25uZWN0aW5nIGF1ZGlvIG5vZGUgd2l0aCBpbi9vdXQgcG9ydCBpbmRleCwgYXMgd2VsbCBhcyB3aXRob3V0IGluL291dC1wb3J0LWluZGV4IGRpZCBub3Qgd29yayBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLnByaW50U3RhY2tUcmFjZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnByaW50U3RhY2tUcmFjZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRyeVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmIChhdWRpb0luTm9kZS5jb25uZWN0KVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYXVkaW9Jbk5vZGUuY29ubmVjdChwb3J0LndlYkF1ZGlvLmF1ZGlvTm9kZSwgMCwgaW5wdXRDaGFubmVsSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICBvcC5zZXRVaUVycm9yKFwiYXVkaW9DdHhcIiwgbnVsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Ugb3Auc2V0VWlFcnJvcihcImF1ZGlvQ3R4XCIsIFwiVGhlIHBhc3NlZCBpbnB1dCBpcyBub3QgYW4gYXVkaW8gY29udGV4dC4gUGxlYXNlIG1ha2Ugc3VyZSB5b3UgY29ubmVjdCBhbiBhdWRpbyBjb250ZXh0IHRvIHRoZSBpbnB1dC5cIiwgMik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvcC5sb2coXCJFcnJvcjogRmFpbGVkIHRvIGNvbm5lY3Qgd2ViIGF1ZGlvIG5vZGUhXCIsIGUpO1xuICAgICAgICAgICAgICAgIG9wLmxvZyhcInBvcnQud2ViQXVkaW8uYXVkaW9Ob2RlXCIsIHBvcnQud2ViQXVkaW8uYXVkaW9Ob2RlKTtcbiAgICAgICAgICAgICAgICBvcC5sb2coXCJhdWRpb0luTm9kZTogXCIsIGF1ZGlvSW5Ob2RlKTtcbiAgICAgICAgICAgICAgICBvcC5sb2coXCJpbnB1dENoYW5uZWxJbmRleDpcIiwgaW5wdXRDaGFubmVsSW5kZXgpO1xuICAgICAgICAgICAgICAgIG9wLmxvZyhcImF1ZGlvSW5Ob2RlLmNvbm5lY3Q6IFwiLCBhdWRpb0luTm9kZS5jb25uZWN0KTtcbiAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHBvcnQud2ViQXVkaW8ucHJldmlvdXNBdWRpb0luTm9kZSA9IGF1ZGlvSW5Ob2RlO1xuICAgIH07XG4gICAgLy8gVE9ETzogTWF5YmUgYWRkIHN1YnR5cGUgdG8gYXVkaW8tbm9kZS1vYmplY3Q/XG4gICAgcmV0dXJuIHBvcnQ7XG59O1xuXG4vKipcbiAqIFNvbWV0aW1lcyBpdCBpcyBuZWNlc3NhcnkgdG8gcmVwbGFjZSBhIG5vZGUgb2YgYSBwb3J0LCBpZiBzbyBhbGxcbiAqIGNvbm5lY3Rpb25zIHRvIHRoaXMgbm9kZSBtdXN0IGJlIGRpc2Nvbm5lY3RlZCBhbmQgY29ubmVjdGlvbnMgdG8gdGhlIG5ld1xuICogbm9kZSBtdXN0IGJlIG1hZGUuXG4gKiBDYW4gYmUgdXNlZCBmb3IgYm90aCBBdWRpbyBwb3J0cyBhcyB3ZWxsIGFzIEF1ZGlvUGFyYW0gcG9ydHNcbiAqIGlmIHVzZWQgd2l0aCBhbiBBdWRpb1BhcmFtIHBhc3MgZS5nLiBgc3ludGguZnJlcXVlbmN5YCBhcyBuZXdOb2RlXG4gKiBAcGFyYW0ge0NBQkxFUy5Qb3J0fSBwb3J0IC0gVGhlIHBvcnQgd2hlcmUgdGhlIGF1ZGlvIG5vZGUgbmVlZHMgdG8gYmUgcmVwbGFjZWRcbiAqL1xuV0VCQVVESU8ucmVwbGFjZU5vZGVJblBvcnQgPSBmdW5jdGlvbiAocG9ydCwgb2xkTm9kZSwgbmV3Tm9kZSlcbntcbiAgICBjb25zdCBjb25uZWN0ZWROb2RlID0gcG9ydC53ZWJBdWRpby5wcmV2aW91c0F1ZGlvSW5Ob2RlO1xuICAgIC8vIGNoZWNrIGlmIGNvbm5lY3RlZFxuICAgIGlmIChjb25uZWN0ZWROb2RlICYmIGNvbm5lY3RlZE5vZGUuZGlzY29ubmVjdClcbiAgICB7XG4gICAgICAgIHRyeVxuICAgICAgICB7XG4gICAgICAgICAgICBjb25uZWN0ZWROb2RlLmRpc2Nvbm5lY3Qob2xkTm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmIChlLnByaW50U3RhY2tUcmFjZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBlLnByaW50U3RhY2tUcmFjZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicmVwbGFjZU5vZGVJblBvcnQ6IENvdWxkIG5vdCBkaXNjb25uZWN0IG9sZCBhdWRpbyBub2RlLiBcIiArIGUubmFtZSArIFwiIFwiICsgZS5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICBwb3J0LndlYkF1ZGlvLmF1ZGlvTm9kZSA9IG5ld05vZGU7XG4gICAgICAgIHRyeVxuICAgICAgICB7XG4gICAgICAgICAgICBjb25uZWN0ZWROb2RlLmNvbm5lY3QobmV3Tm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmIChlLnByaW50U3RhY2tUcmFjZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBlLnByaW50U3RhY2tUcmFjZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicmVwbGFjZU5vZGVJblBvcnQ6IENvdWxkIG5vdCBjb25uZWN0IHRvIG5ldyBub2RlLiBcIiArIGUubmFtZSArIFwiIFwiICsgZS5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhdWRpbyBvdXQgcG9ydCB3aGljaCB0YWtlcyBjYXJlIG9mIChkaXMtKWNvbm5lY3Rpbmcgb24gaXTigJlzIG93blxuICogQHBhcmFtIHtDQUJMRVMub3B9IG9wIC0gVGhlIG9wIHRvIGNyZWF0ZSBhbiBhdWRpbyBvdXQgcG9ydCBmb3JcbiAqIEBwYXJhbSB7c3RyaW5nfSBwb3J0TmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBwb3J0IHRvIGJlIGNyZWF0ZWRcbiAqIEBwYXJhbSB7QXVkaW9Ob2RlfSBhdWRpb05vZGUgLSBUaGUgYXVkaW8gbm9kZSB0byBsaW5rIHRvIHRoZSBwb3J0XG4gKiBAcmV0dXJucyB7KENBQkxFUy5Qb3J0fHVuZGVmaW5lZCl9IC0gVGhlIG5ld2x5IGNyZWF0ZWQgYXVkaW8gb3V0IHBvcnQgb3IgYHVuZGVmaW5lZGAgaWYgdGhlcmUgd2FzIGFuIGVycm9yXG4gKi9cbldFQkFVRElPLmNyZWF0ZUF1ZGlvT3V0UG9ydCA9IGZ1bmN0aW9uIChvcCwgcG9ydE5hbWUsIGF1ZGlvTm9kZSlcbntcbiAgICBpZiAoIW9wIHx8ICFwb3J0TmFtZSB8fCAhYXVkaW9Ob2RlKVxuICAgIHtcbiAgICAgICAgY29uc3QgbXNnID0gXCJFUlJPUjogY3JlYXRlQXVkaW9PdXRQb3J0IG5lZWRzIHRocmVlIHBhcmFtZXRlcnMsIG9wLCBwb3J0TmFtZSBhbmQgYXVkaW9Ob2RlXCI7XG4gICAgICAgIG9wLmxvZyhtc2cpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICB9XG5cbiAgICBjb25zdCBwb3J0ID0gb3Aub3V0T2JqZWN0KHBvcnROYW1lKTtcbiAgICAvLyBUT0RPOiBNYXliZSBhZGQgc3VidHlwZSB0byBhdWRpby1ub2RlLW9iamVjdD9cbiAgICBwb3J0LnNldChhdWRpb05vZGUpO1xuICAgIHJldHVybiBwb3J0O1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGF1ZGlvIHBhcmFtIGluIHBvcnQgZm9yIHRoZSBvcCB3aXRoIG5hbWUgcG9ydE5hbWUuXG4gKiBUaGUgcG9ydCBhY2NlcHRzIG90aGVyIGF1ZGlvIG5vZGVzIGFzIHNpZ25hbHMgYXMgd2VsbCBhcyB2YWx1ZXMgKG51bWJlcnMpXG4gKiBXaGVuIHRoZSBwb3J0IGlzIGRpc2Nvbm5lY3RlZCBpdCB3aWxsIGRpc2Nvbm5lY3QgdGhlIHByZXZpb3VzIGNvbm5lY3RlZCBhdWRpbyBub2RlXG4gKiBmcm9tIHRoZSBvcCdzIGF1ZGlvIG5vZGUgYW5kIHJlc3RvcmUgdGhlIG51bWJlciB2YWx1ZSBzZXQgYmVmb3JlLlxuICogQHBhcmFtIHtDQUJMRVMuT3B9IG9wIC0gVGhlIG9wZXJhdG9yIHRvIGNyZWF0ZSBhbiBhdWRpbyBwYXJhbSBpbnB1dCBwb3J0IGZvclxuICogQHBhcmFtIHtzdHJpbmd9IHBvcnROYW1lIC0gVGhlIG5hbWUgb2YgdGhlIHBvcnQgdG8gY3JlYXRlXG4gKiBAcmV0dXJucyB7KENBQkxFUy5Qb3J0fHVuZGVmaW5lZCl9IC0gVGhlIG5ld2x5IGNyZWF0ZWQgcG9ydCwgd2hpY2ggdGFrZXMgY2FyZSBvZiAoZGlzLSljb25uZWN0aW5nIG9uIGl0cyBvd24sIG9yIGB1bmRlZmluZWRgIGlmIHRoZXJlIHdhcyBhbiBlcnJvclxuICovXG5XRUJBVURJTy5jcmVhdGVBdWRpb1BhcmFtSW5Qb3J0ID0gZnVuY3Rpb24gKG9wLCBwb3J0TmFtZSwgYXVkaW9Ob2RlLCBvcHRpb25zLCBkZWZhdWx0VmFsdWUpXG57XG4gICAgaWYgKCFvcCB8fCAhcG9ydE5hbWUgfHwgIWF1ZGlvTm9kZSlcbiAgICB7XG4gICAgICAgIG9wLmxvZyhcIkVSUk9SOiBjcmVhdGVBdWRpb1BhcmFtSW5Qb3J0IG5lZWRzIHRocmVlIHBhcmFtZXRlcnMsIG9wLCBwb3J0TmFtZSBhbmQgYXVkaW9Ob2RlXCIpO1xuICAgICAgICBpZiAob3AgJiYgb3AubmFtZSkgb3AubG9nKFwib3BuYW1lOiBcIiwgb3AubmFtZSk7XG4gICAgICAgIG9wLmxvZyhcInBvcnROYW1lXCIsIHBvcnROYW1lKTtcbiAgICAgICAgb3AubG9nKFwiYXVkaW9Ob2RlOiBcIiwgYXVkaW9Ob2RlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBvcC53ZWJBdWRpbyA9IG9wLndlYkF1ZGlvIHx8IHt9O1xuICAgIG9wLndlYkF1ZGlvLmF1ZGlvSW5Qb3J0cyA9IG9wLndlYkF1ZGlvLmF1ZGlvSW5Qb3J0cyB8fCBbXTtcbiAgICAvLyB2YXIgcG9ydCA9IG9wLmluT2JqZWN0KHBvcnROYW1lKTtcbiAgICBjb25zdCBwb3J0ID0gb3AuaW5EeW5hbWljKFxuICAgICAgICBwb3J0TmFtZSxcbiAgICAgICAgW0NPTlNUQU5UUy5PUC5PUF9QT1JUX1RZUEVfVkFMVUUsIENPTlNUQU5UUy5PUC5PUF9QT1JUX1RZUEVfT0JKRUNUXSxcbiAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgZGVmYXVsdFZhbHVlLFxuICAgICk7XG4gICAgcG9ydC53ZWJBdWRpbyA9IHt9O1xuICAgIHBvcnQud2ViQXVkaW8ucHJldmlvdXNBdWRpb0luTm9kZSA9IG51bGw7XG4gICAgcG9ydC53ZWJBdWRpby5hdWRpb05vZGUgPSBhdWRpb05vZGU7XG5cbiAgICBvcC53ZWJBdWRpby5hdWRpb0luUG9ydHNbcG9ydE5hbWVdID0gcG9ydDtcblxuICAgIC8vIHBvcnQub25MaW5rQ2hhbmdlZCA9IGZ1bmN0aW9uKCkge1xuICAgIC8vICAgb3AubG9nKFwib25MaW5rQ2hhbmdlZFwiKTtcbiAgICAvLyAgIGlmKHBvcnQuaXNMaW5rZWQoKSkge1xuICAgIC8vXG4gICAgLy8gICAgICAgaWYocG9ydC5saW5rc1swXS5wb3J0T3V0LnR5cGUgPT09IENBQkxFUy5DT05TVEFOVFMuT1AuT1BfUE9SVF9UWVBFXykgeyAvLyB2YWx1ZVxuICAgIC8vXG4gICAgLy8gICAgICAgfSBlbHNlIGlmKHBvcnQubGlua3NbMF0ucG9ydE91dC50eXBlID09PSBDQUJMRVMuQ09OU1RBTlRTLk9QLk9QX1BPUlRfVFlQRV9PQkpFQ1QpIHsgLy8gb2JqZWN0XG4gICAgLy9cbiAgICAvLyAgICAgICB9XG4gICAgLy8gICB9IGVsc2UgeyAvLyB1bmxpbmtlZFxuICAgIC8vXG4gICAgLy8gICB9XG4gICAgLy8gfTtcblxuICAgIHBvcnQub25DaGFuZ2UgPSBmdW5jdGlvbiAoKVxuICAgIHtcbiAgICAgICAgY29uc3QgYXVkaW9Jbk5vZGUgPSBwb3J0LmdldCgpO1xuICAgICAgICBjb25zdCBub2RlID0gcG9ydC53ZWJBdWRpby5hdWRpb05vZGU7XG4gICAgICAgIGNvbnN0IGF1ZGlvQ3R4ID0gV0VCQVVESU8uZ2V0QXVkaW9Db250ZXh0KCk7XG5cbiAgICAgICAgaWYgKGF1ZGlvSW5Ob2RlICE9IHVuZGVmaW5lZClcbiAgICAgICAge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBhdWRpb0luTm9kZSA9PT0gXCJvYmplY3RcIiAmJiBhdWRpb0luTm9kZS5jb25uZWN0KVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRyeVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYXVkaW9Jbk5vZGUuY29ubmVjdChub2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGUpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBvcC5sb2coXCJDb3VsZCBub3QgY29ubmVjdCBhdWRpbyBub2RlOiBcIiwgZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlLnByaW50U3RhY2tUcmFjZSlcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZS5wcmludFN0YWNrVHJhY2UoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwb3J0LndlYkF1ZGlvLnByZXZpb3VzQXVkaW9Jbk5vZGUgPSBhdWRpb0luTm9kZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAvLyB0b25lLmpzIGF1ZGlvIHBhcmFtXG4gICAgICAgICAgICAgICAgaWYgKG5vZGUuX3BhcmFtICYmIG5vZGUuX3BhcmFtLm1pblZhbHVlICYmIG5vZGUuX3BhcmFtLm1heFZhbHVlKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGF1ZGlvSW5Ob2RlID49IG5vZGUuX3BhcmFtLm1pblZhbHVlICYmIGF1ZGlvSW5Ob2RlIDw9IG5vZGUuX3BhcmFtLm1heFZhbHVlKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnlcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5zZXRWYWx1ZUF0VGltZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuc2V0VmFsdWVBdFRpbWUoYXVkaW9Jbk5vZGUsIGF1ZGlvQ3R4LmN1cnJlbnRUaW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS52YWx1ZSA9IGF1ZGlvSW5Ob2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGNoIChlKVxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wLmxvZyhcIlBvc3NpYmxlIEF1ZGlvUGFyYW0gcHJvYmxlbSB3aXRoIHRvbmUuanMgb3A6IFwiLCBlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZS5wcmludFN0YWNrVHJhY2UpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnByaW50U3RhY2tUcmFjZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3AubG9nKFwiV2FybmluZzogVGhlIHZhbHVlIGZvciBhbiBhdWRpbyBwYXJhbWV0ZXIgaXMgb3V0IG9mIHJhbmdlIVwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gLy8gbmF0aXZlIFdlYiBBdWRpbyBwYXJhbVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKG5vZGUubWluVmFsdWUgJiYgbm9kZS5tYXhWYWx1ZSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhdWRpb0luTm9kZSA+PSBub2RlLm1pblZhbHVlICYmIGF1ZGlvSW5Ob2RlIDw9IG5vZGUubWF4VmFsdWUpXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeVxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlLnNldFZhbHVlQXRUaW1lKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRWYWx1ZUF0VGltZShhdWRpb0luTm9kZSwgYXVkaW9DdHguY3VycmVudFRpbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnZhbHVlID0gYXVkaW9Jbk5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGUpXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3AubG9nKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkF1ZGlvUGFyYW0gaGFzIG1pblZhbHVlIC8gbWF4VmFsdWUgZGVmaW5lZCwgYW5kIHZhbHVlIGlzIGluIHJhbmdlLCBidXQgc2V0dGluZyB0aGUgdmFsdWUgZmFpbGVkISBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLnByaW50U3RhY2tUcmFjZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucHJpbnRTdGFja1RyYWNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcC5sb2coXCJXYXJuaW5nOiBUaGUgdmFsdWUgZm9yIGFuIGF1ZGlvIHBhcmFtZXRlciBpcyBvdXQgb2YgcmFuZ2UhXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSAvLyBubyBtaW4tbWF4IHZhbHVlcywgdHJ5IGFueXdheVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRyeVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5zZXRWYWx1ZUF0VGltZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnNldFZhbHVlQXRUaW1lKGF1ZGlvSW5Ob2RlLCBhdWRpb0N0eC5jdXJyZW50VGltZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS52YWx1ZSA9IGF1ZGlvSW5Ob2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcC5sb2coXCJQb3NzaWJsZSBBdWRpb1BhcmFtIHByb2JsZW0gKHdpdGhvdXQgbWluVmFsdWUgLyBtYXhWYWx1ZSk6IFwiLCBlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLnByaW50U3RhY2tUcmFjZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnByaW50U3RhY2tUcmFjZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChwb3J0LndlYkF1ZGlvLnByZXZpb3VzQXVkaW9Jbk5vZGUgJiYgcG9ydC53ZWJBdWRpby5wcmV2aW91c0F1ZGlvSW5Ob2RlLmRpc2Nvbm5lY3QpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0cnlcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgcG9ydC53ZWJBdWRpby5wcmV2aW91c0F1ZGlvSW5Ob2RlLmRpc2Nvbm5lY3Qobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGUpXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wLmxvZyhcIkNvdWxkIG5vdCBkaXNjb25uZWN0IHByZXZpb3VzIGF1ZGlvIG5vZGU6IFwiLCBlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcG9ydC53ZWJBdWRpby5wcmV2aW91c0F1ZGlvSW5Ob2RlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIC8vIGRpc2Nvbm5lY3RlZFxuICAgICAgICAgICAgaWYgKHBvcnQud2ViQXVkaW8ucHJldmlvdXNBdWRpb0luTm9kZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHBvcnQ7XG59O1xuXG5cbi8qKlxuICogTG9hZHMgYW4gYXVkaW8gZmlsZSBhbmQgdXBkYXRlcyB0aGUgbG9hZGluZyBpbmRpY2F0b3JzIHdoZW4gY2FibGVzIGlzIHJ1biBpbiB0aGUgZWRpdG9yLlxuICogQHBhcmFtIHtDQUJMRVMuUGF0Y2h9IHBhdGNoIC0gVGhlIGNhYmxlcyBwYXRjaCwgd2hlbiBjYWxsZWQgZnJvbSBpbnNpZGUgYW4gb3AgdGhpcyBpcyBgb3AucGF0Y2hgXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIC0gVGhlIHVybCBvZiB0aGUgYXVkaW8gZmlsZSB0byBsb2FkXG4gKiBAcGFyYW0ge2xvYWRBdWRpb0ZpbGVGaW5pc2hlZENhbGxiYWNrfSBvbkZpbmlzaGVkIC0gVGhlIGNhbGxiYWNrIHRvIGJlIGNhbGxlZCB3aGVuIHRoZSBsb2FkaW5nIGlzIGZpbmlzaGVkLCBwYXNzZXMgdGhlIEF1ZGlvQnVmZmVyXG4gKiBAcGFyYW0ge2xvYWRBdWRpb0ZpbGVFcnJvckNhbGxiYWNrfSBvbkVycm9yIC0gVGhlIGNhbGxiYWNrIHdoZW4gdGhlcmUgd2FzIGFuIGVycm9yIGxvYWRpbmcgdGhlIGZpbGUsIHRoZSBycm9yIG1lc3NhZ2UgaXMgcGFzc2VkXG4gKiBAc2VlIHtAbGluayBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kZS9kb2NzL1dlYi9BUEkvQXVkaW9Db250ZXh0L2RlY29kZUF1ZGlvRGF0YX1cbiAqL1xuV0VCQVVESU8ubG9hZEF1ZGlvRmlsZSA9IGZ1bmN0aW9uIChwYXRjaCwgdXJsLCBvbkZpbmlzaGVkLCBvbkVycm9yLCBsb2FkaW5nVGFzaylcbntcbiAgICBjb25zdCBhdWRpb0NvbnRleHQgPSBXRUJBVURJTy5jcmVhdGVBdWRpb0NvbnRleHQoKTtcblxuICAgIGxldCBsb2FkaW5nSWQgPSBudWxsO1xuICAgIGlmIChsb2FkaW5nVGFzayB8fCBsb2FkaW5nVGFzayA9PT0gdW5kZWZpbmVkKVxuICAgIHtcbiAgICAgICAgbG9hZGluZ0lkID0gcGF0Y2gubG9hZGluZy5zdGFydChcImF1ZGlvXCIsIHVybCk7XG4gICAgICAgIGlmIChwYXRjaC5pc0VkaXRvck1vZGUoKSkgZ3VpLmpvYnMoKS5zdGFydCh7IFwiaWRcIjogXCJsb2FkYXVkaW9cIiArIGxvYWRpbmdJZCwgXCJ0aXRsZVwiOiBcIiBsb2FkaW5nIGF1ZGlvIChcIiArIHVybCArIFwiKVwiIH0pO1xuICAgIH1cbiAgICBjb25zdCByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgaWYgKCF1cmwpXG4gICAge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHJlcXVlc3Qub3BlbihcIkdFVFwiLCB1cmwsIHRydWUpO1xuICAgIHJlcXVlc3QucmVzcG9uc2VUeXBlID0gXCJhcnJheWJ1ZmZlclwiO1xuICAgIC8vIFRPRE86IG1heWJlIGNyb3Nzb3JpZ2luIHN0dWZmIG5lZWRlZD9cbiAgICAvLyBEZWNvZGUgYXN5bmNocm9ub3VzbHlcbiAgICByZXF1ZXN0Lm9ubG9hZCA9IGZ1bmN0aW9uICgpXG4gICAge1xuICAgICAgICBwYXRjaC5sb2FkaW5nLmZpbmlzaGVkKGxvYWRpbmdJZCk7XG4gICAgICAgIGlmIChwYXRjaC5pc0VkaXRvck1vZGUoKSkgZ3VpLmpvYnMoKS5maW5pc2goXCJsb2FkYXVkaW9cIiArIGxvYWRpbmdJZCk7XG4gICAgICAgIGF1ZGlvQ29udGV4dC5kZWNvZGVBdWRpb0RhdGEocmVxdWVzdC5yZXNwb25zZSwgb25GaW5pc2hlZCwgb25FcnJvcik7XG4gICAgfTtcbiAgICByZXF1ZXN0LnNlbmQoKTtcbn07XG5cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBwYXNzZWQgdGltZSBpcyBhIHZhbGlkIHRpbWUgdG8gYmUgdXNlZCBpbiBhbnkgb2YgdGhlIFRvbmUuanMgb3BzLlxuICogQHBhcmFtIHsoc3RyaW5nfG51bWJlcil9IHQgLSBUaGUgdGltZSB0byBjaGVja1xuICogQHJldHVybnMge2Jvb2xlYW59IC0gVHJ1ZSBpZiB0aW1lIGlzIHZhbGlkLCBmYWxzZSBpZiBub3RcbiAqL1xuV0VCQVVESU8uaXNWYWxpZFRvbmVUaW1lID0gZnVuY3Rpb24gKHQpXG57XG4gICAgdHJ5XG4gICAge1xuICAgICAgICBjb25zdCB0aW1lID0gbmV3IFRvbmUuVGltZSh0KTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpXG4gICAge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcblxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIHBhc3NlZCBub3RlIGlzIGEgdmFsaWQgbm90ZSB0byBiZSB1c2VkIHdpdGggVG9uZS5qc1xuICogQHBhcmFtIHtzdHJpbmd9IG5vdGUgLSBUaGUgbm90ZSB0byBiZSBjaGVja2VkLCBlLmcuIGBcIkM0XCJgXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gLSBUcnVlIGlmIHRoZSBub3RlIGlzIGEgdmFsaWQgbm90ZSwgZmFsc2Ugb3RoZXJ3aXNlXG4gKi9cbldFQkFVRElPLmlzVmFsaWRUb25lTm90ZSA9IGZ1bmN0aW9uIChub3RlKVxue1xuICAgIHRyeVxuICAgIHtcbiAgICAgICAgVG9uZS5GcmVxdWVuY3kobm90ZSk7XG4gICAgfVxuICAgIGNhdGNoIChlKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG5cbmV4cG9ydCB7IFdFQkFVRElPIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/webaudio.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/core/index.js");
/******/ 	CABLES = __webpack_exports__["default"];
/******/ 	
/******/ })()
;

var CABLES = CABLES || {}; CABLES.build = {"timestamp":1701939081153,"created":"2023-12-07T08:51:21.153Z","git":{"branch":"master","commit":"4bcad0e1f8525d4d59faa49644f419195eaf3c3c","date":"2023-12-07T08:51:03.000Z","message":"live changes"}};
/*!
@fileoverview gl-matrix - High performance matrix and vector operations
@author Brandon Jones
@author Colin MacKenzie IV
@version 3.1.0

Copyright (c) 2015-2019, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((t=t||self).glMatrix={})}(this,function(t){"use strict";var n=1e-6,a="undefined"!=typeof Float32Array?Float32Array:Array,r=Math.random;var u=Math.PI/180;Math.hypot||(Math.hypot=function(){for(var t=0,n=arguments.length;n--;)t+=arguments[n]*arguments[n];return Math.sqrt(t)});var e=Object.freeze({EPSILON:n,get ARRAY_TYPE(){return a},RANDOM:r,setMatrixArrayType:function(t){a=t},toRadian:function(t){return t*u},equals:function(t,a){return Math.abs(t-a)<=n*Math.max(1,Math.abs(t),Math.abs(a))}});function o(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1],h=a[2],s=a[3];return t[0]=r*i+e*c,t[1]=u*i+o*c,t[2]=r*h+e*s,t[3]=u*h+o*s,t}function i(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t}var c=o,h=i,s=Object.freeze({create:function(){var t=new a(4);return a!=Float32Array&&(t[1]=0,t[2]=0),t[0]=1,t[3]=1,t},clone:function(t){var n=new a(4);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},fromValues:function(t,n,r,u){var e=new a(4);return e[0]=t,e[1]=n,e[2]=r,e[3]=u,e},set:function(t,n,a,r,u){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t},transpose:function(t,n){if(t===n){var a=n[1];t[1]=n[2],t[2]=a}else t[0]=n[0],t[1]=n[2],t[2]=n[1],t[3]=n[3];return t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a*e-u*r;return o?(o=1/o,t[0]=e*o,t[1]=-r*o,t[2]=-u*o,t[3]=a*o,t):null},adjoint:function(t,n){var a=n[0];return t[0]=n[3],t[1]=-n[1],t[2]=-n[2],t[3]=a,t},determinant:function(t){return t[0]*t[3]-t[2]*t[1]},multiply:o,rotate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c+e*i,t[1]=u*c+o*i,t[2]=r*-i+e*c,t[3]=u*-i+o*c,t},scale:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1];return t[0]=r*i,t[1]=u*i,t[2]=e*c,t[3]=o*c,t},fromRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=-a,t[3]=r,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=n[1],t},str:function(t){return"mat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[2],t[3])},LDU:function(t,n,a,r){return t[2]=r[2]/r[0],a[0]=r[0],a[1]=r[1],a[3]=r[3]-t[2]*a[1],[t,n,a]},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t},subtract:i,exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=a[0],c=a[1],h=a[2],s=a[3];return Math.abs(r-i)<=n*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(u-c)<=n*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(e-h)<=n*Math.max(1,Math.abs(e),Math.abs(h))&&Math.abs(o-s)<=n*Math.max(1,Math.abs(o),Math.abs(s))},multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t},mul:c,sub:h});function M(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=a[0],s=a[1],M=a[2],f=a[3],l=a[4],v=a[5];return t[0]=r*h+e*s,t[1]=u*h+o*s,t[2]=r*M+e*f,t[3]=u*M+o*f,t[4]=r*l+e*v+i,t[5]=u*l+o*v+c,t}function f(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t[4]=n[4]-a[4],t[5]=n[5]-a[5],t}var l=M,v=f,b=Object.freeze({create:function(){var t=new a(6);return a!=Float32Array&&(t[1]=0,t[2]=0,t[4]=0,t[5]=0),t[0]=1,t[3]=1,t},clone:function(t){var n=new a(6);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},fromValues:function(t,n,r,u,e,o){var i=new a(6);return i[0]=t,i[1]=n,i[2]=r,i[3]=u,i[4]=e,i[5]=o,i},set:function(t,n,a,r,u,e,o){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=a*e-r*u;return c?(c=1/c,t[0]=e*c,t[1]=-r*c,t[2]=-u*c,t[3]=a*c,t[4]=(u*i-e*o)*c,t[5]=(r*o-a*i)*c,t):null},determinant:function(t){return t[0]*t[3]-t[1]*t[2]},multiply:M,rotate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=Math.sin(a),s=Math.cos(a);return t[0]=r*s+e*h,t[1]=u*s+o*h,t[2]=r*-h+e*s,t[3]=u*-h+o*s,t[4]=i,t[5]=c,t},scale:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=a[0],s=a[1];return t[0]=r*h,t[1]=u*h,t[2]=e*s,t[3]=o*s,t[4]=i,t[5]=c,t},translate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=a[0],s=a[1];return t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=r*h+e*s+i,t[5]=u*h+o*s+c,t},fromRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=-a,t[3]=r,t[4]=0,t[5]=0,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=n[1],t[4]=0,t[5]=0,t},fromTranslation:function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=n[0],t[5]=n[1],t},str:function(t){return"mat2d("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],1)},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t},subtract:f,multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t[4]=n[4]+a[4]*r,t[5]=n[5]+a[5]*r,t},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=a[0],s=a[1],M=a[2],f=a[3],l=a[4],v=a[5];return Math.abs(r-h)<=n*Math.max(1,Math.abs(r),Math.abs(h))&&Math.abs(u-s)<=n*Math.max(1,Math.abs(u),Math.abs(s))&&Math.abs(e-M)<=n*Math.max(1,Math.abs(e),Math.abs(M))&&Math.abs(o-f)<=n*Math.max(1,Math.abs(o),Math.abs(f))&&Math.abs(i-l)<=n*Math.max(1,Math.abs(i),Math.abs(l))&&Math.abs(c-v)<=n*Math.max(1,Math.abs(c),Math.abs(v))},mul:l,sub:v});function m(){var t=new a(9);return a!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[5]=0,t[6]=0,t[7]=0),t[0]=1,t[4]=1,t[8]=1,t}function d(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=a[0],l=a[1],v=a[2],b=a[3],m=a[4],d=a[5],x=a[6],p=a[7],y=a[8];return t[0]=f*r+l*o+v*h,t[1]=f*u+l*i+v*s,t[2]=f*e+l*c+v*M,t[3]=b*r+m*o+d*h,t[4]=b*u+m*i+d*s,t[5]=b*e+m*c+d*M,t[6]=x*r+p*o+y*h,t[7]=x*u+p*i+y*s,t[8]=x*e+p*c+y*M,t}function x(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t[4]=n[4]-a[4],t[5]=n[5]-a[5],t[6]=n[6]-a[6],t[7]=n[7]-a[7],t[8]=n[8]-a[8],t}var p=d,y=x,q=Object.freeze({create:m,fromMat4:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[4],t[4]=n[5],t[5]=n[6],t[6]=n[8],t[7]=n[9],t[8]=n[10],t},clone:function(t){var n=new a(9);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},fromValues:function(t,n,r,u,e,o,i,c,h){var s=new a(9);return s[0]=t,s[1]=n,s[2]=r,s[3]=u,s[4]=e,s[5]=o,s[6]=i,s[7]=c,s[8]=h,s},set:function(t,n,a,r,u,e,o,i,c,h){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t[6]=i,t[7]=c,t[8]=h,t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},transpose:function(t,n){if(t===n){var a=n[1],r=n[2],u=n[5];t[1]=n[3],t[2]=n[6],t[3]=a,t[5]=n[7],t[6]=r,t[7]=u}else t[0]=n[0],t[1]=n[3],t[2]=n[6],t[3]=n[1],t[4]=n[4],t[5]=n[7],t[6]=n[2],t[7]=n[5],t[8]=n[8];return t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=s*o-i*h,f=-s*e+i*c,l=h*e-o*c,v=a*M+r*f+u*l;return v?(v=1/v,t[0]=M*v,t[1]=(-s*r+u*h)*v,t[2]=(i*r-u*o)*v,t[3]=f*v,t[4]=(s*a-u*c)*v,t[5]=(-i*a+u*e)*v,t[6]=l*v,t[7]=(-h*a+r*c)*v,t[8]=(o*a-r*e)*v,t):null},adjoint:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8];return t[0]=o*s-i*h,t[1]=u*h-r*s,t[2]=r*i-u*o,t[3]=i*c-e*s,t[4]=a*s-u*c,t[5]=u*e-a*i,t[6]=e*h-o*c,t[7]=r*c-a*h,t[8]=a*o-r*e,t},determinant:function(t){var n=t[0],a=t[1],r=t[2],u=t[3],e=t[4],o=t[5],i=t[6],c=t[7],h=t[8];return n*(h*e-o*c)+a*(-h*u+o*i)+r*(c*u-e*i)},multiply:d,translate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=a[0],l=a[1];return t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=i,t[5]=c,t[6]=f*r+l*o+h,t[7]=f*u+l*i+s,t[8]=f*e+l*c+M,t},rotate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=Math.sin(a),l=Math.cos(a);return t[0]=l*r+f*o,t[1]=l*u+f*i,t[2]=l*e+f*c,t[3]=l*o-f*r,t[4]=l*i-f*u,t[5]=l*c-f*e,t[6]=h,t[7]=s,t[8]=M,t},scale:function(t,n,a){var r=a[0],u=a[1];return t[0]=r*n[0],t[1]=r*n[1],t[2]=r*n[2],t[3]=u*n[3],t[4]=u*n[4],t[5]=u*n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},fromTranslation:function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=n[0],t[7]=n[1],t[8]=1,t},fromRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=0,t[3]=-a,t[4]=r,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=0,t[4]=n[1],t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},fromMat2d:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=0,t[3]=n[2],t[4]=n[3],t[5]=0,t[6]=n[4],t[7]=n[5],t[8]=1,t},fromQuat:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a+a,i=r+r,c=u+u,h=a*o,s=r*o,M=r*i,f=u*o,l=u*i,v=u*c,b=e*o,m=e*i,d=e*c;return t[0]=1-M-v,t[3]=s-d,t[6]=f+m,t[1]=s+d,t[4]=1-h-v,t[7]=l-b,t[2]=f-m,t[5]=l+b,t[8]=1-h-M,t},normalFromMat4:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=n[9],f=n[10],l=n[11],v=n[12],b=n[13],m=n[14],d=n[15],x=a*i-r*o,p=a*c-u*o,y=a*h-e*o,q=r*c-u*i,g=r*h-e*i,A=u*h-e*c,w=s*b-M*v,R=s*m-f*v,z=s*d-l*v,P=M*m-f*b,j=M*d-l*b,I=f*d-l*m,S=x*I-p*j+y*P+q*z-g*R+A*w;return S?(S=1/S,t[0]=(i*I-c*j+h*P)*S,t[1]=(c*z-o*I-h*R)*S,t[2]=(o*j-i*z+h*w)*S,t[3]=(u*j-r*I-e*P)*S,t[4]=(a*I-u*z+e*R)*S,t[5]=(r*z-a*j-e*w)*S,t[6]=(b*A-m*g+d*q)*S,t[7]=(m*y-v*A-d*p)*S,t[8]=(v*g-b*y+d*x)*S,t):null},projection:function(t,n,a){return t[0]=2/n,t[1]=0,t[2]=0,t[3]=0,t[4]=-2/a,t[5]=0,t[6]=-1,t[7]=1,t[8]=1,t},str:function(t){return"mat3("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8])},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t[6]=n[6]+a[6],t[7]=n[7]+a[7],t[8]=n[8]+a[8],t},subtract:x,multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=n[7]*a,t[8]=n[8]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t[4]=n[4]+a[4]*r,t[5]=n[5]+a[5]*r,t[6]=n[6]+a[6]*r,t[7]=n[7]+a[7]*r,t[8]=n[8]+a[8]*r,t},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=t[6],s=t[7],M=t[8],f=a[0],l=a[1],v=a[2],b=a[3],m=a[4],d=a[5],x=a[6],p=a[7],y=a[8];return Math.abs(r-f)<=n*Math.max(1,Math.abs(r),Math.abs(f))&&Math.abs(u-l)<=n*Math.max(1,Math.abs(u),Math.abs(l))&&Math.abs(e-v)<=n*Math.max(1,Math.abs(e),Math.abs(v))&&Math.abs(o-b)<=n*Math.max(1,Math.abs(o),Math.abs(b))&&Math.abs(i-m)<=n*Math.max(1,Math.abs(i),Math.abs(m))&&Math.abs(c-d)<=n*Math.max(1,Math.abs(c),Math.abs(d))&&Math.abs(h-x)<=n*Math.max(1,Math.abs(h),Math.abs(x))&&Math.abs(s-p)<=n*Math.max(1,Math.abs(s),Math.abs(p))&&Math.abs(M-y)<=n*Math.max(1,Math.abs(M),Math.abs(y))},mul:p,sub:y});function g(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function A(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=n[9],l=n[10],v=n[11],b=n[12],m=n[13],d=n[14],x=n[15],p=a[0],y=a[1],q=a[2],g=a[3];return t[0]=p*r+y*i+q*M+g*b,t[1]=p*u+y*c+q*f+g*m,t[2]=p*e+y*h+q*l+g*d,t[3]=p*o+y*s+q*v+g*x,p=a[4],y=a[5],q=a[6],g=a[7],t[4]=p*r+y*i+q*M+g*b,t[5]=p*u+y*c+q*f+g*m,t[6]=p*e+y*h+q*l+g*d,t[7]=p*o+y*s+q*v+g*x,p=a[8],y=a[9],q=a[10],g=a[11],t[8]=p*r+y*i+q*M+g*b,t[9]=p*u+y*c+q*f+g*m,t[10]=p*e+y*h+q*l+g*d,t[11]=p*o+y*s+q*v+g*x,p=a[12],y=a[13],q=a[14],g=a[15],t[12]=p*r+y*i+q*M+g*b,t[13]=p*u+y*c+q*f+g*m,t[14]=p*e+y*h+q*l+g*d,t[15]=p*o+y*s+q*v+g*x,t}function w(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=r+r,c=u+u,h=e+e,s=r*i,M=r*c,f=r*h,l=u*c,v=u*h,b=e*h,m=o*i,d=o*c,x=o*h;return t[0]=1-(l+b),t[1]=M+x,t[2]=f-d,t[3]=0,t[4]=M-x,t[5]=1-(s+b),t[6]=v+m,t[7]=0,t[8]=f+d,t[9]=v-m,t[10]=1-(s+l),t[11]=0,t[12]=a[0],t[13]=a[1],t[14]=a[2],t[15]=1,t}function R(t,n){return t[0]=n[12],t[1]=n[13],t[2]=n[14],t}function z(t,n){var a=n[0],r=n[1],u=n[2],e=n[4],o=n[5],i=n[6],c=n[8],h=n[9],s=n[10];return t[0]=Math.hypot(a,r,u),t[1]=Math.hypot(e,o,i),t[2]=Math.hypot(c,h,s),t}function P(t,n){var r=new a(3);z(r,n);var u=1/r[0],e=1/r[1],o=1/r[2],i=n[0]*u,c=n[1]*e,h=n[2]*o,s=n[4]*u,M=n[5]*e,f=n[6]*o,l=n[8]*u,v=n[9]*e,b=n[10]*o,m=i+M+b,d=0;return m>0?(d=2*Math.sqrt(m+1),t[3]=.25*d,t[0]=(f-v)/d,t[1]=(l-h)/d,t[2]=(c-s)/d):i>M&&i>b?(d=2*Math.sqrt(1+i-M-b),t[3]=(f-v)/d,t[0]=.25*d,t[1]=(c+s)/d,t[2]=(l+h)/d):M>b?(d=2*Math.sqrt(1+M-i-b),t[3]=(l-h)/d,t[0]=(c+s)/d,t[1]=.25*d,t[2]=(f+v)/d):(d=2*Math.sqrt(1+b-i-M),t[3]=(c-s)/d,t[0]=(l+h)/d,t[1]=(f+v)/d,t[2]=.25*d),t}function j(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t[4]=n[4]-a[4],t[5]=n[5]-a[5],t[6]=n[6]-a[6],t[7]=n[7]-a[7],t[8]=n[8]-a[8],t[9]=n[9]-a[9],t[10]=n[10]-a[10],t[11]=n[11]-a[11],t[12]=n[12]-a[12],t[13]=n[13]-a[13],t[14]=n[14]-a[14],t[15]=n[15]-a[15],t}var I=A,S=j,E=Object.freeze({create:function(){var t=new a(16);return a!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t},clone:function(t){var n=new a(16);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n[9]=t[9],n[10]=t[10],n[11]=t[11],n[12]=t[12],n[13]=t[13],n[14]=t[14],n[15]=t[15],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],t},fromValues:function(t,n,r,u,e,o,i,c,h,s,M,f,l,v,b,m){var d=new a(16);return d[0]=t,d[1]=n,d[2]=r,d[3]=u,d[4]=e,d[5]=o,d[6]=i,d[7]=c,d[8]=h,d[9]=s,d[10]=M,d[11]=f,d[12]=l,d[13]=v,d[14]=b,d[15]=m,d},set:function(t,n,a,r,u,e,o,i,c,h,s,M,f,l,v,b,m){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t[6]=i,t[7]=c,t[8]=h,t[9]=s,t[10]=M,t[11]=f,t[12]=l,t[13]=v,t[14]=b,t[15]=m,t},identity:g,transpose:function(t,n){if(t===n){var a=n[1],r=n[2],u=n[3],e=n[6],o=n[7],i=n[11];t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=a,t[6]=n[9],t[7]=n[13],t[8]=r,t[9]=e,t[11]=n[14],t[12]=u,t[13]=o,t[14]=i}else t[0]=n[0],t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=n[1],t[5]=n[5],t[6]=n[9],t[7]=n[13],t[8]=n[2],t[9]=n[6],t[10]=n[10],t[11]=n[14],t[12]=n[3],t[13]=n[7],t[14]=n[11],t[15]=n[15];return t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=n[9],f=n[10],l=n[11],v=n[12],b=n[13],m=n[14],d=n[15],x=a*i-r*o,p=a*c-u*o,y=a*h-e*o,q=r*c-u*i,g=r*h-e*i,A=u*h-e*c,w=s*b-M*v,R=s*m-f*v,z=s*d-l*v,P=M*m-f*b,j=M*d-l*b,I=f*d-l*m,S=x*I-p*j+y*P+q*z-g*R+A*w;return S?(S=1/S,t[0]=(i*I-c*j+h*P)*S,t[1]=(u*j-r*I-e*P)*S,t[2]=(b*A-m*g+d*q)*S,t[3]=(f*g-M*A-l*q)*S,t[4]=(c*z-o*I-h*R)*S,t[5]=(a*I-u*z+e*R)*S,t[6]=(m*y-v*A-d*p)*S,t[7]=(s*A-f*y+l*p)*S,t[8]=(o*j-i*z+h*w)*S,t[9]=(r*z-a*j-e*w)*S,t[10]=(v*g-b*y+d*x)*S,t[11]=(M*y-s*g-l*x)*S,t[12]=(i*R-o*P-c*w)*S,t[13]=(a*P-r*R+u*w)*S,t[14]=(b*p-v*q-m*x)*S,t[15]=(s*q-M*p+f*x)*S,t):null},adjoint:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=n[9],f=n[10],l=n[11],v=n[12],b=n[13],m=n[14],d=n[15];return t[0]=i*(f*d-l*m)-M*(c*d-h*m)+b*(c*l-h*f),t[1]=-(r*(f*d-l*m)-M*(u*d-e*m)+b*(u*l-e*f)),t[2]=r*(c*d-h*m)-i*(u*d-e*m)+b*(u*h-e*c),t[3]=-(r*(c*l-h*f)-i*(u*l-e*f)+M*(u*h-e*c)),t[4]=-(o*(f*d-l*m)-s*(c*d-h*m)+v*(c*l-h*f)),t[5]=a*(f*d-l*m)-s*(u*d-e*m)+v*(u*l-e*f),t[6]=-(a*(c*d-h*m)-o*(u*d-e*m)+v*(u*h-e*c)),t[7]=a*(c*l-h*f)-o*(u*l-e*f)+s*(u*h-e*c),t[8]=o*(M*d-l*b)-s*(i*d-h*b)+v*(i*l-h*M),t[9]=-(a*(M*d-l*b)-s*(r*d-e*b)+v*(r*l-e*M)),t[10]=a*(i*d-h*b)-o*(r*d-e*b)+v*(r*h-e*i),t[11]=-(a*(i*l-h*M)-o*(r*l-e*M)+s*(r*h-e*i)),t[12]=-(o*(M*m-f*b)-s*(i*m-c*b)+v*(i*f-c*M)),t[13]=a*(M*m-f*b)-s*(r*m-u*b)+v*(r*f-u*M),t[14]=-(a*(i*m-c*b)-o*(r*m-u*b)+v*(r*c-u*i)),t[15]=a*(i*f-c*M)-o*(r*f-u*M)+s*(r*c-u*i),t},determinant:function(t){var n=t[0],a=t[1],r=t[2],u=t[3],e=t[4],o=t[5],i=t[6],c=t[7],h=t[8],s=t[9],M=t[10],f=t[11],l=t[12],v=t[13],b=t[14],m=t[15];return(n*o-a*e)*(M*m-f*b)-(n*i-r*e)*(s*m-f*v)+(n*c-u*e)*(s*b-M*v)+(a*i-r*o)*(h*m-f*l)-(a*c-u*o)*(h*b-M*l)+(r*c-u*i)*(h*v-s*l)},multiply:A,translate:function(t,n,a){var r,u,e,o,i,c,h,s,M,f,l,v,b=a[0],m=a[1],d=a[2];return n===t?(t[12]=n[0]*b+n[4]*m+n[8]*d+n[12],t[13]=n[1]*b+n[5]*m+n[9]*d+n[13],t[14]=n[2]*b+n[6]*m+n[10]*d+n[14],t[15]=n[3]*b+n[7]*m+n[11]*d+n[15]):(r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=n[9],l=n[10],v=n[11],t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=i,t[5]=c,t[6]=h,t[7]=s,t[8]=M,t[9]=f,t[10]=l,t[11]=v,t[12]=r*b+i*m+M*d+n[12],t[13]=u*b+c*m+f*d+n[13],t[14]=e*b+h*m+l*d+n[14],t[15]=o*b+s*m+v*d+n[15]),t},scale:function(t,n,a){var r=a[0],u=a[1],e=a[2];return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t[4]=n[4]*u,t[5]=n[5]*u,t[6]=n[6]*u,t[7]=n[7]*u,t[8]=n[8]*e,t[9]=n[9]*e,t[10]=n[10]*e,t[11]=n[11]*e,t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],t},rotate:function(t,a,r,u){var e,o,i,c,h,s,M,f,l,v,b,m,d,x,p,y,q,g,A,w,R,z,P,j,I=u[0],S=u[1],E=u[2],O=Math.hypot(I,S,E);return O<n?null:(I*=O=1/O,S*=O,E*=O,e=Math.sin(r),i=1-(o=Math.cos(r)),c=a[0],h=a[1],s=a[2],M=a[3],f=a[4],l=a[5],v=a[6],b=a[7],m=a[8],d=a[9],x=a[10],p=a[11],y=I*I*i+o,q=S*I*i+E*e,g=E*I*i-S*e,A=I*S*i-E*e,w=S*S*i+o,R=E*S*i+I*e,z=I*E*i+S*e,P=S*E*i-I*e,j=E*E*i+o,t[0]=c*y+f*q+m*g,t[1]=h*y+l*q+d*g,t[2]=s*y+v*q+x*g,t[3]=M*y+b*q+p*g,t[4]=c*A+f*w+m*R,t[5]=h*A+l*w+d*R,t[6]=s*A+v*w+x*R,t[7]=M*A+b*w+p*R,t[8]=c*z+f*P+m*j,t[9]=h*z+l*P+d*j,t[10]=s*z+v*P+x*j,t[11]=M*z+b*P+p*j,a!==t&&(t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t)},rotateX:function(t,n,a){var r=Math.sin(a),u=Math.cos(a),e=n[4],o=n[5],i=n[6],c=n[7],h=n[8],s=n[9],M=n[10],f=n[11];return n!==t&&(t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t[4]=e*u+h*r,t[5]=o*u+s*r,t[6]=i*u+M*r,t[7]=c*u+f*r,t[8]=h*u-e*r,t[9]=s*u-o*r,t[10]=M*u-i*r,t[11]=f*u-c*r,t},rotateY:function(t,n,a){var r=Math.sin(a),u=Math.cos(a),e=n[0],o=n[1],i=n[2],c=n[3],h=n[8],s=n[9],M=n[10],f=n[11];return n!==t&&(t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t[0]=e*u-h*r,t[1]=o*u-s*r,t[2]=i*u-M*r,t[3]=c*u-f*r,t[8]=e*r+h*u,t[9]=o*r+s*u,t[10]=i*r+M*u,t[11]=c*r+f*u,t},rotateZ:function(t,n,a){var r=Math.sin(a),u=Math.cos(a),e=n[0],o=n[1],i=n[2],c=n[3],h=n[4],s=n[5],M=n[6],f=n[7];return n!==t&&(t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t[0]=e*u+h*r,t[1]=o*u+s*r,t[2]=i*u+M*r,t[3]=c*u+f*r,t[4]=h*u-e*r,t[5]=s*u-o*r,t[6]=M*u-i*r,t[7]=f*u-c*r,t},fromTranslation:function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=n[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromRotation:function(t,a,r){var u,e,o,i=r[0],c=r[1],h=r[2],s=Math.hypot(i,c,h);return s<n?null:(i*=s=1/s,c*=s,h*=s,u=Math.sin(a),o=1-(e=Math.cos(a)),t[0]=i*i*o+e,t[1]=c*i*o+h*u,t[2]=h*i*o-c*u,t[3]=0,t[4]=i*c*o-h*u,t[5]=c*c*o+e,t[6]=h*c*o+i*u,t[7]=0,t[8]=i*h*o+c*u,t[9]=c*h*o-i*u,t[10]=h*h*o+e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t)},fromXRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=a,t[7]=0,t[8]=0,t[9]=-a,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromYRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=0,t[2]=-a,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=a,t[9]=0,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromZRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=0,t[3]=0,t[4]=-a,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromRotationTranslation:w,fromQuat2:function(t,n){var r=new a(3),u=-n[0],e=-n[1],o=-n[2],i=n[3],c=n[4],h=n[5],s=n[6],M=n[7],f=u*u+e*e+o*o+i*i;return f>0?(r[0]=2*(c*i+M*u+h*o-s*e)/f,r[1]=2*(h*i+M*e+s*u-c*o)/f,r[2]=2*(s*i+M*o+c*e-h*u)/f):(r[0]=2*(c*i+M*u+h*o-s*e),r[1]=2*(h*i+M*e+s*u-c*o),r[2]=2*(s*i+M*o+c*e-h*u)),w(t,n,r),t},getTranslation:R,getScaling:z,getRotation:P,fromRotationTranslationScale:function(t,n,a,r){var u=n[0],e=n[1],o=n[2],i=n[3],c=u+u,h=e+e,s=o+o,M=u*c,f=u*h,l=u*s,v=e*h,b=e*s,m=o*s,d=i*c,x=i*h,p=i*s,y=r[0],q=r[1],g=r[2];return t[0]=(1-(v+m))*y,t[1]=(f+p)*y,t[2]=(l-x)*y,t[3]=0,t[4]=(f-p)*q,t[5]=(1-(M+m))*q,t[6]=(b+d)*q,t[7]=0,t[8]=(l+x)*g,t[9]=(b-d)*g,t[10]=(1-(M+v))*g,t[11]=0,t[12]=a[0],t[13]=a[1],t[14]=a[2],t[15]=1,t},fromRotationTranslationScaleOrigin:function(t,n,a,r,u){var e=n[0],o=n[1],i=n[2],c=n[3],h=e+e,s=o+o,M=i+i,f=e*h,l=e*s,v=e*M,b=o*s,m=o*M,d=i*M,x=c*h,p=c*s,y=c*M,q=r[0],g=r[1],A=r[2],w=u[0],R=u[1],z=u[2],P=(1-(b+d))*q,j=(l+y)*q,I=(v-p)*q,S=(l-y)*g,E=(1-(f+d))*g,O=(m+x)*g,T=(v+p)*A,D=(m-x)*A,F=(1-(f+b))*A;return t[0]=P,t[1]=j,t[2]=I,t[3]=0,t[4]=S,t[5]=E,t[6]=O,t[7]=0,t[8]=T,t[9]=D,t[10]=F,t[11]=0,t[12]=a[0]+w-(P*w+S*R+T*z),t[13]=a[1]+R-(j*w+E*R+D*z),t[14]=a[2]+z-(I*w+O*R+F*z),t[15]=1,t},fromQuat:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a+a,i=r+r,c=u+u,h=a*o,s=r*o,M=r*i,f=u*o,l=u*i,v=u*c,b=e*o,m=e*i,d=e*c;return t[0]=1-M-v,t[1]=s+d,t[2]=f-m,t[3]=0,t[4]=s-d,t[5]=1-h-v,t[6]=l+b,t[7]=0,t[8]=f+m,t[9]=l-b,t[10]=1-h-M,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},frustum:function(t,n,a,r,u,e,o){var i=1/(a-n),c=1/(u-r),h=1/(e-o);return t[0]=2*e*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*e*c,t[6]=0,t[7]=0,t[8]=(a+n)*i,t[9]=(u+r)*c,t[10]=(o+e)*h,t[11]=-1,t[12]=0,t[13]=0,t[14]=o*e*2*h,t[15]=0,t},perspective:function(t,n,a,r,u){var e,o=1/Math.tan(n/2);return t[0]=o/a,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=o,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=u&&u!==1/0?(e=1/(r-u),t[10]=(u+r)*e,t[14]=2*u*r*e):(t[10]=-1,t[14]=-2*r),t},perspectiveFromFieldOfView:function(t,n,a,r){var u=Math.tan(n.upDegrees*Math.PI/180),e=Math.tan(n.downDegrees*Math.PI/180),o=Math.tan(n.leftDegrees*Math.PI/180),i=Math.tan(n.rightDegrees*Math.PI/180),c=2/(o+i),h=2/(u+e);return t[0]=c,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=h,t[6]=0,t[7]=0,t[8]=-(o-i)*c*.5,t[9]=(u-e)*h*.5,t[10]=r/(a-r),t[11]=-1,t[12]=0,t[13]=0,t[14]=r*a/(a-r),t[15]=0,t},ortho:function(t,n,a,r,u,e,o){var i=1/(n-a),c=1/(r-u),h=1/(e-o);return t[0]=-2*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*c,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*h,t[11]=0,t[12]=(n+a)*i,t[13]=(u+r)*c,t[14]=(o+e)*h,t[15]=1,t},lookAt:function(t,a,r,u){var e,o,i,c,h,s,M,f,l,v,b=a[0],m=a[1],d=a[2],x=u[0],p=u[1],y=u[2],q=r[0],A=r[1],w=r[2];return Math.abs(b-q)<n&&Math.abs(m-A)<n&&Math.abs(d-w)<n?g(t):(M=b-q,f=m-A,l=d-w,e=p*(l*=v=1/Math.hypot(M,f,l))-y*(f*=v),o=y*(M*=v)-x*l,i=x*f-p*M,(v=Math.hypot(e,o,i))?(e*=v=1/v,o*=v,i*=v):(e=0,o=0,i=0),c=f*i-l*o,h=l*e-M*i,s=M*o-f*e,(v=Math.hypot(c,h,s))?(c*=v=1/v,h*=v,s*=v):(c=0,h=0,s=0),t[0]=e,t[1]=c,t[2]=M,t[3]=0,t[4]=o,t[5]=h,t[6]=f,t[7]=0,t[8]=i,t[9]=s,t[10]=l,t[11]=0,t[12]=-(e*b+o*m+i*d),t[13]=-(c*b+h*m+s*d),t[14]=-(M*b+f*m+l*d),t[15]=1,t)},targetTo:function(t,n,a,r){var u=n[0],e=n[1],o=n[2],i=r[0],c=r[1],h=r[2],s=u-a[0],M=e-a[1],f=o-a[2],l=s*s+M*M+f*f;l>0&&(s*=l=1/Math.sqrt(l),M*=l,f*=l);var v=c*f-h*M,b=h*s-i*f,m=i*M-c*s;return(l=v*v+b*b+m*m)>0&&(v*=l=1/Math.sqrt(l),b*=l,m*=l),t[0]=v,t[1]=b,t[2]=m,t[3]=0,t[4]=M*m-f*b,t[5]=f*v-s*m,t[6]=s*b-M*v,t[7]=0,t[8]=s,t[9]=M,t[10]=f,t[11]=0,t[12]=u,t[13]=e,t[14]=o,t[15]=1,t},str:function(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t[6]=n[6]+a[6],t[7]=n[7]+a[7],t[8]=n[8]+a[8],t[9]=n[9]+a[9],t[10]=n[10]+a[10],t[11]=n[11]+a[11],t[12]=n[12]+a[12],t[13]=n[13]+a[13],t[14]=n[14]+a[14],t[15]=n[15]+a[15],t},subtract:j,multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=n[7]*a,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=n[11]*a,t[12]=n[12]*a,t[13]=n[13]*a,t[14]=n[14]*a,t[15]=n[15]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t[4]=n[4]+a[4]*r,t[5]=n[5]+a[5]*r,t[6]=n[6]+a[6]*r,t[7]=n[7]+a[7]*r,t[8]=n[8]+a[8]*r,t[9]=n[9]+a[9]*r,t[10]=n[10]+a[10]*r,t[11]=n[11]+a[11]*r,t[12]=n[12]+a[12]*r,t[13]=n[13]+a[13]*r,t[14]=n[14]+a[14]*r,t[15]=n[15]+a[15]*r,t},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]&&t[9]===n[9]&&t[10]===n[10]&&t[11]===n[11]&&t[12]===n[12]&&t[13]===n[13]&&t[14]===n[14]&&t[15]===n[15]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=t[6],s=t[7],M=t[8],f=t[9],l=t[10],v=t[11],b=t[12],m=t[13],d=t[14],x=t[15],p=a[0],y=a[1],q=a[2],g=a[3],A=a[4],w=a[5],R=a[6],z=a[7],P=a[8],j=a[9],I=a[10],S=a[11],E=a[12],O=a[13],T=a[14],D=a[15];return Math.abs(r-p)<=n*Math.max(1,Math.abs(r),Math.abs(p))&&Math.abs(u-y)<=n*Math.max(1,Math.abs(u),Math.abs(y))&&Math.abs(e-q)<=n*Math.max(1,Math.abs(e),Math.abs(q))&&Math.abs(o-g)<=n*Math.max(1,Math.abs(o),Math.abs(g))&&Math.abs(i-A)<=n*Math.max(1,Math.abs(i),Math.abs(A))&&Math.abs(c-w)<=n*Math.max(1,Math.abs(c),Math.abs(w))&&Math.abs(h-R)<=n*Math.max(1,Math.abs(h),Math.abs(R))&&Math.abs(s-z)<=n*Math.max(1,Math.abs(s),Math.abs(z))&&Math.abs(M-P)<=n*Math.max(1,Math.abs(M),Math.abs(P))&&Math.abs(f-j)<=n*Math.max(1,Math.abs(f),Math.abs(j))&&Math.abs(l-I)<=n*Math.max(1,Math.abs(l),Math.abs(I))&&Math.abs(v-S)<=n*Math.max(1,Math.abs(v),Math.abs(S))&&Math.abs(b-E)<=n*Math.max(1,Math.abs(b),Math.abs(E))&&Math.abs(m-O)<=n*Math.max(1,Math.abs(m),Math.abs(O))&&Math.abs(d-T)<=n*Math.max(1,Math.abs(d),Math.abs(T))&&Math.abs(x-D)<=n*Math.max(1,Math.abs(x),Math.abs(D))},mul:I,sub:S});function O(){var t=new a(3);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function T(t){var n=t[0],a=t[1],r=t[2];return Math.hypot(n,a,r)}function D(t,n,r){var u=new a(3);return u[0]=t,u[1]=n,u[2]=r,u}function F(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t}function L(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t[2]=n[2]*a[2],t}function V(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t[2]=n[2]/a[2],t}function Q(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2];return Math.hypot(a,r,u)}function Y(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2];return a*a+r*r+u*u}function X(t){var n=t[0],a=t[1],r=t[2];return n*n+a*a+r*r}function Z(t,n){var a=n[0],r=n[1],u=n[2],e=a*a+r*r+u*u;return e>0&&(e=1/Math.sqrt(e)),t[0]=n[0]*e,t[1]=n[1]*e,t[2]=n[2]*e,t}function _(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function B(t,n,a){var r=n[0],u=n[1],e=n[2],o=a[0],i=a[1],c=a[2];return t[0]=u*c-e*i,t[1]=e*o-r*c,t[2]=r*i-u*o,t}var N,k=F,U=L,W=V,C=Q,G=Y,H=T,J=X,K=(N=O(),function(t,n,a,r,u,e){var o,i;for(n||(n=3),a||(a=0),i=r?Math.min(r*n+a,t.length):t.length,o=a;o<i;o+=n)N[0]=t[o],N[1]=t[o+1],N[2]=t[o+2],u(N,N,e),t[o]=N[0],t[o+1]=N[1],t[o+2]=N[2];return t}),$=Object.freeze({create:O,clone:function(t){var n=new a(3);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n},length:T,fromValues:D,copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t},set:function(t,n,a,r){return t[0]=n,t[1]=a,t[2]=r,t},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t},subtract:F,multiply:L,divide:V,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t},min:function(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t[2]=Math.min(n[2],a[2]),t},max:function(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t[2]=Math.max(n[2],a[2]),t},round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t},scale:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t},scaleAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t},distance:Q,squaredDistance:Y,squaredLength:X,negate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t},inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t},normalize:Z,dot:_,cross:B,lerp:function(t,n,a,r){var u=n[0],e=n[1],o=n[2];return t[0]=u+r*(a[0]-u),t[1]=e+r*(a[1]-e),t[2]=o+r*(a[2]-o),t},hermite:function(t,n,a,r,u,e){var o=e*e,i=o*(2*e-3)+1,c=o*(e-2)+e,h=o*(e-1),s=o*(3-2*e);return t[0]=n[0]*i+a[0]*c+r[0]*h+u[0]*s,t[1]=n[1]*i+a[1]*c+r[1]*h+u[1]*s,t[2]=n[2]*i+a[2]*c+r[2]*h+u[2]*s,t},bezier:function(t,n,a,r,u,e){var o=1-e,i=o*o,c=e*e,h=i*o,s=3*e*i,M=3*c*o,f=c*e;return t[0]=n[0]*h+a[0]*s+r[0]*M+u[0]*f,t[1]=n[1]*h+a[1]*s+r[1]*M+u[1]*f,t[2]=n[2]*h+a[2]*s+r[2]*M+u[2]*f,t},random:function(t,n){n=n||1;var a=2*r()*Math.PI,u=2*r()-1,e=Math.sqrt(1-u*u)*n;return t[0]=Math.cos(a)*e,t[1]=Math.sin(a)*e,t[2]=u*n,t},transformMat4:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=a[3]*r+a[7]*u+a[11]*e+a[15];return o=o||1,t[0]=(a[0]*r+a[4]*u+a[8]*e+a[12])/o,t[1]=(a[1]*r+a[5]*u+a[9]*e+a[13])/o,t[2]=(a[2]*r+a[6]*u+a[10]*e+a[14])/o,t},transformMat3:function(t,n,a){var r=n[0],u=n[1],e=n[2];return t[0]=r*a[0]+u*a[3]+e*a[6],t[1]=r*a[1]+u*a[4]+e*a[7],t[2]=r*a[2]+u*a[5]+e*a[8],t},transformQuat:function(t,n,a){var r=a[0],u=a[1],e=a[2],o=a[3],i=n[0],c=n[1],h=n[2],s=u*h-e*c,M=e*i-r*h,f=r*c-u*i,l=u*f-e*M,v=e*s-r*f,b=r*M-u*s,m=2*o;return s*=m,M*=m,f*=m,l*=2,v*=2,b*=2,t[0]=i+s+l,t[1]=c+M+v,t[2]=h+f+b,t},rotateX:function(t,n,a,r){var u=[],e=[];return u[0]=n[0]-a[0],u[1]=n[1]-a[1],u[2]=n[2]-a[2],e[0]=u[0],e[1]=u[1]*Math.cos(r)-u[2]*Math.sin(r),e[2]=u[1]*Math.sin(r)+u[2]*Math.cos(r),t[0]=e[0]+a[0],t[1]=e[1]+a[1],t[2]=e[2]+a[2],t},rotateY:function(t,n,a,r){var u=[],e=[];return u[0]=n[0]-a[0],u[1]=n[1]-a[1],u[2]=n[2]-a[2],e[0]=u[2]*Math.sin(r)+u[0]*Math.cos(r),e[1]=u[1],e[2]=u[2]*Math.cos(r)-u[0]*Math.sin(r),t[0]=e[0]+a[0],t[1]=e[1]+a[1],t[2]=e[2]+a[2],t},rotateZ:function(t,n,a,r){var u=[],e=[];return u[0]=n[0]-a[0],u[1]=n[1]-a[1],u[2]=n[2]-a[2],e[0]=u[0]*Math.cos(r)-u[1]*Math.sin(r),e[1]=u[0]*Math.sin(r)+u[1]*Math.cos(r),e[2]=u[2],t[0]=e[0]+a[0],t[1]=e[1]+a[1],t[2]=e[2]+a[2],t},angle:function(t,n){var a=D(t[0],t[1],t[2]),r=D(n[0],n[1],n[2]);Z(a,a),Z(r,r);var u=_(a,r);return u>1?0:u<-1?Math.PI:Math.acos(u)},zero:function(t){return t[0]=0,t[1]=0,t[2]=0,t},str:function(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=a[0],i=a[1],c=a[2];return Math.abs(r-o)<=n*Math.max(1,Math.abs(r),Math.abs(o))&&Math.abs(u-i)<=n*Math.max(1,Math.abs(u),Math.abs(i))&&Math.abs(e-c)<=n*Math.max(1,Math.abs(e),Math.abs(c))},sub:k,mul:U,div:W,dist:C,sqrDist:G,len:H,sqrLen:J,forEach:K});function tt(){var t=new a(4);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[3]=0),t}function nt(t){var n=new a(4);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n}function at(t,n,r,u){var e=new a(4);return e[0]=t,e[1]=n,e[2]=r,e[3]=u,e}function rt(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function ut(t,n,a,r,u){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t}function et(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t}function ot(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t}function it(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t[2]=n[2]*a[2],t[3]=n[3]*a[3],t}function ct(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t[2]=n[2]/a[2],t[3]=n[3]/a[3],t}function ht(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t}function st(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2],e=n[3]-t[3];return Math.hypot(a,r,u,e)}function Mt(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2],e=n[3]-t[3];return a*a+r*r+u*u+e*e}function ft(t){var n=t[0],a=t[1],r=t[2],u=t[3];return Math.hypot(n,a,r,u)}function lt(t){var n=t[0],a=t[1],r=t[2],u=t[3];return n*n+a*a+r*r+u*u}function vt(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a*a+r*r+u*u+e*e;return o>0&&(o=1/Math.sqrt(o)),t[0]=a*o,t[1]=r*o,t[2]=u*o,t[3]=e*o,t}function bt(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]+t[3]*n[3]}function mt(t,n,a,r){var u=n[0],e=n[1],o=n[2],i=n[3];return t[0]=u+r*(a[0]-u),t[1]=e+r*(a[1]-e),t[2]=o+r*(a[2]-o),t[3]=i+r*(a[3]-i),t}function dt(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]}function xt(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=a[0],c=a[1],h=a[2],s=a[3];return Math.abs(r-i)<=n*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(u-c)<=n*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(e-h)<=n*Math.max(1,Math.abs(e),Math.abs(h))&&Math.abs(o-s)<=n*Math.max(1,Math.abs(o),Math.abs(s))}var pt=ot,yt=it,qt=ct,gt=st,At=Mt,wt=ft,Rt=lt,zt=function(){var t=tt();return function(n,a,r,u,e,o){var i,c;for(a||(a=4),r||(r=0),c=u?Math.min(u*a+r,n.length):n.length,i=r;i<c;i+=a)t[0]=n[i],t[1]=n[i+1],t[2]=n[i+2],t[3]=n[i+3],e(t,t,o),n[i]=t[0],n[i+1]=t[1],n[i+2]=t[2],n[i+3]=t[3];return n}}(),Pt=Object.freeze({create:tt,clone:nt,fromValues:at,copy:rt,set:ut,add:et,subtract:ot,multiply:it,divide:ct,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t[3]=Math.ceil(n[3]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t[3]=Math.floor(n[3]),t},min:function(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t[2]=Math.min(n[2],a[2]),t[3]=Math.min(n[3],a[3]),t},max:function(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t[2]=Math.max(n[2],a[2]),t[3]=Math.max(n[3],a[3]),t},round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t[3]=Math.round(n[3]),t},scale:ht,scaleAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t},distance:st,squaredDistance:Mt,length:ft,squaredLength:lt,negate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=-n[3],t},inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t[3]=1/n[3],t},normalize:vt,dot:bt,cross:function(t,n,a,r){var u=a[0]*r[1]-a[1]*r[0],e=a[0]*r[2]-a[2]*r[0],o=a[0]*r[3]-a[3]*r[0],i=a[1]*r[2]-a[2]*r[1],c=a[1]*r[3]-a[3]*r[1],h=a[2]*r[3]-a[3]*r[2],s=n[0],M=n[1],f=n[2],l=n[3];return t[0]=M*h-f*c+l*i,t[1]=-s*h+f*o-l*e,t[2]=s*c-M*o+l*u,t[3]=-s*i+M*e-f*u,t},lerp:mt,random:function(t,n){var a,u,e,o,i,c;n=n||1;do{i=(a=2*r()-1)*a+(u=2*r()-1)*u}while(i>=1);do{c=(e=2*r()-1)*e+(o=2*r()-1)*o}while(c>=1);var h=Math.sqrt((1-i)/c);return t[0]=n*a,t[1]=n*u,t[2]=n*e*h,t[3]=n*o*h,t},transformMat4:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3];return t[0]=a[0]*r+a[4]*u+a[8]*e+a[12]*o,t[1]=a[1]*r+a[5]*u+a[9]*e+a[13]*o,t[2]=a[2]*r+a[6]*u+a[10]*e+a[14]*o,t[3]=a[3]*r+a[7]*u+a[11]*e+a[15]*o,t},transformQuat:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=a[0],i=a[1],c=a[2],h=a[3],s=h*r+i*e-c*u,M=h*u+c*r-o*e,f=h*e+o*u-i*r,l=-o*r-i*u-c*e;return t[0]=s*h+l*-o+M*-c-f*-i,t[1]=M*h+l*-i+f*-o-s*-c,t[2]=f*h+l*-c+s*-i-M*-o,t[3]=n[3],t},zero:function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=0,t},str:function(t){return"vec4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},exactEquals:dt,equals:xt,sub:pt,mul:yt,div:qt,dist:gt,sqrDist:At,len:wt,sqrLen:Rt,forEach:zt});function jt(){var t=new a(4);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t[3]=1,t}function It(t,n,a){a*=.5;var r=Math.sin(a);return t[0]=r*n[0],t[1]=r*n[1],t[2]=r*n[2],t[3]=Math.cos(a),t}function St(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1],h=a[2],s=a[3];return t[0]=r*s+o*i+u*h-e*c,t[1]=u*s+o*c+e*i-r*h,t[2]=e*s+o*h+r*c-u*i,t[3]=o*s-r*i-u*c-e*h,t}function Et(t,n,a){a*=.5;var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c+o*i,t[1]=u*c+e*i,t[2]=e*c-u*i,t[3]=o*c-r*i,t}function Ot(t,n,a){a*=.5;var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c-e*i,t[1]=u*c+o*i,t[2]=e*c+r*i,t[3]=o*c-u*i,t}function Tt(t,n,a){a*=.5;var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c+u*i,t[1]=u*c-r*i,t[2]=e*c+o*i,t[3]=o*c-e*i,t}function Dt(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=Math.sqrt(a*a+r*r+u*u),i=Math.exp(e),c=o>0?i*Math.sin(o)/o:0;return t[0]=a*c,t[1]=r*c,t[2]=u*c,t[3]=i*Math.cos(o),t}function Ft(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=Math.sqrt(a*a+r*r+u*u),i=o>0?Math.atan2(o,e)/o:0;return t[0]=a*i,t[1]=r*i,t[2]=u*i,t[3]=.5*Math.log(a*a+r*r+u*u+e*e),t}function Lt(t,a,r,u){var e,o,i,c,h,s=a[0],M=a[1],f=a[2],l=a[3],v=r[0],b=r[1],m=r[2],d=r[3];return(o=s*v+M*b+f*m+l*d)<0&&(o=-o,v=-v,b=-b,m=-m,d=-d),1-o>n?(e=Math.acos(o),i=Math.sin(e),c=Math.sin((1-u)*e)/i,h=Math.sin(u*e)/i):(c=1-u,h=u),t[0]=c*s+h*v,t[1]=c*M+h*b,t[2]=c*f+h*m,t[3]=c*l+h*d,t}function Vt(t,n){var a,r=n[0]+n[4]+n[8];if(r>0)a=Math.sqrt(r+1),t[3]=.5*a,a=.5/a,t[0]=(n[5]-n[7])*a,t[1]=(n[6]-n[2])*a,t[2]=(n[1]-n[3])*a;else{var u=0;n[4]>n[0]&&(u=1),n[8]>n[3*u+u]&&(u=2);var e=(u+1)%3,o=(u+2)%3;a=Math.sqrt(n[3*u+u]-n[3*e+e]-n[3*o+o]+1),t[u]=.5*a,a=.5/a,t[3]=(n[3*e+o]-n[3*o+e])*a,t[e]=(n[3*e+u]+n[3*u+e])*a,t[o]=(n[3*o+u]+n[3*u+o])*a}return t}var Qt,Yt,Xt,Zt,_t,Bt,Nt=nt,kt=at,Ut=rt,Wt=ut,Ct=et,Gt=St,Ht=ht,Jt=bt,Kt=mt,$t=ft,tn=$t,nn=lt,an=nn,rn=vt,un=dt,en=xt,on=(Qt=O(),Yt=D(1,0,0),Xt=D(0,1,0),function(t,n,a){var r=_(n,a);return r<-.999999?(B(Qt,Yt,n),H(Qt)<1e-6&&B(Qt,Xt,n),Z(Qt,Qt),It(t,Qt,Math.PI),t):r>.999999?(t[0]=0,t[1]=0,t[2]=0,t[3]=1,t):(B(Qt,n,a),t[0]=Qt[0],t[1]=Qt[1],t[2]=Qt[2],t[3]=1+r,rn(t,t))}),cn=(Zt=jt(),_t=jt(),function(t,n,a,r,u,e){return Lt(Zt,n,u,e),Lt(_t,a,r,e),Lt(t,Zt,_t,2*e*(1-e)),t}),hn=(Bt=m(),function(t,n,a,r){return Bt[0]=a[0],Bt[3]=a[1],Bt[6]=a[2],Bt[1]=r[0],Bt[4]=r[1],Bt[7]=r[2],Bt[2]=-n[0],Bt[5]=-n[1],Bt[8]=-n[2],rn(t,Vt(t,Bt))}),sn=Object.freeze({create:jt,identity:function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},setAxisAngle:It,getAxisAngle:function(t,a){var r=2*Math.acos(a[3]),u=Math.sin(r/2);return u>n?(t[0]=a[0]/u,t[1]=a[1]/u,t[2]=a[2]/u):(t[0]=1,t[1]=0,t[2]=0),r},getAngle:function(t,n){var a=Jt(t,n);return Math.acos(2*a*a-1)},multiply:St,rotateX:Et,rotateY:Ot,rotateZ:Tt,calculateW:function(t,n){var a=n[0],r=n[1],u=n[2];return t[0]=a,t[1]=r,t[2]=u,t[3]=Math.sqrt(Math.abs(1-a*a-r*r-u*u)),t},exp:Dt,ln:Ft,pow:function(t,n,a){return Ft(t,n),Ht(t,t,a),Dt(t,t),t},slerp:Lt,random:function(t){var n=r(),a=r(),u=r(),e=Math.sqrt(1-n),o=Math.sqrt(n);return t[0]=e*Math.sin(2*Math.PI*a),t[1]=e*Math.cos(2*Math.PI*a),t[2]=o*Math.sin(2*Math.PI*u),t[3]=o*Math.cos(2*Math.PI*u),t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a*a+r*r+u*u+e*e,i=o?1/o:0;return t[0]=-a*i,t[1]=-r*i,t[2]=-u*i,t[3]=e*i,t},conjugate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t},fromMat3:Vt,fromEuler:function(t,n,a,r){var u=.5*Math.PI/180;n*=u,a*=u,r*=u;var e=Math.sin(n),o=Math.cos(n),i=Math.sin(a),c=Math.cos(a),h=Math.sin(r),s=Math.cos(r);return t[0]=e*c*s-o*i*h,t[1]=o*i*s+e*c*h,t[2]=o*c*h-e*i*s,t[3]=o*c*s+e*i*h,t},str:function(t){return"quat("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},clone:Nt,fromValues:kt,copy:Ut,set:Wt,add:Ct,mul:Gt,scale:Ht,dot:Jt,lerp:Kt,length:$t,len:tn,squaredLength:nn,sqrLen:an,normalize:rn,exactEquals:un,equals:en,rotationTo:on,sqlerp:cn,setAxes:hn});function Mn(t,n,a){var r=.5*a[0],u=.5*a[1],e=.5*a[2],o=n[0],i=n[1],c=n[2],h=n[3];return t[0]=o,t[1]=i,t[2]=c,t[3]=h,t[4]=r*h+u*c-e*i,t[5]=u*h+e*o-r*c,t[6]=e*h+r*i-u*o,t[7]=-r*o-u*i-e*c,t}function fn(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t}var ln=Ut;var vn=Ut;function bn(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[4],c=a[5],h=a[6],s=a[7],M=n[4],f=n[5],l=n[6],v=n[7],b=a[0],m=a[1],d=a[2],x=a[3];return t[0]=r*x+o*b+u*d-e*m,t[1]=u*x+o*m+e*b-r*d,t[2]=e*x+o*d+r*m-u*b,t[3]=o*x-r*b-u*m-e*d,t[4]=r*s+o*i+u*h-e*c+M*x+v*b+f*d-l*m,t[5]=u*s+o*c+e*i-r*h+f*x+v*m+l*b-M*d,t[6]=e*s+o*h+r*c-u*i+l*x+v*d+M*m-f*b,t[7]=o*s-r*i-u*c-e*h+v*x-M*b-f*m-l*d,t}var mn=bn;var dn=Jt;var xn=$t,pn=xn,yn=nn,qn=yn;var gn=Object.freeze({create:function(){var t=new a(8);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0),t[3]=1,t},clone:function(t){var n=new a(8);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n},fromValues:function(t,n,r,u,e,o,i,c){var h=new a(8);return h[0]=t,h[1]=n,h[2]=r,h[3]=u,h[4]=e,h[5]=o,h[6]=i,h[7]=c,h},fromRotationTranslationValues:function(t,n,r,u,e,o,i){var c=new a(8);c[0]=t,c[1]=n,c[2]=r,c[3]=u;var h=.5*e,s=.5*o,M=.5*i;return c[4]=h*u+s*r-M*n,c[5]=s*u+M*t-h*r,c[6]=M*u+h*n-s*t,c[7]=-h*t-s*n-M*r,c},fromRotationTranslation:Mn,fromTranslation:function(t,n){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=.5*n[0],t[5]=.5*n[1],t[6]=.5*n[2],t[7]=0,t},fromRotation:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=0,t[5]=0,t[6]=0,t[7]=0,t},fromMat4:function(t,n){var r=jt();P(r,n);var u=new a(3);return R(u,n),Mn(t,r,u),t},copy:fn,identity:function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t},set:function(t,n,a,r,u,e,o,i,c){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t[6]=i,t[7]=c,t},getReal:ln,getDual:function(t,n){return t[0]=n[4],t[1]=n[5],t[2]=n[6],t[3]=n[7],t},setReal:vn,setDual:function(t,n){return t[4]=n[0],t[5]=n[1],t[6]=n[2],t[7]=n[3],t},getTranslation:function(t,n){var a=n[4],r=n[5],u=n[6],e=n[7],o=-n[0],i=-n[1],c=-n[2],h=n[3];return t[0]=2*(a*h+e*o+r*c-u*i),t[1]=2*(r*h+e*i+u*o-a*c),t[2]=2*(u*h+e*c+a*i-r*o),t},translate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=.5*a[0],c=.5*a[1],h=.5*a[2],s=n[4],M=n[5],f=n[6],l=n[7];return t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=o*i+u*h-e*c+s,t[5]=o*c+e*i-r*h+M,t[6]=o*h+r*c-u*i+f,t[7]=-r*i-u*c-e*h+l,t},rotateX:function(t,n,a){var r=-n[0],u=-n[1],e=-n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=i*o+s*r+c*e-h*u,f=c*o+s*u+h*r-i*e,l=h*o+s*e+i*u-c*r,v=s*o-i*r-c*u-h*e;return Et(t,n,a),r=t[0],u=t[1],e=t[2],o=t[3],t[4]=M*o+v*r+f*e-l*u,t[5]=f*o+v*u+l*r-M*e,t[6]=l*o+v*e+M*u-f*r,t[7]=v*o-M*r-f*u-l*e,t},rotateY:function(t,n,a){var r=-n[0],u=-n[1],e=-n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=i*o+s*r+c*e-h*u,f=c*o+s*u+h*r-i*e,l=h*o+s*e+i*u-c*r,v=s*o-i*r-c*u-h*e;return Ot(t,n,a),r=t[0],u=t[1],e=t[2],o=t[3],t[4]=M*o+v*r+f*e-l*u,t[5]=f*o+v*u+l*r-M*e,t[6]=l*o+v*e+M*u-f*r,t[7]=v*o-M*r-f*u-l*e,t},rotateZ:function(t,n,a){var r=-n[0],u=-n[1],e=-n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=i*o+s*r+c*e-h*u,f=c*o+s*u+h*r-i*e,l=h*o+s*e+i*u-c*r,v=s*o-i*r-c*u-h*e;return Tt(t,n,a),r=t[0],u=t[1],e=t[2],o=t[3],t[4]=M*o+v*r+f*e-l*u,t[5]=f*o+v*u+l*r-M*e,t[6]=l*o+v*e+M*u-f*r,t[7]=v*o-M*r-f*u-l*e,t},rotateByQuatAppend:function(t,n,a){var r=a[0],u=a[1],e=a[2],o=a[3],i=n[0],c=n[1],h=n[2],s=n[3];return t[0]=i*o+s*r+c*e-h*u,t[1]=c*o+s*u+h*r-i*e,t[2]=h*o+s*e+i*u-c*r,t[3]=s*o-i*r-c*u-h*e,i=n[4],c=n[5],h=n[6],s=n[7],t[4]=i*o+s*r+c*e-h*u,t[5]=c*o+s*u+h*r-i*e,t[6]=h*o+s*e+i*u-c*r,t[7]=s*o-i*r-c*u-h*e,t},rotateByQuatPrepend:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1],h=a[2],s=a[3];return t[0]=r*s+o*i+u*h-e*c,t[1]=u*s+o*c+e*i-r*h,t[2]=e*s+o*h+r*c-u*i,t[3]=o*s-r*i-u*c-e*h,i=a[4],c=a[5],h=a[6],s=a[7],t[4]=r*s+o*i+u*h-e*c,t[5]=u*s+o*c+e*i-r*h,t[6]=e*s+o*h+r*c-u*i,t[7]=o*s-r*i-u*c-e*h,t},rotateAroundAxis:function(t,a,r,u){if(Math.abs(u)<n)return fn(t,a);var e=Math.hypot(r[0],r[1],r[2]);u*=.5;var o=Math.sin(u),i=o*r[0]/e,c=o*r[1]/e,h=o*r[2]/e,s=Math.cos(u),M=a[0],f=a[1],l=a[2],v=a[3];t[0]=M*s+v*i+f*h-l*c,t[1]=f*s+v*c+l*i-M*h,t[2]=l*s+v*h+M*c-f*i,t[3]=v*s-M*i-f*c-l*h;var b=a[4],m=a[5],d=a[6],x=a[7];return t[4]=b*s+x*i+m*h-d*c,t[5]=m*s+x*c+d*i-b*h,t[6]=d*s+x*h+b*c-m*i,t[7]=x*s-b*i-m*c-d*h,t},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t[6]=n[6]+a[6],t[7]=n[7]+a[7],t},multiply:bn,mul:mn,scale:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=n[7]*a,t},dot:dn,lerp:function(t,n,a,r){var u=1-r;return dn(n,a)<0&&(r=-r),t[0]=n[0]*u+a[0]*r,t[1]=n[1]*u+a[1]*r,t[2]=n[2]*u+a[2]*r,t[3]=n[3]*u+a[3]*r,t[4]=n[4]*u+a[4]*r,t[5]=n[5]*u+a[5]*r,t[6]=n[6]*u+a[6]*r,t[7]=n[7]*u+a[7]*r,t},invert:function(t,n){var a=yn(n);return t[0]=-n[0]/a,t[1]=-n[1]/a,t[2]=-n[2]/a,t[3]=n[3]/a,t[4]=-n[4]/a,t[5]=-n[5]/a,t[6]=-n[6]/a,t[7]=n[7]/a,t},conjugate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t[4]=-n[4],t[5]=-n[5],t[6]=-n[6],t[7]=n[7],t},length:xn,len:pn,squaredLength:yn,sqrLen:qn,normalize:function(t,n){var a=yn(n);if(a>0){a=Math.sqrt(a);var r=n[0]/a,u=n[1]/a,e=n[2]/a,o=n[3]/a,i=n[4],c=n[5],h=n[6],s=n[7],M=r*i+u*c+e*h+o*s;t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=(i-r*M)/a,t[5]=(c-u*M)/a,t[6]=(h-e*M)/a,t[7]=(s-o*M)/a}return t},str:function(t){return"quat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+")"},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=t[6],s=t[7],M=a[0],f=a[1],l=a[2],v=a[3],b=a[4],m=a[5],d=a[6],x=a[7];return Math.abs(r-M)<=n*Math.max(1,Math.abs(r),Math.abs(M))&&Math.abs(u-f)<=n*Math.max(1,Math.abs(u),Math.abs(f))&&Math.abs(e-l)<=n*Math.max(1,Math.abs(e),Math.abs(l))&&Math.abs(o-v)<=n*Math.max(1,Math.abs(o),Math.abs(v))&&Math.abs(i-b)<=n*Math.max(1,Math.abs(i),Math.abs(b))&&Math.abs(c-m)<=n*Math.max(1,Math.abs(c),Math.abs(m))&&Math.abs(h-d)<=n*Math.max(1,Math.abs(h),Math.abs(d))&&Math.abs(s-x)<=n*Math.max(1,Math.abs(s),Math.abs(x))}});function An(){var t=new a(2);return a!=Float32Array&&(t[0]=0,t[1]=0),t}function wn(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t}function Rn(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t}function zn(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t}function Pn(t,n){var a=n[0]-t[0],r=n[1]-t[1];return Math.hypot(a,r)}function jn(t,n){var a=n[0]-t[0],r=n[1]-t[1];return a*a+r*r}function In(t){var n=t[0],a=t[1];return Math.hypot(n,a)}function Sn(t){var n=t[0],a=t[1];return n*n+a*a}var En=In,On=wn,Tn=Rn,Dn=zn,Fn=Pn,Ln=jn,Vn=Sn,Qn=function(){var t=An();return function(n,a,r,u,e,o){var i,c;for(a||(a=2),r||(r=0),c=u?Math.min(u*a+r,n.length):n.length,i=r;i<c;i+=a)t[0]=n[i],t[1]=n[i+1],e(t,t,o),n[i]=t[0],n[i+1]=t[1];return n}}(),Yn=Object.freeze({create:An,clone:function(t){var n=new a(2);return n[0]=t[0],n[1]=t[1],n},fromValues:function(t,n){var r=new a(2);return r[0]=t,r[1]=n,r},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t},set:function(t,n,a){return t[0]=n,t[1]=a,t},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t},subtract:wn,multiply:Rn,divide:zn,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t},min:function(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t},max:function(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t},round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t},scale:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t},scaleAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t},distance:Pn,squaredDistance:jn,length:In,squaredLength:Sn,negate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t},inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t},normalize:function(t,n){var a=n[0],r=n[1],u=a*a+r*r;return u>0&&(u=1/Math.sqrt(u)),t[0]=n[0]*u,t[1]=n[1]*u,t},dot:function(t,n){return t[0]*n[0]+t[1]*n[1]},cross:function(t,n,a){var r=n[0]*a[1]-n[1]*a[0];return t[0]=t[1]=0,t[2]=r,t},lerp:function(t,n,a,r){var u=n[0],e=n[1];return t[0]=u+r*(a[0]-u),t[1]=e+r*(a[1]-e),t},random:function(t,n){n=n||1;var a=2*r()*Math.PI;return t[0]=Math.cos(a)*n,t[1]=Math.sin(a)*n,t},transformMat2:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[2]*u,t[1]=a[1]*r+a[3]*u,t},transformMat2d:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[2]*u+a[4],t[1]=a[1]*r+a[3]*u+a[5],t},transformMat3:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[3]*u+a[6],t[1]=a[1]*r+a[4]*u+a[7],t},transformMat4:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[4]*u+a[12],t[1]=a[1]*r+a[5]*u+a[13],t},rotate:function(t,n,a,r){var u=n[0]-a[0],e=n[1]-a[1],o=Math.sin(r),i=Math.cos(r);return t[0]=u*i-e*o+a[0],t[1]=u*o+e*i+a[1],t},angle:function(t,n){var a=t[0],r=t[1],u=n[0],e=n[1],o=a*a+r*r;o>0&&(o=1/Math.sqrt(o));var i=u*u+e*e;i>0&&(i=1/Math.sqrt(i));var c=(a*u+r*e)*o*i;return c>1?0:c<-1?Math.PI:Math.acos(c)},zero:function(t){return t[0]=0,t[1]=0,t},str:function(t){return"vec2("+t[0]+", "+t[1]+")"},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]},equals:function(t,a){var r=t[0],u=t[1],e=a[0],o=a[1];return Math.abs(r-e)<=n*Math.max(1,Math.abs(r),Math.abs(e))&&Math.abs(u-o)<=n*Math.max(1,Math.abs(u),Math.abs(o))},len:En,sub:On,mul:Tn,div:Dn,dist:Fn,sqrDist:Ln,sqrLen:Vn,forEach:Qn});t.glMatrix=e,t.mat2=s,t.mat2d=b,t.mat3=q,t.mat4=E,t.quat=sn,t.quat2=gn,t.vec2=Yn,t.vec3=$,t.vec4=Pt,Object.defineProperty(t,"__esModule",{value:!0})});

// ["glMatrix", "mat2", "mat2d", "mat3", "mat4", "quat", "quat2", "vec2", "vec3", "vec4"]
window.glMatrix = glMatrix;
window.mat2 = glMatrix.mat2;
window.mat2d = glMatrix.mat2d;
window.mat3 = glMatrix.mat3;
window.mat4 = glMatrix.mat4;
window.quat = glMatrix.quat;
window.quat2 = glMatrix.quat2;
window.vec2 = glMatrix.vec2;
window.vec3 = glMatrix.vec3;
window.vec4 = glMatrix.vec4;



var CABLES = CABLES || {}; CABLES.build = {"timestamp":1701939081153,"created":"2023-12-07T08:51:21.153Z","git":{"branch":"master","commit":"4bcad0e1f8525d4d59faa49644f419195eaf3c3c","date":"2023-12-07T08:51:03.000Z","message":"live changes"}};

if(!CABLES.exportedPatches) CABLES.exportedPatches={};CABLES.exportedPatches['3cXWRQ']={"ops":[{"id":"8a9eea59-629b-4b63-815d-98d9fd338d3b","uiAttribs":{},"portsIn":[{"name":"FPS Limit","value":25},{"name":"Reduce FPS not focussed","value":true},{"name":"Reduce FPS loading","value":true},{"name":"Clear","value":true},{"name":"ClearAlpha","value":true},{"name":"Fullscreen Button","value":false},{"name":"Active","value":true},{"name":"Hires Displays","value":true},{"name":"Pixel Unit index","value":0},{"name":"Pixel Unit","value":"Display"}],"portsOut":[{"name":"trigger","links":[{"portIn":"exe","portOut":"trigger","objIn":"cd075347-f7c1-4b5a-bba3-9bb2949d3f32","objOut":"8a9eea59-629b-4b63-815d-98d9fd338d3b"},{"portIn":"Trigger","portOut":"trigger","objIn":"84c164af-7ce5-4107-8f95-a2f07226b5bf","objOut":"8a9eea59-629b-4b63-815d-98d9fd338d3b"}]},{"name":"width","value":788},{"name":"height","value":428}],"objName":"Ops.Gl.MainLoop"},{"id":"2f4f2159-71ba-4123-ba9d-279746b8bdba","uiAttribs":{},"portsIn":[{"name":"posZ","value":0},{"name":"scale","value":1},{"name":"rotX","value":0},{"name":"rotY","value":0},{"name":"rotZ","value":0}],"portsOut":[{"name":"trigger","links":[{"portIn":"exe","portOut":"trigger","objIn":"aca169a7-b0e0-41b3-83d1-cc89e6480f8f","objOut":"2f4f2159-71ba-4123-ba9d-279746b8bdba"}]}],"objName":"Ops.Gl.Matrix.Transform"},{"id":"1c703768-596d-4284-bd0f-b3e6bc40239e","uiAttribs":{},"portsIn":[{"name":"posX","value":0.2999999999999998},{"name":"posY","value":-4.6},{"name":"posZ","value":-6.4},{"name":"scale","value":1.5},{"name":"rotX","value":-34},{"name":"rotY","value":0.7},{"name":"rotZ","value":45}],"portsOut":[{"name":"trigger","links":[{"portIn":"Execute","portOut":"trigger","objIn":"3f76b3cd-87d9-4cc8-a8e6-b48d97d5fbc3","objOut":"1c703768-596d-4284-bd0f-b3e6bc40239e"}]}],"objName":"Ops.Gl.Matrix.Transform"},{"id":"f84a403e-867f-4cba-b326-25e0d281d0ac","uiAttribs":{},"portsOut":[{"name":"result","links":[{"portIn":"posY","portOut":"result","objIn":"2f4f2159-71ba-4123-ba9d-279746b8bdba","objOut":"f84a403e-867f-4cba-b326-25e0d281d0ac"}]}],"objName":"Ops.Math.Multiply"},{"id":"bd35edba-d44e-4722-8f71-46fe27323d45","uiAttribs":{},"portsOut":[{"name":"result","links":[{"portIn":"posX","portOut":"result","objIn":"2f4f2159-71ba-4123-ba9d-279746b8bdba","objOut":"bd35edba-d44e-4722-8f71-46fe27323d45"}]}],"objName":"Ops.Math.Multiply"},{"id":"4adcd7e4-500e-49a6-b6bb-8812e64e80de","uiAttribs":{},"portsIn":[{"name":"posX","value":0},{"name":"posY","value":0},{"name":"posZ","value":0.3},{"name":"scale","value":1},{"name":"rotX","value":0},{"name":"rotY","value":-180},{"name":"rotZ","value":0}],"portsOut":[{"name":"trigger","links":[{"portIn":"render","portOut":"trigger","objIn":"3d305077-453d-42d3-9666-1989b0f35c5f","objOut":"4adcd7e4-500e-49a6-b6bb-8812e64e80de"}]}],"objName":"Ops.Gl.Matrix.Transform"},{"id":"3d305077-453d-42d3-9666-1989b0f35c5f","uiAttribs":{},"portsIn":[{"name":"radius","value":0.9},{"name":"innerRadius","value":0.4},{"name":"segments","value":32},{"name":"steps","value":2},{"name":"invertSteps","value":true},{"name":"mapping index","value":0},{"name":"mapping","value":"flat"},{"name":"Spline","value":false},{"name":"Draw","value":true}],"objName":"Ops.Gl.Meshes.Circle"},{"id":"09a3a628-2e7f-4fec-bfab-ee2d20ebf778","uiAttribs":{},"portsIn":[{"name":"number2","value":0.2}],"portsOut":[{"name":"result","links":[{"portIn":"number1","portOut":"result","objIn":"kn0l0xl7i","objOut":"09a3a628-2e7f-4fec-bfab-ee2d20ebf778"},{"portIn":"r","portOut":"result","objIn":"96277808-a59c-4dd1-ad50-d1012128f755","objOut":"09a3a628-2e7f-4fec-bfab-ee2d20ebf778"},{"portIn":"r","portOut":"result","objIn":"5ce9d15c-c9fe-4f24-a530-0c7175ca2810","objOut":"09a3a628-2e7f-4fec-bfab-ee2d20ebf778"},{"portIn":"Value","portOut":"result","objIn":"36b9d173-40d4-4790-ad4f-fa36e8650810","objOut":"09a3a628-2e7f-4fec-bfab-ee2d20ebf778"}]}],"objName":"Ops.Math.Multiply"},{"id":"54800633-c440-4b2e-82bf-b0653ec66816","uiAttribs":{},"portsIn":[{"name":"number2","value":0.1}],"portsOut":[{"name":"result","links":[{"portIn":"g","portOut":"result","objIn":"5ce9d15c-c9fe-4f24-a530-0c7175ca2810","objOut":"54800633-c440-4b2e-82bf-b0653ec66816"},{"portIn":"g","portOut":"result","objIn":"96277808-a59c-4dd1-ad50-d1012128f755","objOut":"54800633-c440-4b2e-82bf-b0653ec66816"},{"portIn":"number1","portOut":"result","objIn":"2xxnkh62w","objOut":"54800633-c440-4b2e-82bf-b0653ec66816"},{"portIn":"Value","portOut":"result","objIn":"55658788-cd4a-44f2-9249-066c6858131f","objOut":"54800633-c440-4b2e-82bf-b0653ec66816"}]}],"objName":"Ops.Math.Multiply"},{"id":"48e9c66e-5fd6-4170-b14a-9897394f7d5c","uiAttribs":{},"portsIn":[{"name":"r","value":0},{"name":"g","value":0},{"name":"b","value":0},{"name":"a","value":1}],"portsOut":[{"name":"trigger","links":[{"portIn":"render","portOut":"trigger","objIn":"28653033-79cd-4d15-bbe1-eb8237b63066","objOut":"48e9c66e-5fd6-4170-b14a-9897394f7d5c"}]}],"objName":"Ops.Gl.ClearColor"},{"id":"cd075347-f7c1-4b5a-bba3-9bb2949d3f32","uiAttribs":{},"portsIn":[{"name":"Visible","value":true},{"name":"Measure GPU","value":true},{"name":"Position index","value":0},{"name":"Position","value":"bottom"},{"name":"Open","value":false},{"name":"Smooth Graph","value":true},{"name":"Scale","value":1},{"name":"Size","value":12}],"portsOut":[{"name":"childs","links":[{"portIn":"render","portOut":"childs","objIn":"48e9c66e-5fd6-4170-b14a-9897394f7d5c","objOut":"cd075347-f7c1-4b5a-bba3-9bb2949d3f32"}]},{"name":"FPS","value":26}],"objName":"Ops.Gl.Performance"},{"id":"0edd9790-73d5-442b-9bda-f79466a8ae90","uiAttribs":{},"portsIn":[{"name":"Disable Scaling","value":true},{"name":"Disable Scroll","value":true},{"name":"HDPI Coordinates","value":false},{"name":"Active","value":true},{"name":"Area index","value":0},{"name":"Area","value":"Canvas"},{"name":"Normalize Coordinates","value":false},{"name":"Flip Y","value":false}],"portsOut":[{"name":"Touched","value":0},{"name":"Fingers","links":[{"portIn":"bool 2","portOut":"Fingers","objIn":"787c9720-2735-4aaa-9fde-49628ffe9a7a","objOut":"0edd9790-73d5-442b-9bda-f79466a8ae90"}]},{"name":"Finger 1 X","value":0},{"name":"Finger 1 Y","value":0},{"name":"Finger 1 Force","value":0},{"name":"Finger 2 X","value":0},{"name":"Finger 2 Y","value":0},{"name":"Finger 2 Force","value":0},{"name":"Touch Start","links":[{"portIn":"Trigger","portOut":"Touch Start","objIn":"f13d8775-7c0b-4301-bf2e-511712fd6bd1","objOut":"0edd9790-73d5-442b-9bda-f79466a8ae90"}]}],"objName":"Ops.Devices.TouchScreen"},{"id":"1d40b017-b4f2-41fb-9119-f1ef40f9e40b","uiAttribs":{},"portsIn":[{"name":"title","value":"2d repeater"},{"name":"text","value":""}],"objName":"Ops.Ui.Comment_v2"},{"id":"68a373fd-58fb-4c44-a7d3-9320e55c7eaa","uiAttribs":{},"portsIn":[{"name":"title","value":"color-stuff"},{"name":"text","value":""}],"objName":"Ops.Ui.Comment_v2"},{"id":"96277808-a59c-4dd1-ad50-d1012128f755","uiAttribs":{},"portsIn":[{"name":"b","value":0.6},{"name":"colorizeTexture","value":false},{"name":"Vertex Colors","value":false},{"name":"Alpha Mask Source index","value":0},{"name":"Alpha Mask Source","value":"Luminance"},{"name":"Opacity TexCoords Transform","value":false},{"name":"Discard Transparent Pixels","value":false},{"name":"diffuseRepeatX","value":1},{"name":"diffuseRepeatY","value":1},{"name":"Tex Offset X","value":0},{"name":"Tex Offset Y","value":0},{"name":"Crop TexCoords","value":false},{"name":"billboard","value":false}],"portsOut":[{"name":"trigger","links":[{"portIn":"render","portOut":"trigger","objIn":"4adcd7e4-500e-49a6-b6bb-8812e64e80de","objOut":"96277808-a59c-4dd1-ad50-d1012128f755"}]}],"objName":"Ops.Gl.Shader.BasicMaterial_v3"},{"id":"5ce9d15c-c9fe-4f24-a530-0c7175ca2810","uiAttribs":{},"portsIn":[{"name":"b","value":0.473},{"name":"a","value":1},{"name":"colorizeTexture","value":true},{"name":"Vertex Colors","value":false},{"name":"Alpha Mask Source index","value":0},{"name":"Alpha Mask Source","value":"Luminance"},{"name":"Opacity TexCoords Transform","value":false},{"name":"Discard Transparent Pixels","value":false},{"name":"diffuseRepeatX","value":1},{"name":"diffuseRepeatY","value":1},{"name":"Tex Offset X","value":0},{"name":"Tex Offset Y","value":0},{"name":"Crop TexCoords","value":false},{"name":"billboard","value":false}],"portsOut":[{"name":"trigger","links":[{"portIn":"render","portOut":"trigger","objIn":"685382a5-0df1-46d7-adbf-4c90ef0ca0b1","objOut":"5ce9d15c-c9fe-4f24-a530-0c7175ca2810"}]}],"objName":"Ops.Gl.Shader.BasicMaterial_v3"},{"id":"f0fa9256-c44e-4b10-a6b4-15705ae6fa03","uiAttribs":{},"portsIn":[{"name":"b","value":0.566},{"name":"a","value":0.854},{"name":"colorizeTexture","value":false},{"name":"Vertex Colors","value":false},{"name":"Alpha Mask Source index","value":0},{"name":"Alpha Mask Source","value":"Luminance"},{"name":"Opacity TexCoords Transform","value":false},{"name":"Discard Transparent Pixels","value":false},{"name":"diffuseRepeatX","value":1},{"name":"diffuseRepeatY","value":1},{"name":"Tex Offset X","value":0},{"name":"Tex Offset Y","value":0},{"name":"Crop TexCoords","value":false},{"name":"billboard","value":false}],"portsOut":[{"name":"trigger","links":[{"portIn":"render","portOut":"trigger","objIn":"7c7c1ad7-f700-447e-a092-2b86045c580d","objOut":"f0fa9256-c44e-4b10-a6b4-15705ae6fa03"}]}],"objName":"Ops.Gl.Shader.BasicMaterial_v3"},{"id":"e5117990-1eec-40fb-8daa-5fe65fff8ced","uiAttribs":{},"portsOut":[{"name":"then","links":[{"portIn":"render","portOut":"then","objIn":"f0fa9256-c44e-4b10-a6b4-15705ae6fa03","objOut":"e5117990-1eec-40fb-8daa-5fe65fff8ced"}]},{"name":"else","links":[{"portIn":"render","portOut":"else","objIn":"5ce9d15c-c9fe-4f24-a530-0c7175ca2810","objOut":"e5117990-1eec-40fb-8daa-5fe65fff8ced"}]}],"objName":"Ops.Boolean.IfTrueThen_v2"},{"id":"88c7830d-e6ca-4f25-afb6-928240c6fb09","uiAttribs":{},"portsOut":[{"name":"then","links":[{"portIn":"exe","portOut":"then","objIn":"b5f541e9-703d-418f-a384-73928c39420b","objOut":"88c7830d-e6ca-4f25-afb6-928240c6fb09"}]}],"objName":"Ops.Boolean.IfTrueThen_v2"},{"id":"036acdaf-4623-4cd5-81d1-38408ffaed29","uiAttribs":{},"portsIn":[{"name":"Repeats","value":6},{"name":"Direction index","value":0},{"name":"Direction","value":"Forward"}],"portsOut":[{"name":"Next","links":[{"portIn":"render","portOut":"Next","objIn":"2f4f2159-71ba-4123-ba9d-279746b8bdba","objOut":"036acdaf-4623-4cd5-81d1-38408ffaed29"}]},{"name":"index","links":[{"portIn":"number1","portOut":"index","objIn":"f84a403e-867f-4cba-b326-25e0d281d0ac","objOut":"036acdaf-4623-4cd5-81d1-38408ffaed29"},{"portIn":"number1","portOut":"index","objIn":"09a3a628-2e7f-4fec-bfab-ee2d20ebf778","objOut":"036acdaf-4623-4cd5-81d1-38408ffaed29"}]}],"objName":"Ops.Trigger.Repeat_v2"},{"id":"65d86da5-6134-4d8a-9597-26f2d9cbf8e1","uiAttribs":{},"portsIn":[{"name":"value","value":1.5}],"portsOut":[{"name":"result","links":[{"portIn":"number2","portOut":"result","objIn":"f84a403e-867f-4cba-b326-25e0d281d0ac","objOut":"65d86da5-6134-4d8a-9597-26f2d9cbf8e1"},{"portIn":"number2","portOut":"result","objIn":"bd35edba-d44e-4722-8f71-46fe27323d45","objOut":"65d86da5-6134-4d8a-9597-26f2d9cbf8e1"}]}],"objName":"Ops.Number.Number"},{"id":"e2a8da91-1e1d-4fea-91cf-11d30cbaa6a9","uiAttribs":{},"portsIn":[{"name":"projection mode index","value":0},{"name":"projection mode","value":"prespective"},{"name":"frustum near","value":0.01},{"name":"frustum far","value":50},{"name":"fov","value":45},{"name":"Auto Aspect Ratio","value":true},{"name":"Aspect Ratio","value":1},{"name":"eye X","value":0},{"name":"eye Y","value":0},{"name":"eye Z","value":8},{"name":"center X","value":0},{"name":"center Y","value":0},{"name":"center Z","value":0},{"name":"truck","value":0},{"name":"boom","value":0},{"name":"dolly","value":0},{"name":"tilt","value":-1.618},{"name":"pan","value":0},{"name":"roll","value":0}],"portsOut":[{"name":"trigger","links":[{"portIn":"Update","portOut":"trigger","objIn":"9d318ece-77ca-4655-92ea-71f0b4731d02","objOut":"e2a8da91-1e1d-4fea-91cf-11d30cbaa6a9"},{"portIn":"render","portOut":"trigger","objIn":"crka3w5cw","objOut":"e2a8da91-1e1d-4fea-91cf-11d30cbaa6a9"}]},{"name":"Aspect","value":1.841121495327103}],"objName":"Ops.Gl.Matrix.Camera"},{"id":"ba0e67bd-2923-49ed-b4c0-96ca363d6483","uiAttribs":{},"portsIn":[{"name":"Area index","value":0},{"name":"Area","value":"Canvas"},{"name":"Active","value":true}],"portsOut":[{"name":"Click Left","links":[{"portIn":"Start","portOut":"Click Left","objIn":"9d318ece-77ca-4655-92ea-71f0b4731d02","objOut":"ba0e67bd-2923-49ed-b4c0-96ca363d6483"}]},{"name":"Double Click","links":[{"portIn":"Reset","portOut":"Double Click","objIn":"28653033-79cd-4d15-bbe1-eb8237b63066","objOut":"ba0e67bd-2923-49ed-b4c0-96ca363d6483"}]},{"name":"Button pressed Left","links":[{"portIn":"Boolean","portOut":"Button pressed Left","objIn":"af72d4ef-d63a-42e3-961b-bc9e54e62ad1","objOut":"ba0e67bd-2923-49ed-b4c0-96ca363d6483"},{"portIn":"bool 1","portOut":"Button pressed Left","objIn":"787c9720-2735-4aaa-9fde-49628ffe9a7a","objOut":"ba0e67bd-2923-49ed-b4c0-96ca363d6483"}]},{"name":"Button pressed Middle","value":0},{"name":"Button pressed Right","value":0},{"name":"Mouse Down Left","links":[{"portIn":"Trigger","portOut":"Mouse Down Left","objIn":"cca56813-8a71-46cf-9de4-52aea5b5e124","objOut":"ba0e67bd-2923-49ed-b4c0-96ca363d6483"}]}],"objName":"Ops.Devices.Mouse.MouseButtons"},{"id":"cca56813-8a71-46cf-9de4-52aea5b5e124","uiAttribs":{},"portsIn":[{"name":"Named Trigger","value":"clickEvent_mouseDown"}],"objName":"Ops.Trigger.TriggerSendNamed"},{"id":"1123f9cf-fa63-4745-bc4b-f04db7e742a1","uiAttribs":{},"portsIn":[{"name":"Prefix","value":"clickEvent"}],"portsOut":[{"name":"Trigger Name","value":"clickEvent_mouseDown"}],"objName":"Ops.Trigger.TriggerReceiveFilter"},{"id":"f13d8775-7c0b-4301-bf2e-511712fd6bd1","uiAttribs":{},"portsIn":[{"name":"Named Trigger","value":"clickEvent_touchStart"}],"objName":"Ops.Trigger.TriggerSendNamed"},{"id":"84c164af-7ce5-4107-8f95-a2f07226b5bf","uiAttribs":{},"portsIn":[{"name":"Named Trigger","value":"mainClock"}],"objName":"Ops.Trigger.TriggerSend"},{"id":"fa4ca689-7492-440b-ba2c-4a2f3bcb2fe0","uiAttribs":{},"portsIn":[{"name":"Named Trigger","value":"mainClock"}],"objName":"Ops.Trigger.TriggerReceive"},{"id":"8571cb95-1ed7-4fd6-b6ed-d7c15d27ff9f","uiAttribs":{},"portsIn":[{"name":"Variable","value":"buttonDown"}],"portsOut":[{"name":"Value","links":[{"portIn":"boolean","portOut":"Value","objIn":"88c7830d-e6ca-4f25-afb6-928240c6fb09","objOut":"8571cb95-1ed7-4fd6-b6ed-d7c15d27ff9f"}]}],"objName":"Ops.Vars.VarGetNumber_v2"},{"id":"150a7ca2-a295-4b36-becb-640548e326ec","uiAttribs":{},"portsIn":[{"name":"Variable","value":"buttonDown"}],"objName":"Ops.Vars.VarSetNumber_v2"},{"id":"787c9720-2735-4aaa-9fde-49628ffe9a7a","uiAttribs":{},"portsIn":[{"name":"bool 3","value":false},{"name":"bool 4","value":false},{"name":"bool 5","value":false},{"name":"bool 6","value":false},{"name":"bool 7","value":false},{"name":"bool 8","value":false},{"name":"bool 9","value":false},{"name":"bool 10","value":false}],"portsOut":[{"name":"result","links":[{"portIn":"Value","portOut":"result","objIn":"150a7ca2-a295-4b36-becb-640548e326ec","objOut":"787c9720-2735-4aaa-9fde-49628ffe9a7a"}]}],"objName":"Ops.Boolean.Or"},{"id":"af72d4ef-d63a-42e3-961b-bc9e54e62ad1","uiAttribs":{},"portsOut":[{"name":"Result","value":1}],"objName":"Ops.Boolean.Not"},{"id":"5b3c02cc-6e79-42a8-a1b3-e6031611e06a","uiAttribs":{},"portsIn":[{"name":"Value","value":0}],"portsOut":[{"name":"Current Value","value":0},{"name":"Previous Value","value":25}],"objName":"Ops.Number.PreviousNumberStore"},{"id":"685382a5-0df1-46d7-adbf-4c90ef0ca0b1","uiAttribs":{},"portsIn":[{"name":"radius","value":0.5},{"name":"innerRadius","value":0},{"name":"segments","value":32},{"name":"percent","value":1},{"name":"steps","value":2},{"name":"invertSteps","value":true},{"name":"mapping index","value":0},{"name":"mapping","value":"flat"},{"name":"Spline","value":false},{"name":"Draw","value":true}],"objName":"Ops.Gl.Meshes.Circle"},{"id":"7c7c1ad7-f700-447e-a092-2b86045c580d","uiAttribs":{},"portsIn":[{"name":"radius","value":0.55},{"name":"segments","value":32},{"name":"percent","value":1},{"name":"steps","value":4},{"name":"invertSteps","value":true},{"name":"mapping index","value":0},{"name":"mapping","value":"round"},{"name":"Spline","value":false},{"name":"Draw","value":true}],"portsOut":[{"name":"trigger","links":[{"portIn":"exe","portOut":"trigger","objIn":"88c7830d-e6ca-4f25-afb6-928240c6fb09","objOut":"7c7c1ad7-f700-447e-a092-2b86045c580d"}]}],"objName":"Ops.Gl.Meshes.Circle"},{"id":"9d318ece-77ca-4655-92ea-71f0b4731d02","uiAttribs":{},"portsIn":[{"name":"Duration Out","value":0.01},{"name":"Easing Out index","value":0},{"name":"Easing Out","value":"Cubic In"},{"name":"Value Out","value":0},{"name":"Hold duration","value":0.1},{"name":"Duration In","value":0.1},{"name":"Easing In index","value":0},{"name":"Easing In","value":"linear"},{"name":"Value In","value":0.8}],"portsOut":[{"name":"Result","links":[{"portIn":"innerRadius","portOut":"Result","objIn":"7c7c1ad7-f700-447e-a092-2b86045c580d","objOut":"9d318ece-77ca-4655-92ea-71f0b4731d02"}]}],"objName":"Ops.Anim.InOutInAnim"},{"id":"fade6f2e-75e5-416c-8e32-dc0c01f1b500","uiAttribs":{},"portsIn":[{"name":"Active","value":true},{"name":"Speed","value":-0.01},{"name":"Input Type index","value":0},{"name":"Input Type","value":"Mouse"},{"name":"Area index","value":0},{"name":"Area","value":"Canvas"}],"portsOut":[{"name":"Delta X","value":0},{"name":"Delta Y","links":[{"portIn":"Delta Value","portOut":"Delta Y","objIn":"4c6e0228-cd2d-43ac-ada8-7110c81b50c0","objOut":"fade6f2e-75e5-416c-8e32-dc0c01f1b500"}]},{"name":"Is Dragging","links":[{"portIn":"Value","portOut":"Is Dragging","objIn":"0a4616f9-1bd7-46ac-8054-f4dd0bf4051a","objOut":"fade6f2e-75e5-416c-8e32-dc0c01f1b500"}]}],"objName":"Ops.Devices.Mouse.MouseDrag"},{"id":"4c6e0228-cd2d-43ac-ada8-7110c81b50c0","uiAttribs":{},"portsIn":[{"name":"Default Value","value":0},{"name":"Multiply","value":2},{"name":"Limit","value":true},{"name":"Min","value":0},{"name":"Max","value":1},{"name":"Rubberband","value":0}],"portsOut":[{"name":"Absolute Value","links":[{"portIn":"percent","portOut":"Absolute Value","objIn":"3d305077-453d-42d3-9666-1989b0f35c5f","objOut":"4c6e0228-cd2d-43ac-ada8-7110c81b50c0"},{"portIn":"A","portOut":"Absolute Value","objIn":"6b95c439-0e39-4b90-b83d-990237d8927a","objOut":"4c6e0228-cd2d-43ac-ada8-7110c81b50c0"},{"portIn":"A","portOut":"Absolute Value","objIn":"87f5eec7-af15-440b-ac09-dc5cbf5cd174","objOut":"4c6e0228-cd2d-43ac-ada8-7110c81b50c0"},{"portIn":"number1","portOut":"Absolute Value","objIn":"x7w3ejvrc","objOut":"4c6e0228-cd2d-43ac-ada8-7110c81b50c0"}]}],"objName":"Ops.Math.DeltaSum"},{"id":"d9875f6c-2759-44da-ab2e-8e69c891586d","uiAttribs":{},"portsIn":[{"name":"Area index","value":0},{"name":"Area","value":"Canvas"},{"name":"Active","value":true}],"portsOut":[{"name":"Button pressed Left","links":[{"portIn":"Boolean","portOut":"Button pressed Left","objIn":"92e51085-81b7-4eb4-a98e-3261009b33f6","objOut":"d9875f6c-2759-44da-ab2e-8e69c891586d"}]},{"name":"Button pressed Middle","value":0},{"name":"Button pressed Right","value":0}],"objName":"Ops.Devices.Mouse.MouseButtons"},{"id":"aca169a7-b0e0-41b3-83d1-cc89e6480f8f","uiAttribs":{},"portsIn":[{"name":"boolean","value":false}],"portsOut":[{"name":"else","links":[{"portIn":"render","portOut":"else","objIn":"pf2wc20a3","objOut":"aca169a7-b0e0-41b3-83d1-cc89e6480f8f"}]}],"objName":"Ops.Boolean.IfTrueThen_v2"},{"id":"92e51085-81b7-4eb4-a98e-3261009b33f6","uiAttribs":{},"portsOut":[{"name":"Result","links":[{"portIn":"enabled","portOut":"Result","objIn":"crka3w5cw","objOut":"92e51085-81b7-4eb4-a98e-3261009b33f6"}]}],"objName":"Ops.Boolean.Not"},{"id":"0a4616f9-1bd7-46ac-8054-f4dd0bf4051a","uiAttribs":{},"portsOut":[{"name":"Next","links":[{"portIn":"Reset","portOut":"Next","objIn":"4c6e0228-cd2d-43ac-ada8-7110c81b50c0","objOut":"0a4616f9-1bd7-46ac-8054-f4dd0bf4051a"}]}],"objName":"Ops.Boolean.TriggerChangedFalse"},{"id":"28653033-79cd-4d15-bbe1-eb8237b63066","uiAttribs":{},"portsIn":[{"name":"min distance","value":0.05},{"name":"max distance","value":99999},{"name":"min rot y","value":0},{"name":"max rot y","value":0},{"name":"initial radius","value":0},{"name":"initial axis y","value":0.5},{"name":"initial axis x","value":0.25},{"name":"mul","value":1.01},{"name":"Smoothness","value":2},{"name":"Speed X","value":0.5},{"name":"Speed Y","value":0.5},{"name":"Active","value":true},{"name":"Allow Panning","value":true},{"name":"Allow Zooming","value":true},{"name":"Allow Rotation","value":false},{"name":"restricted","value":true}],"portsOut":[{"name":"trigger","links":[{"portIn":"render","portOut":"trigger","objIn":"e2a8da91-1e1d-4fea-91cf-11d30cbaa6a9","objOut":"28653033-79cd-4d15-bbe1-eb8237b63066"}]},{"name":"radius","value":0.8581969999999997},{"name":"Rot X","value":90},{"name":"Rot Y","value":90}],"objName":"Ops.Gl.Matrix.OrbitControls"},{"id":"df2d07f6-48ce-4302-9420-daa5cd61f5ba","uiAttribs":{},"portsIn":[{"name":"Scale","value":0.5},{"name":"Font","value":"Arial"},{"name":"align index","value":1},{"name":"align","value":"center"},{"name":"vertical align index","value":1},{"name":"vertical align","value":"Middle"},{"name":"Line Height","value":1},{"name":"Letter Spacing","value":-0.06},{"name":"filter index","value":2},{"name":"filter","value":"mipmap"},{"name":"Anisotropic index","value":0},{"name":"Anisotropic","value":"4"},{"name":"r","value":1},{"name":"g","value":1},{"name":"b","value":1},{"name":"a","value":1}],"portsOut":[{"name":"Total Lines","value":1},{"name":"Width","value":1.0045096261160715},{"name":"Font Available","value":0}],"objName":"Ops.Gl.Meshes.TextMesh_v2"},{"id":"55e1e4c6-d011-45db-8ab7-6b010be123ab","uiAttribs":{},"portsOut":[{"name":"Result","links":[{"portIn":"String B","portOut":"Result","objIn":"7fe84379-687b-4975-8bdd-dea5a6781a6a","objOut":"55e1e4c6-d011-45db-8ab7-6b010be123ab"}]}],"objName":"Ops.String.NumberToString_v2"},{"id":"b5f541e9-703d-418f-a384-73928c39420b","uiAttribs":{},"portsOut":[{"name":"trigger 0","links":[{"portIn":"render","portOut":"trigger 0","objIn":"96277808-a59c-4dd1-ad50-d1012128f755","objOut":"b5f541e9-703d-418f-a384-73928c39420b"}]},{"name":"trigger 1","links":[{"portIn":"render","portOut":"trigger 1","objIn":"95a89888-cca5-406c-b3d5-16cbf49ee6e5","objOut":"b5f541e9-703d-418f-a384-73928c39420b"}]}],"objName":"Ops.Trigger.Sequence"},{"id":"95a89888-cca5-406c-b3d5-16cbf49ee6e5","uiAttribs":{},"portsIn":[{"name":"posX","value":0},{"name":"posY","value":0},{"name":"scale","value":1},{"name":"rotX","value":0},{"name":"rotY","value":0},{"name":"rotZ","value":-45}],"portsOut":[{"name":"trigger","links":[{"portIn":"Render","portOut":"trigger","objIn":"df2d07f6-48ce-4302-9420-daa5cd61f5ba","objOut":"95a89888-cca5-406c-b3d5-16cbf49ee6e5"}]}],"objName":"Ops.Gl.Matrix.Transform"},{"id":"6b95c439-0e39-4b90-b83d-990237d8927a","uiAttribs":{},"portsIn":[{"name":"B","value":1},{"name":"C","value":2},{"name":"D","value":3},{"name":"Expression","value":"round(a*10000)/10000"}],"portsOut":[{"name":"Result","links":[{"portIn":"Number","portOut":"Result","objIn":"55e1e4c6-d011-45db-8ab7-6b010be123ab","objOut":"6b95c439-0e39-4b90-b83d-990237d8927a"}]},{"name":"Expression Valid","value":true}],"objName":"Ops.Math.MathExpression"},{"id":"87f5eec7-af15-440b-ac09-dc5cbf5cd174","uiAttribs":{},"portsIn":[{"name":"B","value":1},{"name":"C","value":2},{"name":"D","value":3},{"name":"Expression","value":"0.8 + ( a * 0.2)"}],"portsOut":[{"name":"Result","links":[{"portIn":"posZ","portOut":"Result","objIn":"95a89888-cca5-406c-b3d5-16cbf49ee6e5","objOut":"87f5eec7-af15-440b-ac09-dc5cbf5cd174"}]},{"name":"Expression Valid","value":true}],"objName":"Ops.Math.MathExpression"},{"id":"pf2wc20a3","uiAttribs":{},"portsIn":[{"name":"active","value":true},{"name":"billboard","value":false},{"name":"cursor index","value":0},{"name":"cursor","value":"n-resize"}],"portsOut":[{"name":"trigger","links":[{"portIn":"exe","portOut":"trigger","objIn":"e5117990-1eec-40fb-8daa-5fe65fff8ced","objOut":"pf2wc20a3"}]},{"name":"is picked","links":[{"portIn":"boolean","portOut":"is picked","objIn":"e5117990-1eec-40fb-8daa-5fe65fff8ced","objOut":"pf2wc20a3"}]},{"name":"pickedID","links":[{"portIn":"Value","portOut":"pickedID","objIn":"jitgtimwd","objOut":"pf2wc20a3"}]}],"objName":"Ops.User.cristianvogel.PickingMaterialExtra"},{"id":"x7w3ejvrc","uiAttribs":{},"portsIn":[{"name":"number2","value":0.5}],"portsOut":[{"name":"result","links":[{"portIn":"a","portOut":"result","objIn":"96277808-a59c-4dd1-ad50-d1012128f755","objOut":"x7w3ejvrc"}]}],"objName":"Ops.Math.Sum"},{"id":"2xxnkh62w","uiAttribs":{},"portsIn":[{"name":"number2","value":0.2}],"portsOut":[{"name":"result","links":[{"portIn":"g","portOut":"result","objIn":"f0fa9256-c44e-4b10-a6b4-15705ae6fa03","objOut":"2xxnkh62w"}]}],"objName":"Ops.Math.Sum"},{"id":"kn0l0xl7i","uiAttribs":{},"portsIn":[{"name":"number2","value":0.2}],"portsOut":[{"name":"result","links":[{"portIn":"r","portOut":"result","objIn":"f0fa9256-c44e-4b10-a6b4-15705ae6fa03","objOut":"kn0l0xl7i"}]}],"objName":"Ops.Math.Sum"},{"id":"jitgtimwd","uiAttribs":{},"portsIn":[{"name":"Variable","value":"pickedID"}],"objName":"Ops.Vars.VarSetNumber_v2"},{"id":"285t9j9ti","uiAttribs":{},"portsIn":[{"name":"Variable","value":"pickedID"}],"portsOut":[{"name":"Value","value":24}],"objName":"Ops.Vars.VarGetNumber_v2"},{"id":"3f76b3cd-87d9-4cc8-a8e6-b48d97d5fbc3","uiAttribs":{},"portsIn":[{"name":"Repeats","value":6},{"name":"Direction index","value":0},{"name":"Direction","value":"Forward"}],"portsOut":[{"name":"Next","links":[{"portIn":"Execute","portOut":"Next","objIn":"036acdaf-4623-4cd5-81d1-38408ffaed29","objOut":"3f76b3cd-87d9-4cc8-a8e6-b48d97d5fbc3"}]},{"name":"index","links":[{"portIn":"number1","portOut":"index","objIn":"54800633-c440-4b2e-82bf-b0653ec66816","objOut":"3f76b3cd-87d9-4cc8-a8e6-b48d97d5fbc3"},{"portIn":"number1","portOut":"index","objIn":"bd35edba-d44e-4722-8f71-46fe27323d45","objOut":"3f76b3cd-87d9-4cc8-a8e6-b48d97d5fbc3"}]}],"objName":"Ops.Trigger.Repeat_v2"},{"id":"crka3w5cw","uiAttribs":{},"portsIn":[{"name":"Use Mouse Coordinates","value":true},{"name":"x","value":-1000},{"name":"y","value":-1000},{"name":"cursor index","value":0},{"name":"cursor","value":"ne-resize"}],"portsOut":[{"name":"trigger","links":[{"portIn":"render","portOut":"trigger","objIn":"1c703768-596d-4284-bd0f-b3e6bc40239e","objOut":"crka3w5cw"}]},{"name":"Something Picked","value":false},{"name":"X","value":316},{"name":"Y","value":289}],"objName":"Ops.User.cristianvogel.PickerOutputsCoords"},{"id":"r96oyvwzf","uiAttribs":{},"portsIn":[{"name":"Id","value":"logo"},{"name":"Class","value":""},{"name":"Style","value":"position:absolute;\nz-index:1000;\ncolor: antiqueWhite;\nfont-size: small;\npadding: 1rem;"},{"name":"Interactive","value":false},{"name":"Visible","value":true},{"name":"Convert Line Breaks","value":false},{"name":"Propagate Click-Events","value":true}],"portsOut":[{"name":"Hover","value":0}],"objName":"Ops.Html.DivElement_v3"},{"id":"7fe84379-687b-4975-8bdd-dea5a6781a6a","uiAttribs":{},"portsIn":[{"name":"Format","value":"Param $a ○ $b"},{"name":"String C","value":2},{"name":"String D","value":3},{"name":"String E","value":""},{"name":"String F","value":""}],"portsOut":[{"name":"Result","links":[{"portIn":"Text","portOut":"Result","objIn":"df2d07f6-48ce-4302-9420-daa5cd61f5ba","objOut":"7fe84379-687b-4975-8bdd-dea5a6781a6a"}]}],"objName":"Ops.String.StringCompose_v3"},{"id":"zmh14ivsr","uiAttribs":{},"portsOut":[{"name":"Result","links":[{"portIn":"String A","portOut":"Result","objIn":"7fe84379-687b-4975-8bdd-dea5a6781a6a","objOut":"zmh14ivsr"}]}],"objName":"Ops.String.NumberToString_v2"},{"id":"f865f22e-87e1-448d-b0dd-8f800e396085","uiAttribs":{},"portsIn":[{"name":"Variable","value":"pickedID"}],"portsOut":[{"name":"Value","links":[{"portIn":"Number","portOut":"Value","objIn":"zmh14ivsr","objOut":"f865f22e-87e1-448d-b0dd-8f800e396085"}]}],"objName":"Ops.Vars.VarGetNumber_v2"},{"id":"be86f838-6e40-4c03-821e-a3db89a2e7cd","uiAttribs":{},"portsIn":[{"name":"x","value":0},{"name":"y","value":0},{"name":"z","value":-0.02}],"portsOut":[{"name":"trigger","links":[{"portIn":"render","portOut":"trigger","objIn":"001f2703-9c35-4623-be72-f47a73e4ef0a","objOut":"be86f838-6e40-4c03-821e-a3db89a2e7cd"}]}],"objName":"Ops.Gl.Matrix.Translate"},{"id":"001f2703-9c35-4623-be72-f47a73e4ef0a","uiAttribs":{},"portsIn":[{"name":"b","value":0.071},{"name":"a","value":0.44},{"name":"colorizeTexture","value":false},{"name":"Vertex Colors","value":false},{"name":"Alpha Mask Source index","value":0},{"name":"Alpha Mask Source","value":"Luminance"},{"name":"Opacity TexCoords Transform","value":false},{"name":"Discard Transparent Pixels","value":0},{"name":"diffuseRepeatX","value":1},{"name":"diffuseRepeatY","value":1},{"name":"Tex Offset X","value":0},{"name":"Tex Offset Y","value":0},{"name":"Crop TexCoords","value":false},{"name":"billboard","value":false}],"portsOut":[{"name":"trigger","links":[{"portIn":"Render","portOut":"trigger","objIn":"ca0f56ec-819d-4c1e-bb76-062d19aa07b0","objOut":"001f2703-9c35-4623-be72-f47a73e4ef0a"}]}],"objName":"Ops.Gl.Shader.BasicMaterial_v3"},{"id":"ca0f56ec-819d-4c1e-bb76-062d19aa07b0","uiAttribs":{},"portsIn":[{"name":"Render Mesh","value":true},{"name":"Width","value":1},{"name":"Length","value":1},{"name":"Height","value":1},{"name":"Center","value":true},{"name":"Mapping index","value":0},{"name":"Mapping","value":"Side"},{"name":"Bias","value":0},{"name":"Flip X","value":true},{"name":"Top","value":true},{"name":"Bottom","value":true},{"name":"Left","value":true},{"name":"Right","value":true},{"name":"Front","value":true},{"name":"Back","value":true}],"objName":"Ops.Gl.Meshes.Cube_v2"},{"id":"55658788-cd4a-44f2-9249-066c6858131f","uiAttribs":{},"portsIn":[{"name":"Variable","value":"green"}],"objName":"Ops.Vars.VarSetNumber_v2"},{"id":"bb36469d-82eb-4e80-9680-80140f977332","uiAttribs":{},"portsIn":[{"name":"Variable","value":"green"}],"portsOut":[{"name":"Value","value":0.5}],"objName":"Ops.Vars.VarGetNumber_v2"},{"id":"36b9d173-40d4-4790-ad4f-fa36e8650810","uiAttribs":{},"portsIn":[{"name":"Variable","value":"red"}],"objName":"Ops.Vars.VarSetNumber_v2"},{"id":"5ae68c02-219e-4314-adf4-4ea743f2e7ec","uiAttribs":{},"portsIn":[{"name":"Variable","value":"red"}],"portsOut":[{"name":"Value","links":[{"portIn":"r","portOut":"Value","objIn":"001f2703-9c35-4623-be72-f47a73e4ef0a","objOut":"5ae68c02-219e-4314-adf4-4ea743f2e7ec"}]}],"objName":"Ops.Vars.VarGetNumber_v2"},{"id":"ce51744c-33bf-4fe5-a59c-e10e983b27f6","uiAttribs":{},"portsIn":[{"name":"Variable","value":"green"}],"portsOut":[{"name":"Value","links":[{"portIn":"g","portOut":"Value","objIn":"001f2703-9c35-4623-be72-f47a73e4ef0a","objOut":"ce51744c-33bf-4fe5-a59c-e10e983b27f6"}]}],"objName":"Ops.Vars.VarGetNumber_v2"},{"id":"bb5cf94e-78f4-4018-a961-1ae3f9fdd250","uiAttribs":{},"portsIn":[{"name":"Value","value":"𝌺NeverEngineLabs"},{"name":"Variable","value":"topLeftText"}],"objName":"Ops.Vars.VarSetString_v2"},{"id":"4c7233e7-3e7a-4fbd-a002-dcde7a23cd0b","uiAttribs":{},"portsIn":[{"name":"Variable","value":"topLeftText"}],"portsOut":[{"name":"Value","links":[{"portIn":"Text","portOut":"Value","objIn":"r96oyvwzf","objOut":"4c7233e7-3e7a-4fbd-a002-dcde7a23cd0b"}]}],"objName":"Ops.Vars.VarGetString"}],"_id":"65af987f40282b0d28c6120b","export":{"time":"2024-01-23 20:06:13","service":"github","exportNumber":4}};
if(!CABLES.exportedPatch){CABLES.exportedPatch=CABLES.exportedPatches['3cXWRQ']}
"use strict";

var CABLES=CABLES||{};
CABLES.OPS=CABLES.OPS||{};

var Ops=Ops || {};
Ops.Gl=Ops.Gl || {};
Ops.Ui=Ops.Ui || {};
Ops.Anim=Ops.Anim || {};
Ops.Html=Ops.Html || {};
Ops.Math=Ops.Math || {};
Ops.User=Ops.User || {};
Ops.Vars=Ops.Vars || {};
Ops.Number=Ops.Number || {};
Ops.String=Ops.String || {};
Ops.Boolean=Ops.Boolean || {};
Ops.Devices=Ops.Devices || {};
Ops.Trigger=Ops.Trigger || {};
Ops.Gl.Matrix=Ops.Gl.Matrix || {};
Ops.Gl.Meshes=Ops.Gl.Meshes || {};
Ops.Gl.Shader=Ops.Gl.Shader || {};
Ops.Devices.Mouse=Ops.Devices.Mouse || {};
Ops.User.cristianvogel=Ops.User.cristianvogel || {};



// **************************************************************
// 
// Ops.Gl.MainLoop
// 
// **************************************************************

Ops.Gl.MainLoop = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    fpsLimit = op.inValue("FPS Limit", 0),
    trigger = op.outTrigger("trigger"),
    width = op.outNumber("width"),
    height = op.outNumber("height"),
    reduceFocusFPS = op.inValueBool("Reduce FPS not focussed", true),
    reduceLoadingFPS = op.inValueBool("Reduce FPS loading"),
    clear = op.inValueBool("Clear", true),
    clearAlpha = op.inValueBool("ClearAlpha", true),
    fullscreen = op.inValueBool("Fullscreen Button", false),
    active = op.inValueBool("Active", true),
    hdpi = op.inValueBool("Hires Displays", false),
    inUnit = op.inSwitch("Pixel Unit", ["Display", "CSS"], "Display");

op.onAnimFrame = render;
hdpi.onChange = function ()
{
    if (hdpi.get()) op.patch.cgl.pixelDensity = window.devicePixelRatio;
    else op.patch.cgl.pixelDensity = 1;

    op.patch.cgl.updateSize();
    if (CABLES.UI) gui.setLayout();
};

active.onChange = function ()
{
    op.patch.removeOnAnimFrame(op);

    if (active.get())
    {
        op.setUiAttrib({ "extendTitle": "" });
        op.onAnimFrame = render;
        op.patch.addOnAnimFrame(op);
        op.log("adding again!");
    }
    else
    {
        op.setUiAttrib({ "extendTitle": "Inactive" });
    }
};

const cgl = op.patch.cgl;
let rframes = 0;
let rframeStart = 0;

if (!op.patch.cgl) op.uiAttr({ "error": "No webgl cgl context" });

const identTranslate = vec3.create();
vec3.set(identTranslate, 0, 0, 0);
const identTranslateView = vec3.create();
vec3.set(identTranslateView, 0, 0, -2);

fullscreen.onChange = updateFullscreenButton;
setTimeout(updateFullscreenButton, 100);
let fsElement = null;

let winhasFocus = true;
let winVisible = true;

window.addEventListener("blur", () => { winhasFocus = false; });
window.addEventListener("focus", () => { winhasFocus = true; });
document.addEventListener("visibilitychange", () => { winVisible = !document.hidden; });
testMultiMainloop();

inUnit.onChange = () =>
{
    width.set(0);
    height.set(0);
};

function getFpsLimit()
{
    if (reduceLoadingFPS.get() && op.patch.loading.getProgress() < 1.0) return 5;

    if (reduceFocusFPS.get())
    {
        if (!winVisible) return 10;
        if (!winhasFocus) return 30;
    }

    return fpsLimit.get();
}

function updateFullscreenButton()
{
    function onMouseEnter()
    {
        if (fsElement)fsElement.style.display = "block";
    }

    function onMouseLeave()
    {
        if (fsElement)fsElement.style.display = "none";
    }

    op.patch.cgl.canvas.addEventListener("mouseleave", onMouseLeave);
    op.patch.cgl.canvas.addEventListener("mouseenter", onMouseEnter);

    if (fullscreen.get())
    {
        if (!fsElement)
        {
            fsElement = document.createElement("div");

            const container = op.patch.cgl.canvas.parentElement;
            if (container)container.appendChild(fsElement);

            fsElement.addEventListener("mouseenter", onMouseEnter);
            fsElement.addEventListener("click", function (e)
            {
                if (CABLES.UI && !e.shiftKey) gui.cycleFullscreen();
                else cgl.fullScreen();
            });
        }

        fsElement.style.padding = "10px";
        fsElement.style.position = "absolute";
        fsElement.style.right = "5px";
        fsElement.style.top = "5px";
        fsElement.style.width = "20px";
        fsElement.style.height = "20px";
        fsElement.style.cursor = "pointer";
        fsElement.style["border-radius"] = "40px";
        fsElement.style.background = "#444";
        fsElement.style["z-index"] = "9999";
        fsElement.style.display = "none";
        fsElement.innerHTML = "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 490 490\" style=\"width:20px;height:20px;\" xml:space=\"preserve\" width=\"512px\" height=\"512px\"><g><path d=\"M173.792,301.792L21.333,454.251v-80.917c0-5.891-4.776-10.667-10.667-10.667C4.776,362.667,0,367.442,0,373.333V480     c0,5.891,4.776,10.667,10.667,10.667h106.667c5.891,0,10.667-4.776,10.667-10.667s-4.776-10.667-10.667-10.667H36.416     l152.459-152.459c4.093-4.237,3.975-10.99-0.262-15.083C184.479,297.799,177.926,297.799,173.792,301.792z\" fill=\"#FFFFFF\"/><path d=\"M480,0H373.333c-5.891,0-10.667,4.776-10.667,10.667c0,5.891,4.776,10.667,10.667,10.667h80.917L301.792,173.792     c-4.237,4.093-4.354,10.845-0.262,15.083c4.093,4.237,10.845,4.354,15.083,0.262c0.089-0.086,0.176-0.173,0.262-0.262     L469.333,36.416v80.917c0,5.891,4.776,10.667,10.667,10.667s10.667-4.776,10.667-10.667V10.667C490.667,4.776,485.891,0,480,0z\" fill=\"#FFFFFF\"/><path d=\"M36.416,21.333h80.917c5.891,0,10.667-4.776,10.667-10.667C128,4.776,123.224,0,117.333,0H10.667     C4.776,0,0,4.776,0,10.667v106.667C0,123.224,4.776,128,10.667,128c5.891,0,10.667-4.776,10.667-10.667V36.416l152.459,152.459     c4.237,4.093,10.99,3.975,15.083-0.262c3.992-4.134,3.992-10.687,0-14.82L36.416,21.333z\" fill=\"#FFFFFF\"/><path d=\"M480,362.667c-5.891,0-10.667,4.776-10.667,10.667v80.917L316.875,301.792c-4.237-4.093-10.99-3.976-15.083,0.261     c-3.993,4.134-3.993,10.688,0,14.821l152.459,152.459h-80.917c-5.891,0-10.667,4.776-10.667,10.667s4.776,10.667,10.667,10.667     H480c5.891,0,10.667-4.776,10.667-10.667V373.333C490.667,367.442,485.891,362.667,480,362.667z\" fill=\"#FFFFFF\"/></g></svg>";
    }
    else
    {
        if (fsElement)
        {
            fsElement.style.display = "none";
            fsElement.remove();
            fsElement = null;
        }
    }
}

op.onDelete = function ()
{
    cgl.gl.clearColor(0, 0, 0, 0);
    cgl.gl.clear(cgl.gl.COLOR_BUFFER_BIT | cgl.gl.DEPTH_BUFFER_BIT);
};

function render(time)
{
    if (!active.get()) return;
    if (cgl.aborted || cgl.canvas.clientWidth === 0 || cgl.canvas.clientHeight === 0) return;

    op.patch.cg = cgl;

    if (hdpi.get())op.patch.cgl.pixelDensity = window.devicePixelRatio;

    const startTime = performance.now();

    op.patch.config.fpsLimit = getFpsLimit();

    if (cgl.canvasWidth == -1)
    {
        cgl.setCanvas(op.patch.config.glCanvasId);
        return;
    }

    if (cgl.canvasWidth != width.get() || cgl.canvasHeight != height.get())
    {
        let div = 1;
        if (inUnit.get() == "CSS")div = op.patch.cgl.pixelDensity;

        width.set(cgl.canvasWidth / div);
        height.set(cgl.canvasHeight / div);
    }

    if (CABLES.now() - rframeStart > 1000)
    {
        CGL.fpsReport = CGL.fpsReport || [];
        if (op.patch.loading.getProgress() >= 1.0 && rframeStart !== 0)CGL.fpsReport.push(rframes);
        rframes = 0;
        rframeStart = CABLES.now();
    }
    CGL.MESH.lastShader = null;
    CGL.MESH.lastMesh = null;

    cgl.renderStart(cgl, identTranslate, identTranslateView);

    if (clear.get())
    {
        cgl.gl.clearColor(0, 0, 0, 1);
        cgl.gl.clear(cgl.gl.COLOR_BUFFER_BIT | cgl.gl.DEPTH_BUFFER_BIT);
    }

    trigger.trigger();

    if (CGL.MESH.lastMesh)CGL.MESH.lastMesh.unBind();

    if (CGL.Texture.previewTexture)
    {
        if (!CGL.Texture.texturePreviewer) CGL.Texture.texturePreviewer = new CGL.Texture.texturePreview(cgl);
        CGL.Texture.texturePreviewer.render(CGL.Texture.previewTexture);
    }
    cgl.renderEnd(cgl);

    op.patch.cg = null;

    if (clearAlpha.get())
    {
        cgl.gl.clearColor(1, 1, 1, 1);
        cgl.gl.colorMask(false, false, false, true);
        cgl.gl.clear(cgl.gl.COLOR_BUFFER_BIT);
        cgl.gl.colorMask(true, true, true, true);
    }

    if (!cgl.frameStore.phong)cgl.frameStore.phong = {};
    rframes++;

    op.patch.cgl.profileData.profileMainloopMs = performance.now() - startTime;
}

function testMultiMainloop()
{
    setTimeout(
        () =>
        {
            if (op.patch.getOpsByObjName(op.name).length > 1)
            {
                op.setUiError("multimainloop", "there should only be one mainloop op!");
                op.patch.addEventListener("onOpDelete", testMultiMainloop);
            }
            else op.setUiError("multimainloop", null, 1);
        }, 500);
}


};

Ops.Gl.MainLoop.prototype = new CABLES.Op();
CABLES.OPS["b0472a1d-db16-4ba6-8787-f300fbdc77bb"]={f:Ops.Gl.MainLoop,objName:"Ops.Gl.MainLoop"};




// **************************************************************
// 
// Ops.Gl.Matrix.Transform
// 
// **************************************************************

Ops.Gl.Matrix.Transform = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    render = op.inTrigger("render"),
    posX = op.inValue("posX", 0),
    posY = op.inValue("posY", 0),
    posZ = op.inValue("posZ", 0),
    scale = op.inValue("scale", 1),
    rotX = op.inValue("rotX", 0),
    rotY = op.inValue("rotY", 0),
    rotZ = op.inValue("rotZ", 0),
    trigger = op.outTrigger("trigger");

op.setPortGroup("Rotation", [rotX, rotY, rotZ]);
op.setPortGroup("Position", [posX, posY, posZ]);
op.setPortGroup("Scale", [scale]);
op.setUiAxisPorts(posX, posY, posZ);

op.toWorkPortsNeedToBeLinked(render, trigger);

const vPos = vec3.create();
const vScale = vec3.create();
const transMatrix = mat4.create();
mat4.identity(transMatrix);

let
    doScale = false,
    doTranslate = false,
    translationChanged = true,
    scaleChanged = true,
    rotChanged = true;

rotX.onChange = rotY.onChange = rotZ.onChange = setRotChanged;
posX.onChange = posY.onChange = posZ.onChange = setTranslateChanged;
scale.onChange = setScaleChanged;

render.onTriggered = function ()
{
    // if(!CGL.TextureEffect.checkOpNotInTextureEffect(op)) return;

    let updateMatrix = false;
    if (translationChanged)
    {
        updateTranslation();
        updateMatrix = true;
    }
    if (scaleChanged)
    {
        updateScale();
        updateMatrix = true;
    }
    if (rotChanged) updateMatrix = true;

    if (updateMatrix) doUpdateMatrix();

    const cg = op.patch.cg || op.patch.cgl;
    cg.pushModelMatrix();
    mat4.multiply(cg.mMatrix, cg.mMatrix, transMatrix);

    trigger.trigger();
    cg.popModelMatrix();

    if (CABLES.UI && CABLES.UI.showCanvasTransforms) gui.setTransform(op.id, posX.get(), posY.get(), posZ.get());

    if (op.isCurrentUiOp())
        gui.setTransformGizmo(
            {
                "posX": posX,
                "posY": posY,
                "posZ": posZ,
            });
};

op.transform3d = function ()
{
    return { "pos": [posX, posY, posZ] };
};

function doUpdateMatrix()
{
    mat4.identity(transMatrix);
    if (doTranslate)mat4.translate(transMatrix, transMatrix, vPos);

    if (rotX.get() !== 0)mat4.rotateX(transMatrix, transMatrix, rotX.get() * CGL.DEG2RAD);
    if (rotY.get() !== 0)mat4.rotateY(transMatrix, transMatrix, rotY.get() * CGL.DEG2RAD);
    if (rotZ.get() !== 0)mat4.rotateZ(transMatrix, transMatrix, rotZ.get() * CGL.DEG2RAD);

    if (doScale)mat4.scale(transMatrix, transMatrix, vScale);
    rotChanged = false;
}

function updateTranslation()
{
    doTranslate = false;
    if (posX.get() !== 0.0 || posY.get() !== 0.0 || posZ.get() !== 0.0) doTranslate = true;
    vec3.set(vPos, posX.get(), posY.get(), posZ.get());
    translationChanged = false;
}

function updateScale()
{
    // doScale=false;
    // if(scale.get()!==0.0)
    doScale = true;
    vec3.set(vScale, scale.get(), scale.get(), scale.get());
    scaleChanged = false;
}

function setTranslateChanged()
{
    translationChanged = true;
}

function setScaleChanged()
{
    scaleChanged = true;
}

function setRotChanged()
{
    rotChanged = true;
}

doUpdateMatrix();


};

Ops.Gl.Matrix.Transform.prototype = new CABLES.Op();
CABLES.OPS["650baeb1-db2d-4781-9af6-ab4e9d4277be"]={f:Ops.Gl.Matrix.Transform,objName:"Ops.Gl.Matrix.Transform"};




// **************************************************************
// 
// Ops.Math.Multiply
// 
// **************************************************************

Ops.Math.Multiply = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    number1 = op.inValueFloat("number1", 1),
    number2 = op.inValueFloat("number2", 2),
    result = op.outNumber("result");

op.setTitle("*");

number1.onChange = number2.onChange = update;
update();

function update()
{
    const n1 = number1.get();
    const n2 = number2.get();

    result.set(n1 * n2);
}


};

Ops.Math.Multiply.prototype = new CABLES.Op();
CABLES.OPS["1bbdae06-fbb2-489b-9bcc-36c9d65bd441"]={f:Ops.Math.Multiply,objName:"Ops.Math.Multiply"};




// **************************************************************
// 
// Ops.Gl.Meshes.Circle
// 
// **************************************************************

Ops.Gl.Meshes.Circle = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    render = op.inTrigger("render"),
    radius = op.inValue("radius", 0.5),
    innerRadius = op.inValueSlider("innerRadius", 0),
    segments = op.inValueInt("segments", 40),
    percent = op.inValueSlider("percent", 1),
    steps = op.inValue("steps", 0),
    invertSteps = op.inValueBool("invertSteps", false),
    mapping = op.inSwitch("mapping", ["flat", "round"]),
    drawSpline = op.inValueBool("Spline", false),
    inDraw = op.inValueBool("Draw", true),
    trigger = op.outTrigger("trigger"),
    geomOut = op.outObject("geometry", null, "geometry");

op.setPortGroup("Size", [radius, innerRadius]);
op.setPortGroup("Display", [percent, steps, invertSteps]);

mapping.set("flat");

mapping.onChange =
    segments.onChange =
    radius.onChange =
    innerRadius.onChange =
    percent.onChange =
    steps.onChange =
    invertSteps.onChange =
    drawSpline.onChange = calcLater;

geomOut.ignoreValueSerialize = true;
const cgl = op.patch.cgl;

let geom = new CGL.Geometry("circle");
let mesh = null;
const lastSegs = -1;

let oldPrim = 0;
let shader = null;
let needsCalc = true;

render.onTriggered = renderMesh;

op.preRender = () =>
{
    renderMesh();
};

function renderMesh()
{
    if (!CGL.TextureEffect.checkOpNotInTextureEffect(op)) return;

    if (needsCalc)calc();
    shader = cgl.getShader();
    if (!shader) return;
    oldPrim = shader.glPrimitive;

    if (drawSpline.get()) shader.glPrimitive = cgl.gl.LINE_STRIP;

    if (inDraw.get())mesh.render(shader);
    trigger.trigger();

    shader.glPrimitive = oldPrim;
}

function calc()
{
    const segs = Math.max(3, Math.floor(segments.get()));

    geom.clear();

    const faces = [];
    const texCoords = [];
    const vertexNormals = [];
    const tangents = [];
    const biTangents = [];

    let i = 0, degInRad = 0;
    let oldPosX = 0, oldPosY = 0;
    let oldPosXTexCoord = 0, oldPosYTexCoord = 0;

    let oldPosXIn = 0, oldPosYIn = 0;
    let oldPosXTexCoordIn = 0, oldPosYTexCoordIn = 0;

    let posxTexCoordIn = 0, posyTexCoordIn = 0;
    let posxTexCoord = 0, posyTexCoord = 0;
    let posx = 0, posy = 0;

    const perc = Math.max(0.0, percent.get());
    const verts = [];

    if (drawSpline.get())
    {
        let lastX = 0;
        let lastY = 0;
        const tc = [];
        for (i = 0; i <= segs * perc; i++)
        {
            degInRad = (360 / segs) * i * CGL.DEG2RAD;
            posx = Math.cos(degInRad) * radius.get();
            posy = Math.sin(degInRad) * radius.get();

            posyTexCoord = 0.5;

            if (i > 0)
            {
                verts.push(lastX);
                verts.push(lastY);
                verts.push(0);
                posxTexCoord = 1.0 - (i - 1) / segs;

                tc.push(posxTexCoord, posyTexCoord);
            }
            verts.push(posx);
            verts.push(posy);
            verts.push(0);

            lastX = posx;
            lastY = posy;
        }
        geom.setPointVertices(verts);
    }
    else
    if (innerRadius.get() <= 0)
    {
        for (i = 0; i <= segs * perc; i++)
        {
            degInRad = (360 / segs) * i * CGL.DEG2RAD;
            posx = Math.cos(degInRad) * radius.get();
            posy = Math.sin(degInRad) * radius.get();

            if (mapping.get() == "flat")
            {
                posxTexCoord = (Math.cos(degInRad) + 1.0) / 2;
                posyTexCoord = 1.0 - (Math.sin(degInRad) + 1.0) / 2;
                posxTexCoordIn = 0.5;
                posyTexCoordIn = 0.5;
            }
            else if (mapping.get() == "round")
            {
                posxTexCoord = 1.0 - i / segs;
                posyTexCoord = 0;
                posxTexCoordIn = posxTexCoord;
                posyTexCoordIn = 1;
            }

            faces.push(
                [posx, posy, 0],
                [oldPosX, oldPosY, 0],
                [0, 0, 0]
            );

            texCoords.push(posxTexCoord, posyTexCoord, oldPosXTexCoord, oldPosYTexCoord, posxTexCoordIn, posyTexCoordIn);
            vertexNormals.push(0, 0, 1, 0, 0, 1, 0, 0, 1);
            tangents.push(1, 0, 0, 1, 0, 0, 1, 0, 0);
            biTangents.push(0, 1, 0, 0, 1, 0, 0, 1, 0);

            oldPosXTexCoord = posxTexCoord;
            oldPosYTexCoord = posyTexCoord;

            oldPosX = posx;
            oldPosY = posy;
        }

        geom = CGL.Geometry.buildFromFaces(faces, "circle");
        geom.vertexNormals = vertexNormals;
        geom.tangents = tangents;
        geom.biTangents = biTangents;
        geom.texCoords = texCoords;
    }
    else
    {
        let count = 0;
        const numSteps = segs * perc;
        const pos = 0;

        for (i = 0; i <= numSteps; i++)
        {
            count++;

            degInRad = (360 / segs) * i * CGL.DEG2RAD;
            posx = Math.cos(degInRad) * radius.get();
            posy = Math.sin(degInRad) * radius.get();

            const posxIn = Math.cos(degInRad) * innerRadius.get() * radius.get();
            const posyIn = Math.sin(degInRad) * innerRadius.get() * radius.get();

            if (mapping.get() == "round")
            {
                posxTexCoord = 1.0 - i / segs;
                posyTexCoord = 0;
                posxTexCoordIn = posxTexCoord;
                posyTexCoordIn = 1;
            }

            if (steps.get() === 0.0 ||
                (count % parseInt(steps.get(), 10) === 0 && !invertSteps.get()) ||
                (count % parseInt(steps.get(), 10) !== 0 && invertSteps.get()))
            {
                faces.push(
                    [posx, posy, 0],
                    [oldPosX, oldPosY, 0],
                    [posxIn, posyIn, 0]
                );

                faces.push(
                    [posxIn, posyIn, 0],
                    [oldPosX, oldPosY, 0],
                    [oldPosXIn, oldPosYIn, 0]
                );

                texCoords.push(
                    posxTexCoord, 0,
                    oldPosXTexCoord, 0,
                    posxTexCoordIn, 1,

                    posxTexCoord, 1,
                    oldPosXTexCoord, 0,
                    oldPosXTexCoordIn, 1);

                vertexNormals.push(
                    0, 0, 1, 0, 0, 1, 0, 0, 1,
                    0, 0, 1, 0, 0, 1, 0, 0, 1
                );
                tangents.push(
                    1, 0, 0, 1, 0, 0, 1, 0, 0,
                    1, 0, 0, 1, 0, 0, 1, 0, 0
                );
                biTangents.push(
                    0, 1, 0, 0, 1, 0, 0, 1, 0,
                    0, 1, 0, 0, 1, 0, 0, 1, 0
                );
            }

            oldPosXTexCoordIn = posxTexCoordIn;
            oldPosYTexCoordIn = posyTexCoordIn;

            oldPosXTexCoord = posxTexCoord;
            oldPosYTexCoord = posyTexCoord;

            oldPosX = posx;
            oldPosY = posy;

            oldPosXIn = posxIn;
            oldPosYIn = posyIn;
        }

        geom = CGL.Geometry.buildFromFaces(faces, "circle");
        geom.vertexNormals = vertexNormals;
        geom.tangents = tangents;
        geom.biTangents = biTangents;

        if (mapping.get() == "flat") geom.mapTexCoords2d();
        else geom.texCoords = texCoords;
    }

    geomOut.set(null);
    geomOut.set(geom);

    if (geom.vertices.length == 0) return;
    if (mesh) mesh.dispose();
    mesh = null;
    mesh = new CGL.Mesh(cgl, geom);
    needsCalc = false;
}

function calcLater()
{
    needsCalc = true;
}

op.onDelete = function ()
{
    if (mesh)mesh.dispose();
};


};

Ops.Gl.Meshes.Circle.prototype = new CABLES.Op();
CABLES.OPS["4db917cc-2cef-43f4-83d5-38c4572fe943"]={f:Ops.Gl.Meshes.Circle,objName:"Ops.Gl.Meshes.Circle"};




// **************************************************************
// 
// Ops.Gl.ClearColor
// 
// **************************************************************

Ops.Gl.ClearColor = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    render = op.inTrigger("render"),
    trigger = op.outTrigger("trigger"),
    r = op.inFloatSlider("r", 0.1),
    g = op.inFloatSlider("g", 0.1),
    b = op.inFloatSlider("b", 0.1),
    a = op.inFloatSlider("a", 1);

r.setUiAttribs({ "colorPick": true });

const cgl = op.patch.cgl;

render.onTriggered = function ()
{
    cgl.gl.clearColor(r.get(), g.get(), b.get(), a.get());
    cgl.gl.clear(cgl.gl.COLOR_BUFFER_BIT | cgl.gl.DEPTH_BUFFER_BIT);
    trigger.trigger();
};


};

Ops.Gl.ClearColor.prototype = new CABLES.Op();
CABLES.OPS["19b441eb-9f63-4f35-ba08-b87841517c4d"]={f:Ops.Gl.ClearColor,objName:"Ops.Gl.ClearColor"};




// **************************************************************
// 
// Ops.Gl.Performance
// 
// **************************************************************

Ops.Gl.Performance = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    exe = op.inTrigger("exe"),
    inShow = op.inValueBool("Visible", true),
    inDoGpu = op.inValueBool("Measure GPU", true),
    next = op.outTrigger("childs"),
    position = op.inSwitch("Position", ["top", "bottom"], "top"),
    openDefault = op.inBool("Open", false),
    smoothGraph = op.inBool("Smooth Graph", true),
    inScaleGraph = op.inFloat("Scale", 3),
    inSizeGraph = op.inFloat("Size", 128),
    outCanv = op.outObject("Canvas"),
    outFPS = op.outNumber("FPS");

const cgl = op.patch.cgl;
const element = document.createElement("div");

let elementMeasures = null;
let ctx = null;
let opened = false;
let frameCount = 0;
let fps = 0;
let fpsStartTime = 0;
let childsTime = 0;
let avgMsChilds = 0;
const queue = [];
const timesMainloop = [];
const timesOnFrame = [];
const timesGPU = [];
let avgMs = 0;
let selfTime = 0;
let canvas = null;
let lastTime = 0;
let loadingCounter = 0;
const loadingChars = ["|", "/", "-", "\\"];
let initMeasures = true;

const colorRAFSlow = "#007f9c";
const colorRAFVeruSlow = "#aaaaaa";

const colorBg = "#222222";
const colorRAF = "#003f5c"; // color: https://learnui.design/tools/data-color-picker.html
const colorMainloop = "#7a5195";
const colorOnFrame = "#ef5675";
const colorGPU = "#ffa600";

let startedQuery = false;

let currentTimeGPU = 0;
let currentTimeMainloop = 0;
let currentTimeOnFrame = 0;

op.toWorkPortsNeedToBeLinked(exe, next);

const gl = op.patch.cgl.gl;
const glQueryExt = gl.getExtension("EXT_disjoint_timer_query_webgl2");

exe.onLinkChanged =
    inShow.onChange = () =>
    {
        updateOpened();
        updateVisibility();
    };

position.onChange = updatePos;
inSizeGraph.onChange = updateSize;

element.id = "performance";
element.style.position = "absolute";
element.style.left = "0px";
element.style.opacity = "0.8";
element.style.padding = "10px";
element.style.cursor = "pointer";
element.style.background = "#222";
element.style.color = "white";
element.style["font-family"] = "monospace";
element.style["font-size"] = "12px";
element.style["z-index"] = "99999";

element.innerHTML = "&nbsp;";
element.addEventListener("click", toggleOpened);

const container = op.patch.cgl.canvas.parentElement;
container.appendChild(element);

updateSize();
updateOpened();
updatePos();
updateVisibility();

op.onDelete = function ()
{
    if (canvas)canvas.remove();
    if (element)element.remove();
};

function updatePos()
{
    canvas.style["pointer-events"] = "none";
    if (position.get() == "top")
    {
        canvas.style.top = element.style.top = "0px";
        canvas.style.bottom = element.style.bottom = "initial";
    }
    else
    {
        canvas.style.bottom = element.style.bottom = "0px";
        canvas.style.top = element.style.top = "initial";
    }
}

function updateVisibility()
{
    if (!inShow.get() || !exe.isLinked())
    {
        element.style.display = "none";
        element.style.opacity = 0;
        canvas.style.display = "none";
    }
    else
    {
        element.style.display = "block";
        element.style.opacity = 1;
        canvas.style.display = "block";
    }
}

function updateSize()
{
    if (!canvas) return;

    const num = Math.max(0, parseInt(inSizeGraph.get()));

    canvas.width = num;
    canvas.height = num;
    element.style.left = num + "px";

    queue.length = 0;
    timesMainloop.length = 0;
    timesOnFrame.length = 0;
    timesGPU.length = 0;

    for (let i = 0; i < num; i++)
    {
        queue[i] = -1;
        timesMainloop[i] = -1;
        timesOnFrame[i] = -1;
        timesGPU[i] = -1;
    }
}

openDefault.onChange = function ()
{
    opened = openDefault.get();
    updateOpened();
};

function toggleOpened()
{
    if (!inShow.get()) return;
    element.style.opacity = 1;
    opened = !opened;
    updateOpened();
}

function updateOpened()
{
    updateText();
    if (!canvas)createCanvas();
    if (opened)
    {
        canvas.style.display = "block";
        element.style.left = inSizeGraph.get() + "px";
        element.style["min-height"] = "56px";
    }
    else
    {
        canvas.style.display = "none";
        element.style.left = "0px";
        element.style["min-height"] = "auto";
    }
}

function updateCanvas()
{
    const height = canvas.height;
    const hmul = inScaleGraph.get();

    ctx.fillStyle = colorBg;
    ctx.fillRect(0, 0, canvas.width, height);

    ctx.fillStyle = colorRAF;

    let k = 0;
    const numBars = Math.max(0, parseInt(inSizeGraph.get()));

    for (k = numBars; k >= 0; k--)
    {
        if (queue[k] > 30) ctx.fillStyle = colorRAFSlow;
        if (queue[k] > 60) ctx.fillStyle = colorRAFVeruSlow;

        ctx.fillRect(numBars - k, height - queue[k] * hmul, 1, queue[k] * hmul);
        if (queue[k] > 30)ctx.fillStyle = colorRAF;
    }

    for (k = numBars; k >= 0; k--)
    {
        let sum = 0;
        ctx.fillStyle = colorMainloop;
        sum = timesMainloop[k];
        ctx.fillRect(numBars - k, height - sum * hmul, 1, timesMainloop[k] * hmul);

        ctx.fillStyle = colorOnFrame;
        sum += timesOnFrame[k];
        ctx.fillRect(numBars - k, height - sum * hmul, 1, timesOnFrame[k] * hmul);

        ctx.fillStyle = colorGPU;
        sum += timesGPU[k];
        ctx.fillRect(numBars - k, height - sum * hmul, 1, timesGPU[k] * hmul);
    }

    for (let i = 10; i < height; i += 10)
    {
        ctx.fillStyle = "#888";
        const y = height - (i * hmul);
        ctx.fillRect(canvas.width - 5, y, 5, 1);
        ctx.font = "8px arial";

        ctx.fillText(i + "ms", canvas.width - 27, y + 3);
    }

    ctx.fillStyle = "#fff";
    ctx.fillRect(canvas.width - 5, height - (1000 / fps * hmul), 5, 1);
    ctx.fillText(Math.round(1000 / fps) + "ms", canvas.width - 27, height - (1000 / fps * hmul));
}

function createCanvas()
{
    canvas = document.createElement("canvas");
    canvas.id = "performance_" + op.patch.config.glCanvasId;
    canvas.width = inSizeGraph.get();
    canvas.height = inSizeGraph.get();
    canvas.style.display = "block";
    canvas.style.opacity = 0.9;
    canvas.style.position = "absolute";
    canvas.style.left = "0px";
    canvas.style.cursor = "pointer";
    canvas.style.top = "-64px";
    canvas.style["z-index"] = "99998";
    container.appendChild(canvas);
    ctx = canvas.getContext("2d");

    canvas.addEventListener("click", toggleOpened);

    updateSize();
}

function updateText()
{
    if (!inShow.get()) return;
    let warn = "";

    if (op.patch.cgl.profileData.profileShaderCompiles > 0)warn += "Shader compile (" + op.patch.cgl.profileData.profileShaderCompileName + ") ";
    if (op.patch.cgl.profileData.profileShaderGetUniform > 0)warn += "Shader get uni loc! (" + op.patch.cgl.profileData.profileShaderGetUniformName + ")";
    if (op.patch.cgl.profileData.profileTextureResize > 0)warn += "Texture resize! ";
    if (op.patch.cgl.profileData.profileFrameBuffercreate > 0)warn += "Framebuffer create! ";
    if (op.patch.cgl.profileData.profileEffectBuffercreate > 0)warn += "Effectbuffer create! ";
    if (op.patch.cgl.profileData.profileTextureDelete > 0)warn += "Texture delete! ";
    if (op.patch.cgl.profileData.profileNonTypedAttrib > 0)warn += "Not-Typed Buffer Attrib! " + op.patch.cgl.profileData.profileNonTypedAttribNames;
    if (op.patch.cgl.profileData.profileTextureNew > 0)warn += "new texture created! ";
    if (op.patch.cgl.profileData.profileGenMipMap > 0)warn += "generating mip maps!";

    if (warn.length > 0)
    {
        warn = "| <span style=\"color:#f80;\">WARNING: " + warn + "<span>";
    }

    let html = "";

    if (opened)
    {
        html += "<span style=\"color:" + colorRAF + "\">■</span> " + fps + " fps ";
        html += "<span style=\"color:" + colorMainloop + "\">■</span> " + Math.round(currentTimeMainloop * 100) / 100 + "ms mainloop ";
        html += "<span style=\"color:" + colorOnFrame + "\">■</span> " + Math.round((currentTimeOnFrame) * 100) / 100 + "ms onframe ";
        if (currentTimeGPU) html += "<span style=\"color:" + colorGPU + "\">■</span> " + Math.round(currentTimeGPU * 100) / 100 + "ms GPU";
        html += warn;
        element.innerHTML = html;
    }
    else
    {
        html += fps + " fps / ";
        html += "CPU: " + Math.round((op.patch.cgl.profileData.profileOnAnimFrameOps) * 100) / 100 + "ms / ";
        if (currentTimeGPU)html += "GPU: " + Math.round(currentTimeGPU * 100) / 100 + "ms  ";
        element.innerHTML = html;
    }

    if (op.patch.loading.getProgress() != 1.0)
    {
        element.innerHTML += "<br/>loading " + Math.round(op.patch.loading.getProgress() * 100) + "% " + loadingChars[(++loadingCounter) % loadingChars.length];
    }

    if (opened)
    {
        let count = 0;
        avgMs = 0;
        avgMsChilds = 0;
        for (let i = queue.length; i > queue.length - queue.length / 3; i--)
        {
            if (queue[i] > -1)
            {
                avgMs += queue[i];
                count++;
            }

            if (timesMainloop[i] > -1) avgMsChilds += timesMainloop[i];
        }

        avgMs /= count;
        avgMsChilds /= count;

        element.innerHTML += "<br/> " + cgl.canvasWidth + " x " + cgl.canvasHeight + " (x" + cgl.pixelDensity + ") ";
        element.innerHTML += "<br/>frame avg: " + Math.round(avgMsChilds * 100) / 100 + " ms (" + Math.round(avgMsChilds / avgMs * 100) + "%) / " + Math.round(avgMs * 100) / 100 + " ms";
        element.innerHTML += " (self: " + Math.round((selfTime) * 100) / 100 + " ms) ";

        element.innerHTML += "<br/>shader binds: " + Math.ceil(op.patch.cgl.profileData.profileShaderBinds / fps) +
            " uniforms: " + Math.ceil(op.patch.cgl.profileData.profileUniformCount / fps) +
            " mvp_uni_mat4: " + Math.ceil(op.patch.cgl.profileData.profileMVPMatrixCount / fps) +
            " num glPrimitives: " + Math.ceil(op.patch.cgl.profileData.profileMeshNumElements / (fps)) +

            " fenced pixelread: " + Math.ceil(op.patch.cgl.profileData.profileFencedPixelRead) +

            " mesh.setGeom: " + op.patch.cgl.profileData.profileMeshSetGeom +
            " videos: " + op.patch.cgl.profileData.profileVideosPlaying +
            " tex preview: " + op.patch.cgl.profileData.profileTexPreviews;

        element.innerHTML +=
        " draw meshes: " + Math.ceil(op.patch.cgl.profileData.profileMeshDraw / fps) +
        " framebuffer blit: " + Math.ceil(op.patch.cgl.profileData.profileFramebuffer / fps) +
        " texeffect blit: " + Math.ceil(op.patch.cgl.profileData.profileTextureEffect / fps);

        element.innerHTML += " all shader compiletime: " + Math.round(op.patch.cgl.profileData.shaderCompileTime * 100) / 100;
    }

    op.patch.cgl.profileData.clear();
}

function styleMeasureEle(ele)
{
    ele.style.padding = "0px";
    ele.style.margin = "0px";
}

function addMeasureChild(m, parentEle, timeSum, level)
{
    const height = 20;
    m.usedAvg = (m.usedAvg || m.used);

    if (!m.ele || initMeasures)
    {
        const newEle = document.createElement("div");
        m.ele = newEle;

        if (m.childs && m.childs.length > 0) newEle.style.height = "500px";
        else newEle.style.height = height + "px";

        newEle.style.overflow = "hidden";
        newEle.style.display = "inline-block";

        if (!m.isRoot)
        {
            newEle.innerHTML = "<div style=\"min-height:" + height + "px;width:100%;overflow:hidden;color:black;position:relative\">&nbsp;" + m.name + "</div>";
            newEle.style["background-color"] = "rgb(" + m.colR + "," + m.colG + "," + m.colB + ")";
            newEle.style["border-left"] = "1px solid black";
        }

        parentEle.appendChild(newEle);
    }

    if (!m.isRoot)
    {
        if (performance.now() - m.lastTime > 200)
        {
            m.ele.style.display = "none";
            m.hidden = true;
        }
        else
        {
            if (m.hidden)
            {
                m.ele.style.display = "inline-block";
                m.hidden = false;
            }
        }

        m.ele.style.float = "left";
        m.ele.style.width = Math.floor((m.usedAvg / timeSum) * 98.0) + "%";
    }
    else
    {
        m.ele.style.width = "100%";
        m.ele.style.clear = "both";
        m.ele.style.float = "none";
    }

    if (m && m.childs && m.childs.length > 0)
    {
        let thisTimeSum = 0;
        for (var i = 0; i < m.childs.length; i++)
        {
            m.childs[i].usedAvg = (m.childs[i].usedAvg || m.childs[i].used) * 0.95 + m.childs[i].used * 0.05;
            thisTimeSum += m.childs[i].usedAvg;
        }
        for (var i = 0; i < m.childs.length; i++)
        {
            addMeasureChild(m.childs[i], m.ele, thisTimeSum, level + 1);
        }
    }
}

function clearMeasures(p)
{
    for (let i = 0; i < p.childs.length; i++) clearMeasures(p.childs[i]);
    p.childs.length = 0;
}

function measures()
{
    if (!CGL.performanceMeasures) return;

    if (!elementMeasures)
    {
        op.log("create measure ele");
        elementMeasures = document.createElement("div");
        elementMeasures.style.width = "100%";
        elementMeasures.style["background-color"] = "#444";
        elementMeasures.style.bottom = "10px";
        elementMeasures.style.height = "100px";
        elementMeasures.style.opacity = "1";
        elementMeasures.style.position = "absolute";
        elementMeasures.style["z-index"] = "99999";
        elementMeasures.innerHTML = "";
        container.appendChild(elementMeasures);
    }

    let timeSum = 0;
    const root = CGL.performanceMeasures[0];

    for (let i = 0; i < root.childs.length; i++) timeSum += root.childs[i].used;

    addMeasureChild(CGL.performanceMeasures[0], elementMeasures, timeSum, 0);

    root.childs.length = 0;

    clearMeasures(CGL.performanceMeasures[0]);

    CGL.performanceMeasures.length = 0;
    initMeasures = false;
}

exe.onTriggered = render;

function render()
{
    const selfTimeStart = performance.now();
    frameCount++;

    if (glQueryExt && inDoGpu.get() && inShow.get())op.patch.cgl.profileData.doProfileGlQuery = true;
    else op.patch.cgl.profileData.doProfileGlQuery = false;

    if (fpsStartTime === 0)fpsStartTime = Date.now();
    if (Date.now() - fpsStartTime >= 1000)
    {
        // query=null;
        fps = frameCount;
        frameCount = 0;
        // frames = 0;
        outFPS.set(fps);
        if (inShow.get())updateText();

        fpsStartTime = Date.now();
    }

    const glQueryData = op.patch.cgl.profileData.glQueryData;
    currentTimeGPU = 0;
    if (glQueryData)
    {
        let count = 0;
        for (let i in glQueryData)
        {
            count++;
            if (glQueryData[i].time)
                currentTimeGPU += glQueryData[i].time;
        }
    }

    if (inShow.get())
    {
        measures();

        if (opened && !op.patch.cgl.profileData.pause)
        {
            // const timeUsed = performance.now() - lastTime;
            queue.push(op.patch.cgl.profileData.profileFrameDelta);
            queue.shift();

            timesMainloop.push(childsTime);
            timesMainloop.shift();

            timesOnFrame.push(op.patch.cgl.profileData.profileOnAnimFrameOps - op.patch.cgl.profileData.profileMainloopMs);
            timesOnFrame.shift();

            timesGPU.push(currentTimeGPU);
            timesGPU.shift();

            updateCanvas();
        }
    }

    lastTime = performance.now();
    selfTime = performance.now() - selfTimeStart;
    const startTimeChilds = performance.now();

    outCanv.setRef(canvas);

    next.trigger();

    const nChildsTime = performance.now() - startTimeChilds;
    const nCurrentTimeMainloop = op.patch.cgl.profileData.profileMainloopMs;
    const nCurrentTimeOnFrame = op.patch.cgl.profileData.profileOnAnimFrameOps - op.patch.cgl.profileData.profileMainloopMs;

    if (smoothGraph.get())
    {
        childsTime = childsTime * 0.9 + nChildsTime * 0.1;
        currentTimeMainloop = currentTimeMainloop * 0.5 + nCurrentTimeMainloop * 0.5;
        currentTimeOnFrame = currentTimeOnFrame * 0.5 + nCurrentTimeOnFrame * 0.5;
    }
    else
    {
        childsTime = nChildsTime;
        currentTimeMainloop = nCurrentTimeMainloop;
        currentTimeOnFrame = nCurrentTimeOnFrame;
    }

    op.patch.cgl.profileData.clearGlQuery();
}


};

Ops.Gl.Performance.prototype = new CABLES.Op();
CABLES.OPS["9cd2d9de-000f-4a14-bd13-e7d5f057583c"]={f:Ops.Gl.Performance,objName:"Ops.Gl.Performance"};




// **************************************************************
// 
// Ops.Devices.TouchScreen
// 
// **************************************************************

Ops.Devices.TouchScreen = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    disableScaleWeb = op.inValueBool("Disable Scaling", true),
    disableDefault = op.inValueBool("Disable Scroll", true),
    hdpi = op.inValueBool("HDPI Coordinates", false),
    active = op.inValueBool("Active", true),

    outTouched = op.outNumber("Touched", false),
    numFingers = op.outNumber("Fingers", 0),

    f1x = op.outNumber("Finger 1 X", 0),
    f1y = op.outNumber("Finger 1 Y", 0),
    f1f = op.outNumber("Finger 1 Force", 0),

    f2x = op.outNumber("Finger 2 X", 0),
    f2y = op.outNumber("Finger 2 Y", 0),
    f2f = op.outNumber("Finger 2 Force", 0),
    area = op.inSwitch("Area", ["Canvas", "Document"], "Canvas"),

    outEvents = op.outArray("Events"),
    normalize = op.inValueBool("Normalize Coordinates"),
    flipY = op.inValueBool("Flip Y"),
    outTouchStart = op.outTrigger("Touch Start"),
    outTouchEnd = op.outTrigger("Touch End");

area.onChange = updateArea;

function setPos(event)
{
    if (event.touches && event.touches.length > 0)
    {
        var rect = event.target.getBoundingClientRect();
        var x = event.touches[0].clientX - event.touches[0].target.offsetLeft;
        var y = event.touches[0].clientY - event.touches[0].target.offsetTop;

        if (flipY.get()) y = rect.height - y;

        if (hdpi.get())
        {
            x *= (op.patch.cgl.pixelDensity || 1);
            y *= (op.patch.cgl.pixelDensity || 1);
        }

        if (normalize.get())
        {
            x = (x / rect.width * 2.0 - 1.0);
            y = (y / rect.height * 2.0 - 1.0);
        }

        f1x.set(x);
        f1y.set(y);

        if (event.touches[0].force)f1f.set(event.touches[0].force);
    }

    if (event.touches && event.touches.length > 1)
    {
        var rect = event.target.getBoundingClientRect();
        var x = event.touches[1].clientX - event.touches[1].target.offsetLeft;
        var y = event.touches[1].clientY - event.touches[1].target.offsetTop;

        if (hdpi.get())
        {
            x *= (op.patch.cgl.pixelDensity || 1);
            y *= (op.patch.cgl.pixelDensity || 1);
        }

        if (normalize.get())
        {
            x = (x / rect.width * 2.0 - 1.0);
            y = (y / rect.height * 2.0 - 1.0);
        }

        f2x.set(x);
        f2y.set(y);

        if (event.touches[1].force)f2f.set(event.touches[1].force);
    }
    outEvents.set(event.touches);
}

const ontouchstart = function (event)
{
    outTouched.set(true);
    setPos(event);
    numFingers.set(event.touches.length);
    outTouchStart.trigger();
};

const ontouchend = function (event)
{
    outTouched.set(false);
    f1f.set(0);
    f2f.set(0);
    setPos(event);

    numFingers.set(event.touches.length);
    outTouchEnd.trigger();
};

const ontouchmove = function (event)
{
    setPos(event);
    numFingers.set(event.touches.length);
    if (disableDefault.get() || (disableScaleWeb.get() && event.scale !== 1))
    {
        event.preventDefault();
        document.body.style["touch-action"] = "none";
    }
    else
    {
        document.body.style["touch-action"] = "initial";
    }
};

const cgl = op.patch.cgl;
let listenerElement = null;
function addListeners()
{
    listenerElement.addEventListener("touchmove", ontouchmove, { "passive": true });
    listenerElement.addEventListener("touchstart", ontouchstart, { "passive": true });
    listenerElement.addEventListener("touchend", ontouchend, { "passive": true });
}

function updateArea()
{
    removeListeners();

    if (area.get() == "Document") listenerElement = document;
    else listenerElement = cgl.canvas;

    if (active.get()) addListeners();
}

function removeListeners()
{
    if (listenerElement)
    {
        listenerElement.removeEventListener("touchmove", ontouchmove);
        listenerElement.removeEventListener("touchstart", ontouchstart);
        listenerElement.removeEventListener("touchend", ontouchend);
    }
    listenerElement = null;
}

active.onChange = function ()
{
    updateArea();
};

updateArea();


};

Ops.Devices.TouchScreen.prototype = new CABLES.Op();
CABLES.OPS["cedffacf-0f09-4342-bd21-540bd9c8037d"]={f:Ops.Devices.TouchScreen,objName:"Ops.Devices.TouchScreen"};




// **************************************************************
// 
// Ops.Ui.Comment_v2
// 
// **************************************************************

Ops.Ui.Comment_v2 = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    inTitle = op.inString("title", "New comment"),
    inText = op.inTextarea("text");
inTitle.setUiAttribs({ "hidePort": true });
inText.setUiAttribs({ "hidePort": true });

op.init =
    inTitle.onChange =
    inText.onChange =
    op.onLoaded = update;

update();

function update()
{
    if (CABLES.UI)
    {
        op.uiAttr(
            {
                "comment_title": inTitle.get(),
                "comment_text": inText.get()
            });

        op.name = inTitle.get();
    }
}


};

Ops.Ui.Comment_v2.prototype = new CABLES.Op();
CABLES.OPS["93492eeb-bf35-4a62-98f7-d85b0b79bfe5"]={f:Ops.Ui.Comment_v2,objName:"Ops.Ui.Comment_v2"};




// **************************************************************
// 
// Ops.Gl.Shader.BasicMaterial_v3
// 
// **************************************************************

Ops.Gl.Shader.BasicMaterial_v3 = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={"basicmaterial_frag":"{{MODULES_HEAD}}\n\nIN vec2 texCoord;\n\n#ifdef VERTEX_COLORS\nIN vec4 vertCol;\n#endif\n\n#ifdef HAS_TEXTURES\n    IN vec2 texCoordOrig;\n    #ifdef HAS_TEXTURE_DIFFUSE\n        UNI sampler2D tex;\n    #endif\n    #ifdef HAS_TEXTURE_OPACITY\n        UNI sampler2D texOpacity;\n   #endif\n#endif\n\n\n\nvoid main()\n{\n    {{MODULE_BEGIN_FRAG}}\n    vec4 col=color;\n\n\n    #ifdef HAS_TEXTURES\n        vec2 uv=texCoord;\n\n        #ifdef CROP_TEXCOORDS\n            if(uv.x<0.0 || uv.x>1.0 || uv.y<0.0 || uv.y>1.0) discard;\n        #endif\n\n        #ifdef HAS_TEXTURE_DIFFUSE\n            col=texture(tex,uv);\n\n            #ifdef COLORIZE_TEXTURE\n                col.r*=color.r;\n                col.g*=color.g;\n                col.b*=color.b;\n            #endif\n        #endif\n        col.a*=color.a;\n        #ifdef HAS_TEXTURE_OPACITY\n            #ifdef TRANSFORMALPHATEXCOORDS\n                uv=texCoordOrig;\n            #endif\n            #ifdef ALPHA_MASK_IALPHA\n                col.a*=1.0-texture(texOpacity,uv).a;\n            #endif\n            #ifdef ALPHA_MASK_ALPHA\n                col.a*=texture(texOpacity,uv).a;\n            #endif\n            #ifdef ALPHA_MASK_LUMI\n                col.a*=dot(vec3(0.2126,0.7152,0.0722), texture(texOpacity,uv).rgb);\n            #endif\n            #ifdef ALPHA_MASK_R\n                col.a*=texture(texOpacity,uv).r;\n            #endif\n            #ifdef ALPHA_MASK_G\n                col.a*=texture(texOpacity,uv).g;\n            #endif\n            #ifdef ALPHA_MASK_B\n                col.a*=texture(texOpacity,uv).b;\n            #endif\n            // #endif\n        #endif\n    #endif\n\n    {{MODULE_COLOR}}\n\n    #ifdef DISCARDTRANS\n        if(col.a<0.2) discard;\n    #endif\n\n    #ifdef VERTEX_COLORS\n        col*=vertCol;\n    #endif\n\n    outColor = col;\n}\n","basicmaterial_vert":"\n{{MODULES_HEAD}}\n\nOUT vec2 texCoord;\nOUT vec2 texCoordOrig;\n\nUNI mat4 projMatrix;\nUNI mat4 modelMatrix;\nUNI mat4 viewMatrix;\n\n#ifdef HAS_TEXTURES\n    UNI float diffuseRepeatX;\n    UNI float diffuseRepeatY;\n    UNI float texOffsetX;\n    UNI float texOffsetY;\n#endif\n\n#ifdef VERTEX_COLORS\n    in vec4 attrVertColor;\n    out vec4 vertCol;\n\n#endif\n\n\nvoid main()\n{\n    mat4 mMatrix=modelMatrix;\n    mat4 mvMatrix;\n\n    norm=attrVertNormal;\n    texCoordOrig=attrTexCoord;\n    texCoord=attrTexCoord;\n    #ifdef HAS_TEXTURES\n        texCoord.x=texCoord.x*diffuseRepeatX+texOffsetX;\n        texCoord.y=(1.0-texCoord.y)*diffuseRepeatY+texOffsetY;\n    #endif\n\n    #ifdef VERTEX_COLORS\n        vertCol=attrVertColor;\n    #endif\n\n    vec4 pos = vec4(vPosition, 1.0);\n\n    #ifdef BILLBOARD\n       vec3 position=vPosition;\n       mvMatrix=viewMatrix*modelMatrix;\n\n       gl_Position = projMatrix * mvMatrix * vec4((\n           position.x * vec3(\n               mvMatrix[0][0],\n               mvMatrix[1][0],\n               mvMatrix[2][0] ) +\n           position.y * vec3(\n               mvMatrix[0][1],\n               mvMatrix[1][1],\n               mvMatrix[2][1]) ), 1.0);\n    #endif\n\n    {{MODULE_VERTEX_POSITION}}\n\n    #ifndef BILLBOARD\n        mvMatrix=viewMatrix * mMatrix;\n    #endif\n\n\n    #ifndef BILLBOARD\n        // gl_Position = projMatrix * viewMatrix * modelMatrix * pos;\n        gl_Position = projMatrix * mvMatrix * pos;\n    #endif\n}\n",};
const render = op.inTrigger("render");

const trigger = op.outTrigger("trigger");
const shaderOut = op.outObject("shader", null, "shader");

shaderOut.ignoreValueSerialize = true;

op.toWorkPortsNeedToBeLinked(render);
op.toWorkShouldNotBeChild("Ops.Gl.TextureEffects.ImageCompose", CABLES.OP_PORT_TYPE_FUNCTION);

const cgl = op.patch.cgl;
const shader = new CGL.Shader(cgl, "basicmaterialnew");
shader.addAttribute({ "type": "vec3", "name": "vPosition" });
shader.addAttribute({ "type": "vec2", "name": "attrTexCoord" });
shader.addAttribute({ "type": "vec3", "name": "attrVertNormal", "nameFrag": "norm" });
shader.addAttribute({ "type": "float", "name": "attrVertIndex" });

shader.setModules(["MODULE_VERTEX_POSITION", "MODULE_COLOR", "MODULE_BEGIN_FRAG"]);

shader.setSource(attachments.basicmaterial_vert, attachments.basicmaterial_frag);

shaderOut.setRef(shader);

render.onTriggered = doRender;

// rgba colors
const r = op.inValueSlider("r", Math.random());
const g = op.inValueSlider("g", Math.random());
const b = op.inValueSlider("b", Math.random());
const a = op.inValueSlider("a", 1);
r.setUiAttribs({ "colorPick": true });

// const uniColor=new CGL.Uniform(shader,'4f','color',r,g,b,a);
const colUni = shader.addUniformFrag("4f", "color", r, g, b, a);

shader.uniformColorDiffuse = colUni;

// diffuse outTexture

const diffuseTexture = op.inTexture("texture");
let diffuseTextureUniform = null;
diffuseTexture.onChange = updateDiffuseTexture;

const colorizeTexture = op.inValueBool("colorizeTexture", false);
const vertexColors = op.inValueBool("Vertex Colors", false);

// opacity texture
const textureOpacity = op.inTexture("textureOpacity");
let textureOpacityUniform = null;

const alphaMaskSource = op.inSwitch("Alpha Mask Source", ["Luminance", "R", "G", "B", "A", "1-A"], "Luminance");
alphaMaskSource.setUiAttribs({ "greyout": true });
textureOpacity.onChange = updateOpacity;

const texCoordAlpha = op.inValueBool("Opacity TexCoords Transform", false);
const discardTransPxl = op.inValueBool("Discard Transparent Pixels");

// texture coords
const
    diffuseRepeatX = op.inValue("diffuseRepeatX", 1),
    diffuseRepeatY = op.inValue("diffuseRepeatY", 1),
    diffuseOffsetX = op.inValue("Tex Offset X", 0),
    diffuseOffsetY = op.inValue("Tex Offset Y", 0),
    cropRepeat = op.inBool("Crop TexCoords", false);

shader.addUniformFrag("f", "diffuseRepeatX", diffuseRepeatX);
shader.addUniformFrag("f", "diffuseRepeatY", diffuseRepeatY);
shader.addUniformFrag("f", "texOffsetX", diffuseOffsetX);
shader.addUniformFrag("f", "texOffsetY", diffuseOffsetY);

const doBillboard = op.inValueBool("billboard", false);

alphaMaskSource.onChange =
    doBillboard.onChange =
    discardTransPxl.onChange =
    texCoordAlpha.onChange =
    cropRepeat.onChange =
    vertexColors.onChange =
    colorizeTexture.onChange = updateDefines;

op.setPortGroup("Color", [r, g, b, a]);
op.setPortGroup("Color Texture", [diffuseTexture, vertexColors, colorizeTexture]);
op.setPortGroup("Opacity", [textureOpacity, alphaMaskSource, discardTransPxl, texCoordAlpha]);
op.setPortGroup("Texture Transform", [diffuseRepeatX, diffuseRepeatY, diffuseOffsetX, diffuseOffsetY, cropRepeat]);

updateOpacity();
updateDiffuseTexture();

op.preRender = function ()
{
    shader.bind();
    doRender();
};

function doRender()
{
    if (!shader) return;

    cgl.pushShader(shader);
    shader.popTextures();

    if (diffuseTextureUniform && diffuseTexture.get()) shader.pushTexture(diffuseTextureUniform, diffuseTexture.get());
    if (textureOpacityUniform && textureOpacity.get()) shader.pushTexture(textureOpacityUniform, textureOpacity.get());

    trigger.trigger();

    cgl.popShader();
}

function updateOpacity()
{
    if (textureOpacity.get())
    {
        if (textureOpacityUniform !== null) return;
        shader.removeUniform("texOpacity");
        shader.define("HAS_TEXTURE_OPACITY");
        if (!textureOpacityUniform)textureOpacityUniform = new CGL.Uniform(shader, "t", "texOpacity");
    }
    else
    {
        shader.removeUniform("texOpacity");
        shader.removeDefine("HAS_TEXTURE_OPACITY");
        textureOpacityUniform = null;
    }

    updateDefines();
}

function updateDiffuseTexture()
{
    if (diffuseTexture.get())
    {
        if (!shader.hasDefine("HAS_TEXTURE_DIFFUSE"))shader.define("HAS_TEXTURE_DIFFUSE");
        if (!diffuseTextureUniform)diffuseTextureUniform = new CGL.Uniform(shader, "t", "texDiffuse");
    }
    else
    {
        shader.removeUniform("texDiffuse");
        shader.removeDefine("HAS_TEXTURE_DIFFUSE");
        diffuseTextureUniform = null;
    }
    updateUi();
}

function updateUi()
{
    diffuseRepeatX.setUiAttribs({ "greyout": !diffuseTexture.get() });
    diffuseRepeatY.setUiAttribs({ "greyout": !diffuseTexture.get() });
    diffuseOffsetX.setUiAttribs({ "greyout": !diffuseTexture.get() });
    diffuseOffsetY.setUiAttribs({ "greyout": !diffuseTexture.get() });
    colorizeTexture.setUiAttribs({ "greyout": !diffuseTexture.get() });

    alphaMaskSource.setUiAttribs({ "greyout": !textureOpacity.get() });
    texCoordAlpha.setUiAttribs({ "greyout": !textureOpacity.get() });

    let notUsingColor = true;
    notUsingColor = diffuseTexture.get() && !colorizeTexture.get();
    r.setUiAttribs({ "greyout": notUsingColor });
    g.setUiAttribs({ "greyout": notUsingColor });
    b.setUiAttribs({ "greyout": notUsingColor });
}

function updateDefines()
{
    shader.toggleDefine("VERTEX_COLORS", vertexColors.get());
    shader.toggleDefine("CROP_TEXCOORDS", cropRepeat.get());
    shader.toggleDefine("COLORIZE_TEXTURE", colorizeTexture.get());
    shader.toggleDefine("TRANSFORMALPHATEXCOORDS", texCoordAlpha.get());
    shader.toggleDefine("DISCARDTRANS", discardTransPxl.get());
    shader.toggleDefine("BILLBOARD", doBillboard.get());

    shader.toggleDefine("ALPHA_MASK_ALPHA", alphaMaskSource.get() == "A");
    shader.toggleDefine("ALPHA_MASK_IALPHA", alphaMaskSource.get() == "1-A");
    shader.toggleDefine("ALPHA_MASK_LUMI", alphaMaskSource.get() == "Luminance");
    shader.toggleDefine("ALPHA_MASK_R", alphaMaskSource.get() == "R");
    shader.toggleDefine("ALPHA_MASK_G", alphaMaskSource.get() == "G");
    shader.toggleDefine("ALPHA_MASK_B", alphaMaskSource.get() == "B");
    updateUi();
}


};

Ops.Gl.Shader.BasicMaterial_v3.prototype = new CABLES.Op();
CABLES.OPS["ec55d252-3843-41b1-b731-0482dbd9e72b"]={f:Ops.Gl.Shader.BasicMaterial_v3,objName:"Ops.Gl.Shader.BasicMaterial_v3"};




// **************************************************************
// 
// Ops.Boolean.IfTrueThen_v2
// 
// **************************************************************

Ops.Boolean.IfTrueThen_v2 = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    exe = op.inTrigger("exe"),
    boolean = op.inValueBool("boolean", false),
    triggerThen = op.outTrigger("then"),
    triggerElse = op.outTrigger("else");

exe.onTriggered = exec;

// let b = false;

// boolean.onChange = () =>
// {
//     b = boolean.get();
// };

function exec()
{
    if (boolean.get()) triggerThen.trigger();
    else triggerElse.trigger();
}


};

Ops.Boolean.IfTrueThen_v2.prototype = new CABLES.Op();
CABLES.OPS["9549e2ed-a544-4d33-a672-05c7854ccf5d"]={f:Ops.Boolean.IfTrueThen_v2,objName:"Ops.Boolean.IfTrueThen_v2"};




// **************************************************************
// 
// Ops.Trigger.Repeat_v2
// 
// **************************************************************

Ops.Trigger.Repeat_v2 = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    exe=op.inTrigger("Execute"),
    num=op.inValueInt("Repeats",5),
    dir=op.inSwitch("Direction",['Forward','Backward'],'Forward'),
    next=op.outTrigger("Next"),
    idx=op.addOutPort(new CABLES.Port(op,"index"));

dir.onChange=updateDir;
updateDir();

function updateDir()
{
    if(dir.get()=="Forward") exe.onTriggered=forward;
    else exe.onTriggered=backward;
}

function forward()
{
    const max=Math.floor(num.get());

    for(var i=0;i<max;i++)
    {
        idx.set(i);
        next.trigger();
    }
}

function backward()
{
    const numi=Math.floor(num.get());
    for(var i=numi-1;i>-1;i--)
    {
        idx.set(i);
        next.trigger();
    }
}


};

Ops.Trigger.Repeat_v2.prototype = new CABLES.Op();
CABLES.OPS["a4deea80-db97-478f-ad1a-5ee30f2f47cc"]={f:Ops.Trigger.Repeat_v2,objName:"Ops.Trigger.Repeat_v2"};




// **************************************************************
// 
// Ops.Number.Number
// 
// **************************************************************

Ops.Number.Number = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    v = op.inValueFloat("value"),
    result = op.outNumber("result");

v.onChange = exec;

function exec()
{
    result.set(Number(v.get()));
}


};

Ops.Number.Number.prototype = new CABLES.Op();
CABLES.OPS["8fb2bb5d-665a-4d0a-8079-12710ae453be"]={f:Ops.Number.Number,objName:"Ops.Number.Number"};




// **************************************************************
// 
// Ops.Gl.Matrix.Camera
// 
// **************************************************************

Ops.Gl.Matrix.Camera = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const render = op.inTrigger("render");
const trigger = op.outTrigger("trigger");

/* Inputs */
// projection | prespective & ortogonal
const projectionMode = op.inValueSelect("projection mode", ["prespective", "ortogonal"], "prespective");
const zNear = op.inValue("frustum near", 0.01);
const zFar = op.inValue("frustum far", 5000.0);

const fov = op.inValue("fov", 45);
const autoAspect = op.inValueBool("Auto Aspect Ratio", true);
const aspect = op.inValue("Aspect Ratio", 1);

// look at camera
const eyeX = op.inValue("eye X", 0);
const eyeY = op.inValue("eye Y", 0);
const eyeZ = op.inValue("eye Z", 5);

const centerX = op.inValue("center X", 0);
const centerY = op.inValue("center Y", 0);
const centerZ = op.inValue("center Z", 0);

// camera transform and movements
const posX = op.inValue("truck", 0);
const posY = op.inValue("boom", 0);
const posZ = op.inValue("dolly", 0);

const rotX = op.inValue("tilt", 0);
const rotY = op.inValue("pan", 0);
const rotZ = op.inValue("roll", 0);

/* Outputs */
const outAsp = op.outNumber("Aspect");
const outArr = op.outArray("Look At Array");

/* logic */
const cgl = op.patch.cgl;

let asp = 0;

const vUp = vec3.create();
const vEye = vec3.create();
const vCenter = vec3.create();
const transMatrix = mat4.create();
mat4.identity(transMatrix);

const arr = [];

// Transform and move
const vPos = vec3.create();
const transMatrixMove = mat4.create();
mat4.identity(transMatrixMove);

let updateCameraMovementMatrix = true;

render.onTriggered = function ()
{
    if (cgl.frameStore.shadowPass) return trigger.trigger();

    // Aspect ration
    if (!autoAspect.get()) asp = aspect.get();
    else asp = cgl.getViewPort()[2] / cgl.getViewPort()[3];
    outAsp.set(asp);

    // translation (truck, boom, dolly)
    cgl.pushViewMatrix();

    if (updateCameraMovementMatrix)
    {
        mat4.identity(transMatrixMove);

        vec3.set(vPos, posX.get(), posY.get(), posZ.get());
        if (posX.get() !== 0.0 || posY.get() !== 0.0 || posZ.get() !== 0.0)
            mat4.translate(transMatrixMove, transMatrixMove, vPos);

        if (rotX.get() !== 0)
            mat4.rotateX(transMatrixMove, transMatrixMove, rotX.get() * CGL.DEG2RAD);
        if (rotY.get() !== 0)
            mat4.rotateY(transMatrixMove, transMatrixMove, rotY.get() * CGL.DEG2RAD);
        if (rotZ.get() !== 0)
            mat4.rotateZ(transMatrixMove, transMatrixMove, rotZ.get() * CGL.DEG2RAD);

        updateCameraMovementMatrix = false;
    }

    mat4.multiply(cgl.vMatrix, cgl.vMatrix, transMatrixMove);

    // projection (prespective / ortogonal)
    cgl.pushPMatrix();

    // look at
    cgl.pushViewMatrix();

    if (projectionMode.get() == "prespective")
    {
        mat4.perspective(
            cgl.pMatrix,
            fov.get() * 0.0174533,
            asp,
            zNear.get(),
            zFar.get()
        );
    }
    else if (projectionMode.get() == "ortogonal")
    {
        mat4.ortho(
            cgl.pMatrix,
            -1 * (fov.get() / 14),
            1 * (fov.get() / 14),
            -1 * (fov.get() / 14) / asp,
            1 * (fov.get() / 14) / asp,
            zNear.get(),
            zFar.get()
        );
    }

    arr[0] = eyeX.get();
    arr[1] = eyeY.get();
    arr[2] = eyeZ.get();

    arr[3] = centerX.get();
    arr[4] = centerY.get();
    arr[5] = centerZ.get();

    arr[6] = 0;
    arr[7] = 1;
    arr[8] = 0;

    outArr.setRef(arr);

    vec3.set(vUp, 0, 1, 0);
    vec3.set(vEye, eyeX.get(), eyeY.get(), eyeZ.get());
    vec3.set(vCenter, centerX.get(), centerY.get(), centerZ.get());

    mat4.lookAt(transMatrix, vEye, vCenter, vUp);

    mat4.multiply(cgl.vMatrix, cgl.vMatrix, transMatrix);

    trigger.trigger();

    cgl.popViewMatrix();
    cgl.popPMatrix();

    cgl.popViewMatrix();

    // GUI for dolly, boom and truck
    if (op.isCurrentUiOp())
        gui.setTransformGizmo({
            "posX": posX,
            "posY": posY,
            "posZ": posZ
        });
};

const updateUI = function ()
{
    if (!autoAspect.get())
    {
        aspect.setUiAttribs({ "greyout": false });
    }
    else
    {
        aspect.setUiAttribs({ "greyout": true });
    }
};

const cameraMovementChanged = function ()
{
    updateCameraMovementMatrix = true;
};

// listeners
posX.onChange = cameraMovementChanged;
posY.onChange = cameraMovementChanged;
posZ.onChange = cameraMovementChanged;

rotX.onChange = cameraMovementChanged;
rotY.onChange = cameraMovementChanged;
rotZ.onChange = cameraMovementChanged;

autoAspect.onChange = updateUI;
updateUI();


};

Ops.Gl.Matrix.Camera.prototype = new CABLES.Op();
CABLES.OPS["b24dbfdc-485c-49d2-92a1-7258efd9239a"]={f:Ops.Gl.Matrix.Camera,objName:"Ops.Gl.Matrix.Camera"};




// **************************************************************
// 
// Ops.Devices.Mouse.MouseButtons
// 
// **************************************************************

Ops.Devices.Mouse.MouseButtons = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    mouseClickLeft = op.outTrigger("Click Left"),
    mouseClickRight = op.outTrigger("Click Right"),
    mouseDoubleClick = op.outTrigger("Double Click"),
    mouseDownLeft = op.outBoolNum("Button pressed Left", false),
    mouseDownMiddle = op.outBoolNum("Button pressed Middle", false),
    mouseDownRight = op.outBoolNum("Button pressed Right", false),
    triggerMouseDownLeft = op.outTrigger("Mouse Down Left"),
    triggerMouseDownMiddle = op.outTrigger("Mouse Down Middle"),
    triggerMouseDownRight = op.outTrigger("Mouse Down Right"),
    triggerMouseUpLeft = op.outTrigger("Mouse Up Left"),
    triggerMouseUpMiddle = op.outTrigger("Mouse Up Middle"),
    triggerMouseUpRight = op.outTrigger("Mouse Up Right"),
    area = op.inValueSelect("Area", ["Canvas", "Document"], "Canvas"),
    active = op.inValueBool("Active", true);

const cgl = op.patch.cgl;
let listenerElement = null;
area.onChange = updateListeners;
op.onDelete = removeListeners;
updateListeners();

function onMouseDown(e)
{
    if (e.which == 1)
    {
        mouseDownLeft.set(true);
        triggerMouseDownLeft.trigger();
    }
    else if (e.which == 2)
    {
        mouseDownMiddle.set(true);
        triggerMouseDownMiddle.trigger();
    }
    else if (e.which == 3)
    {
        mouseDownRight.set(true);
        triggerMouseDownRight.trigger();
    }
}

function onMouseUp(e)
{
    if (e.which == 1)
    {
        mouseDownLeft.set(false);
        triggerMouseUpLeft.trigger();
    }
    else if (e.which == 2)
    {
        mouseDownMiddle.set(false);
        triggerMouseUpMiddle.trigger();
    }
    else if (e.which == 3)
    {
        mouseDownRight.set(false);
        triggerMouseUpRight.trigger();
    }
}

function onClickRight(e)
{
    mouseClickRight.trigger();
    e.preventDefault();
}

function onDoubleClick(e)
{
    mouseDoubleClick.trigger();
}

function onmouseclick(e)
{
    mouseClickLeft.trigger();
}

function ontouchstart(event)
{
    if (event.touches && event.touches.length > 0)
    {
        event.touches[0].which = 1;
        onMouseDown(event.touches[0]);
    }
}

function ontouchend(event)
{
    onMouseUp({ "which": 1 });
}

function removeListeners()
{
    if (!listenerElement) return;
    listenerElement.removeEventListener("touchend", ontouchend);
    listenerElement.removeEventListener("touchcancel", ontouchend);
    listenerElement.removeEventListener("touchstart", ontouchstart);
    listenerElement.removeEventListener("dblclick", onDoubleClick);
    listenerElement.removeEventListener("click", onmouseclick);
    listenerElement.removeEventListener("mousedown", onMouseDown);
    listenerElement.removeEventListener("mouseup", onMouseUp);
    listenerElement.removeEventListener("contextmenu", onClickRight);
    listenerElement.removeEventListener("mouseleave", onMouseUp);
    listenerElement = null;
}

function addListeners()
{
    if (listenerElement)removeListeners();

    listenerElement = cgl.canvas;
    if (area.get() == "Document") listenerElement = document.body;

    listenerElement.addEventListener("touchend", ontouchend);
    listenerElement.addEventListener("touchcancel", ontouchend);
    listenerElement.addEventListener("touchstart", ontouchstart);
    listenerElement.addEventListener("dblclick", onDoubleClick);
    listenerElement.addEventListener("click", onmouseclick);
    listenerElement.addEventListener("mousedown", onMouseDown);
    listenerElement.addEventListener("mouseup", onMouseUp);
    listenerElement.addEventListener("contextmenu", onClickRight);
    listenerElement.addEventListener("mouseleave", onMouseUp);
}

op.onLoaded = updateListeners;

active.onChange = updateListeners;

function updateListeners()
{
    removeListeners();
    if (active.get()) addListeners();
}


};

Ops.Devices.Mouse.MouseButtons.prototype = new CABLES.Op();
CABLES.OPS["c7e5e545-c8a1-4fef-85c2-45422b947f0d"]={f:Ops.Devices.Mouse.MouseButtons,objName:"Ops.Devices.Mouse.MouseButtons"};




// **************************************************************
// 
// Ops.Trigger.TriggerSendNamed
// 
// **************************************************************

Ops.Trigger.TriggerSendNamed = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const trigger = op.inTriggerButton("Trigger");
const varname = op.inString("Named Trigger", "");

trigger.onTriggered = doTrigger;

varname.onChange = () =>
{
    op.setUiAttrib({ "extendTitle": varname.get() });
};

function doTrigger()
{
    const arr = op.patch.namedTriggers[varname.get()];
    // fire an event even if noone is receiving this trigger
    // this way TriggerReceiveFilter can still handle it
    op.patch.emitEvent("namedTriggerSent", varname.get());

    if (!arr)
    {
        return;
    }

    for (let i = 0; i < arr.length; i++)
    {
        arr[i]();
    }
}


};

Ops.Trigger.TriggerSendNamed.prototype = new CABLES.Op();
CABLES.OPS["45d07cd7-bdfb-48b7-bc76-7606de5afd76"]={f:Ops.Trigger.TriggerSendNamed,objName:"Ops.Trigger.TriggerSendNamed"};




// **************************************************************
// 
// Ops.Trigger.TriggerReceiveFilter
// 
// **************************************************************

Ops.Trigger.TriggerReceiveFilter = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const prefixIn = op.inString("Prefix", "");
const triggerOut = op.outTrigger("Trigger Out");
const triggerNameOut = op.outString("Trigger Name");

const listener = (triggerName) =>
{
    const prefix = prefixIn.get();
    if (triggerName)
    {
        if (prefix)
        {
            if (triggerName.startsWith(prefix))
            {
                triggerNameOut.set(triggerName);
                triggerOut.trigger();
            }
        }
        else
        {
            triggerNameOut.set(triggerName);
            triggerOut.trigger();
        }
    }
};

prefixIn.onChange = () =>
{
    if (prefixIn.get())
    {
        op.setUiAttrib({ "extendTitle": prefixIn.get() });
    }
};

op.patch.addEventListener("namedTriggerSent", listener);


};

Ops.Trigger.TriggerReceiveFilter.prototype = new CABLES.Op();
CABLES.OPS["7bf9e19a-55a8-4eb4-aaeb-5a15a8d2f958"]={f:Ops.Trigger.TriggerReceiveFilter,objName:"Ops.Trigger.TriggerReceiveFilter"};




// **************************************************************
// 
// Ops.Trigger.TriggerSend
// 
// **************************************************************

Ops.Trigger.TriggerSend = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const trigger = op.inTriggerButton("Trigger");
op.varName = op.inValueSelect("Named Trigger", [], "", true);

op.varName.onChange = updateName;

trigger.onTriggered = doTrigger;

op.patch.addEventListener("namedTriggersChanged", updateVarNamesDropdown);

updateVarNamesDropdown();

function updateVarNamesDropdown()
{
    if (CABLES.UI)
    {
        const varnames = [];
        const vars = op.patch.namedTriggers;
        varnames.push("+ create new one");
        for (const i in vars) varnames.push(i);
        op.varName.uiAttribs.values = varnames;
    }
}

function updateName()
{
    if (CABLES.UI)
    {
        if (op.varName.get() == "+ create new one")
        {
            new CABLES.UI.ModalDialog({
                "prompt": true,
                "title": "New Trigger",
                "text": "Enter a name for the new trigger",
                "promptValue": "",
                "promptOk": (str) =>
                {
                    op.varName.set(str);
                    op.patch.namedTriggers[str] = op.patch.namedTriggers[str] || [];
                    updateVarNamesDropdown();
                }
            });
            return;
        }

        op.refreshParams();
    }

    if (!op.patch.namedTriggers[op.varName.get()])
    {
        op.patch.namedTriggers[op.varName.get()] = op.patch.namedTriggers[op.varName.get()] || [];
        op.patch.emitEvent("namedTriggersChanged");
    }

    op.setTitle(">" + op.varName.get());

    op.refreshParams();
    op.patch.emitEvent("opTriggerNameChanged", op, op.varName.get());
}

function doTrigger()
{
    const arr = op.patch.namedTriggers[op.varName.get()];
    // fire an event even if noone is receiving this trigger
    // this way TriggerReceiveFilter can still handle it
    op.patch.emitEvent("namedTriggerSent", op.varName.get());

    if (!arr)
    {
        op.setUiError("unknowntrigger", "unknown trigger");
        return;
    }
    else op.setUiError("unknowntrigger", null);

    for (let i = 0; i < arr.length; i++)
    {
        arr[i]();
    }
}


};

Ops.Trigger.TriggerSend.prototype = new CABLES.Op();
CABLES.OPS["ce1eaf2b-943b-4dc0-ab5e-ee11b63c9ed0"]={f:Ops.Trigger.TriggerSend,objName:"Ops.Trigger.TriggerSend"};




// **************************************************************
// 
// Ops.Trigger.TriggerReceive
// 
// **************************************************************

Ops.Trigger.TriggerReceive = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const next = op.outTrigger("Triggered");
op.varName = op.inValueSelect("Named Trigger", [], "", true);

updateVarNamesDropdown();
op.patch.addEventListener("namedTriggersChanged", updateVarNamesDropdown);

let oldName = null;

function doTrigger()
{
    next.trigger();
}

function updateVarNamesDropdown()
{
    if (CABLES.UI)
    {
        let varnames = [];
        let vars = op.patch.namedTriggers;
        // varnames.push('+ create new one');
        for (let i in vars) varnames.push(i);
        op.varName.uiAttribs.values = varnames;
    }
}

op.varName.onChange = function ()
{
    if (oldName)
    {
        let oldCbs = op.patch.namedTriggers[oldName];
        let a = oldCbs.indexOf(doTrigger);
        if (a != -1) oldCbs.splice(a, 1);
    }

    op.setTitle(">" + op.varName.get());
    op.patch.namedTriggers[op.varName.get()] = op.patch.namedTriggers[op.varName.get()] || [];
    let cbs = op.patch.namedTriggers[op.varName.get()];

    cbs.push(doTrigger);
    oldName = op.varName.get();
    updateError();
    op.patch.emitEvent("opTriggerNameChanged", op, op.varName.get());
};

op.on("uiParamPanel", updateError);

function updateError()
{
    if (!op.varName.get())
    {
        op.setUiError("unknowntrigger", "unknown trigger");
    }
    else op.setUiError("unknowntrigger", null);
}


};

Ops.Trigger.TriggerReceive.prototype = new CABLES.Op();
CABLES.OPS["0816c999-f2db-466b-9777-2814573574c5"]={f:Ops.Trigger.TriggerReceive,objName:"Ops.Trigger.TriggerReceive"};




// **************************************************************
// 
// Ops.Vars.VarGetNumber_v2
// 
// **************************************************************

Ops.Vars.VarGetNumber_v2 = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const val = op.outNumber("Value");
op.varName = op.inValueSelect("Variable", [], "", true);

new CABLES.VarGetOpWrapper(op, "number", op.varName, val);


};

Ops.Vars.VarGetNumber_v2.prototype = new CABLES.Op();
CABLES.OPS["421f5b52-c0fa-47c4-8b7a-012b9e1c864a"]={f:Ops.Vars.VarGetNumber_v2,objName:"Ops.Vars.VarGetNumber_v2"};




// **************************************************************
// 
// Ops.Vars.VarSetNumber_v2
// 
// **************************************************************

Ops.Vars.VarSetNumber_v2 = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const val = op.inValueFloat("Value", 0);
op.varName = op.inDropDown("Variable", [], "", true);

new CABLES.VarSetOpWrapper(op, "number", val, op.varName);


};

Ops.Vars.VarSetNumber_v2.prototype = new CABLES.Op();
CABLES.OPS["b5249226-6095-4828-8a1c-080654e192fa"]={f:Ops.Vars.VarSetNumber_v2,objName:"Ops.Vars.VarSetNumber_v2"};




// **************************************************************
// 
// Ops.Boolean.Or
// 
// **************************************************************

Ops.Boolean.Or = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    bool0 = op.inValueBool("bool 1"),
    bool1 = op.inValueBool("bool 2"),
    bool2 = op.inValueBool("bool 3"),
    bool3 = op.inValueBool("bool 4"),
    bool4 = op.inValueBool("bool 5"),
    bool5 = op.inValueBool("bool 6"),
    bool6 = op.inValueBool("bool 7"),
    bool7 = op.inValueBool("bool 8"),
    bool8 = op.inValueBool("bool 9"),
    bool9 = op.inValueBool("bool 10"),
    result = op.outBoolNum("result");

bool0.onChange =
    bool1.onChange =
    bool2.onChange =
    bool3.onChange =
    bool4.onChange =
    bool5.onChange =
    bool6.onChange =
    bool7.onChange =
    bool8.onChange =
    bool9.onChange = exec;

function exec()
{
    result.set(bool0.get() || bool1.get() || bool2.get() || bool3.get() || bool4.get() || bool5.get() || bool6.get() || bool7.get() || bool8.get() || bool9.get());
}


};

Ops.Boolean.Or.prototype = new CABLES.Op();
CABLES.OPS["b3b36238-4592-4e11-afe3-8361c4fd6be5"]={f:Ops.Boolean.Or,objName:"Ops.Boolean.Or"};




// **************************************************************
// 
// Ops.Boolean.Not
// 
// **************************************************************

Ops.Boolean.Not = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    bool = op.inValueBool("Boolean"),
    outbool = op.outBoolNum("Result");

bool.changeAlways = true;

bool.onChange = function ()
{
    outbool.set((!bool.get()));
};


};

Ops.Boolean.Not.prototype = new CABLES.Op();
CABLES.OPS["6d123c9f-7485-4fd9-a5c2-76e59dcbeb34"]={f:Ops.Boolean.Not,objName:"Ops.Boolean.Not"};




// **************************************************************
// 
// Ops.Number.PreviousNumberStore
// 
// **************************************************************

Ops.Number.PreviousNumberStore = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    val = op.inValueFloat("Value"),
    outCurrent = op.outNumber("Current Value"),
    outOldVal = op.outNumber("Previous Value");

let oldValue = 0;

val.onChange = function ()
{
    outOldVal.set(oldValue);
    oldValue = val.get();
    outCurrent.set(val.get());
};


};

Ops.Number.PreviousNumberStore.prototype = new CABLES.Op();
CABLES.OPS["01716872-67bd-4b31-a4a2-e0ccadf48411"]={f:Ops.Number.PreviousNumberStore,objName:"Ops.Number.PreviousNumberStore"};




// **************************************************************
// 
// Ops.Anim.InOutInAnim
// 
// **************************************************************

Ops.Anim.InOutInAnim = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const anim = new CABLES.Anim();

const
    update = op.inTrigger("Update"),
    duration1 = op.inValue("Duration Out", 0.25),
    easing1 = anim.createPort(op, "Easing Out"),
    value1 = op.inValue("Value Out", 0),
    holdDuration = op.inValue("Hold duration", 0.0),
    duration2 = op.inValue("Duration In", 0.25),
    easing2 = anim.createPort(op, "Easing In"),
    value2 = op.inValue("Value In", 1),
    trigger = op.inTriggerButton("Start"),
    next = op.outTrigger("Next"),
    outVal = op.outNumber("Result", 0),
    started = op.outTrigger("Started"),
    middle = op.outTrigger("Middle"),
    finished = op.outTrigger("finished");

let time = 0;
trigger.onTriggered = setupAnim;

update.onTriggered = function ()
{
    time = CABLES.now() / 1000.0;
    if (anim.isStarted(time)) outVal.set(anim.getValue(time));
    else outVal.set(value2.get());

    next.trigger();
};

value2.onChange = function ()
{
    outVal.set(value2.get());
};

function setupAnim()
{
    anim.clear();
    // start
    anim.setValue(time, value2.get(), function ()
    {
        started.trigger();
    });
    // attack
    anim.setValue(time +
                        duration1.get(), value1.get(), function ()
    {

    });
    // Hold
    anim.setValue(time +
                        duration1.get() + holdDuration.get(), value1.get(), function ()
    {
        middle.trigger();
    });
    // release
    anim.setValue(time +
                        duration1.get() +
                        duration2.get() + holdDuration.get(), value2.get(), function ()
    {
        finished.trigger();
    });

    anim.keys[0].setEasing(
        anim.easingFromString(easing1.get()));

    anim.keys[2].setEasing(
        anim.easingFromString(easing2.get()));
}


};

Ops.Anim.InOutInAnim.prototype = new CABLES.Op();
CABLES.OPS["ae46d30d-9ea6-417b-968b-e7b5726afdde"]={f:Ops.Anim.InOutInAnim,objName:"Ops.Anim.InOutInAnim"};




// **************************************************************
// 
// Ops.Devices.Mouse.MouseDrag
// 
// **************************************************************

Ops.Devices.Mouse.MouseDrag = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    active = op.inValueBool("Active", true),
    speed = op.inValue("Speed", 0.01),
    inputType = op.inSwitch("Input Type", ["All", "Mouse", "Touch"], "All"),
    area = op.inSwitch("Area", ["Canvas Area", "Canvas", "Document"], "Canvas Area"),
    outDeltaX = op.outNumber("Delta X"),
    outDeltaY = op.outNumber("Delta Y"),
    outDragging = op.outNumber("Is Dragging");

let listenerElement = null;
let sizeElement = null;
const absoluteX = 0;
const absoluteY = 0;
let pressed = false;
let lastX = 0;
let lastY = 0;
let firstMove = true;

inputType.onChange =
area.onChange = updateArea;

updateArea();

function isHovering(e)
{
    if (area.get() === "Canvas Area")
    {
        const r = sizeElement.getBoundingClientRect();

        return (
            e.clientX > r.left &&
            e.clientX < r.left + r.width &&
            e.clientY > r.top &&
            e.clientY < r.top + r.height
        );
    }
    return true;
}

function onMouseMove(e)
{
    if (e.touches) e = e.touches[0];

    if (pressed && e && isHovering(e))
    {
        if (!firstMove)
        {
            outDragging.set(true);
            const deltaX = (e.clientX - lastX) * speed.get();
            const deltaY = (e.clientY - lastY) * speed.get();

            outDeltaX.set(0);
            outDeltaY.set(0);
            outDeltaX.set(deltaX);
            outDeltaY.set(deltaY);
        }

        firstMove = false;

        lastX = e.clientX;
        lastY = e.clientY;
    }
}

function onMouseDown(e)
{
    try { listenerElement.setPointerCapture(e.pointerId); }
    catch (_e) {}

    pressed = true;
}

function onMouseUp(e)
{
    try { listenerElement.releasePointerCapture(e.pointerId); }
    catch (e) {}

    pressed = false;
    outDragging.set(false);
    lastX = 0;
    lastY = 0;
    firstMove = true;
}

function updateArea()
{
    removeListener();

    if (area.get() == "Canvas Area")
    {
        listenerElement = document;
        sizeElement = op.patch.cgl.canvas;
    }
    else if (area.get() == "Document") listenerElement = sizeElement = document;
    else listenerElement = sizeElement = op.patch.cgl.canvas;

    if (active.get())addListener();
}

function addListener()
{
    if (!listenerElement)updateArea();

    if (inputType.get() == "All" || inputType.get() == "Mouse")
    {
        listenerElement.addEventListener("mousemove", onMouseMove);
        listenerElement.addEventListener("mousedown", onMouseDown);
        listenerElement.addEventListener("mouseup", onMouseUp);
        listenerElement.addEventListener("mouseenter", onMouseUp);
        listenerElement.addEventListener("mouseleave", onMouseUp);
    }

    if (inputType.get() == "All" || inputType.get() == "Touch")
    {
        listenerElement.addEventListener("touchmove", onMouseMove);
        listenerElement.addEventListener("touchend", onMouseUp);
        listenerElement.addEventListener("touchstart", onMouseDown);
    }
}

function removeListener()
{
    if (!listenerElement) return;
    listenerElement.removeEventListener("mousemove", onMouseMove);
    listenerElement.removeEventListener("mousedown", onMouseDown);
    listenerElement.removeEventListener("mouseup", onMouseUp);
    listenerElement.removeEventListener("mouseenter", onMouseUp);
    listenerElement.removeEventListener("mouseleave", onMouseUp);

    listenerElement.removeEventListener("touchmove", onMouseMove);
    listenerElement.removeEventListener("touchend", onMouseUp);
    listenerElement.removeEventListener("touchstart", onMouseDown);
}

active.onChange = function ()
{
    if (active.get())addListener();
    else removeListener();
};

op.onDelete = function ()
{
    removeListener();
};


};

Ops.Devices.Mouse.MouseDrag.prototype = new CABLES.Op();
CABLES.OPS["5103d14e-2f21-4f43-ae91-c1b55a944226"]={f:Ops.Devices.Mouse.MouseDrag,objName:"Ops.Devices.Mouse.MouseDrag"};




// **************************************************************
// 
// Ops.Math.DeltaSum
// 
// **************************************************************

Ops.Math.DeltaSum = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    inVal = op.inValue("Delta Value"),
    defVal = op.inValue("Default Value", 0),
    inMul = op.inValue("Multiply", 1),
    inReset = op.inTriggerButton("Reset"),
    inLimit = op.inValueBool("Limit", false),
    inMin = op.inValue("Min", 0),
    inMax = op.inValue("Max", 100),
    inRubber = op.inValue("Rubberband", 0),
    outVal = op.outNumber("Absolute Value");

inVal.changeAlways = true;

op.setPortGroup("Limit", [inLimit, inMin, inMax, inRubber]);

let value = 0;
let lastEvent = CABLES.now();
let rubTimeout = null;

inLimit.onChange = updateLimit;
defVal.onChange =
    inReset.onTriggered = resetValue;

inMax.onChange =
    inMin.onChange = updateValue;

updateLimit();

function resetValue()
{
    let v = defVal.get();

    if (inLimit.get())
    {
        v = Math.max(inMin.get(), v);
        v = Math.min(inMax.get(), v);
    }

    value = v;
    outVal.set(value);
}

function updateLimit()
{
    inMin.setUiAttribs({ "greyout": !inLimit.get() });
    inMax.setUiAttribs({ "greyout": !inLimit.get() });
    inRubber.setUiAttribs({ "greyout": !inLimit.get() });

    updateValue();
}

function releaseRubberband()
{
    const min = inMin.get();
    const max = inMax.get();

    if (value < min) value = min;
    if (value > max) value = max;

    outVal.set(value);
}

function updateValue()
{
    if (inLimit.get())
    {
        const min = inMin.get();
        const max = inMax.get();
        const rubber = inRubber.get();
        const minr = inMin.get() - rubber;
        const maxr = inMax.get() + rubber;

        if (value < minr) value = minr;
        if (value > maxr) value = maxr;

        if (rubber !== 0.0)
        {
            clearTimeout(rubTimeout);
            rubTimeout = setTimeout(releaseRubberband.bind(this), 300);
        }
    }

    outVal.set(value);
}

inVal.onChange = function ()
{
    let v = inVal.get();

    const rubber = inRubber.get();

    if (rubber !== 0.0)
    {
        const min = inMin.get();
        const max = inMax.get();
        const minr = inMin.get() - rubber;
        const maxr = inMax.get() + rubber;

        if (value < min)
        {
            const aa = Math.abs(value - minr) / rubber;
            v *= (aa * aa);
        }
        if (value > max)
        {
            const aa = Math.abs(maxr - value) / rubber;
            v *= (aa * aa);
        }
    }

    lastEvent = CABLES.now();
    value += v * inMul.get();
    updateValue();
};


};

Ops.Math.DeltaSum.prototype = new CABLES.Op();
CABLES.OPS["d9d4b3db-c24b-48da-b798-9e6230d861f7"]={f:Ops.Math.DeltaSum,objName:"Ops.Math.DeltaSum"};




// **************************************************************
// 
// Ops.Boolean.TriggerChangedFalse
// 
// **************************************************************

Ops.Boolean.TriggerChangedFalse = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
let val = op.inValueBool("Value", false);
let next = op.outTrigger("Next");

let oldVal = 0;

val.onChange = function ()
{
    let newVal = val.get();
    if (oldVal && !newVal)
    {
        oldVal = false;
        next.trigger();
    }
    else
    {
        oldVal = true;
    }
};


};

Ops.Boolean.TriggerChangedFalse.prototype = new CABLES.Op();
CABLES.OPS["6387bcb0-6091-4199-8ab7-f96ad4aa3c7d"]={f:Ops.Boolean.TriggerChangedFalse,objName:"Ops.Boolean.TriggerChangedFalse"};




// **************************************************************
// 
// Ops.Gl.Matrix.OrbitControls
// 
// **************************************************************

Ops.Gl.Matrix.OrbitControls = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    render = op.inTrigger("render"),
    minDist = op.inValueFloat("min distance"),
    maxDist = op.inValueFloat("max distance"),

    minRotY = op.inValue("min rot y", 0),
    maxRotY = op.inValue("max rot y", 0),

    initialRadius = op.inValue("initial radius", 0),
    initialAxis = op.inValueSlider("initial axis y"),
    initialX = op.inValueSlider("initial axis x"),

    mul = op.inValueFloat("mul"),
    smoothness = op.inValueSlider("Smoothness", 1.0),
    speedX = op.inValue("Speed X", 1),
    speedY = op.inValue("Speed Y", 1),

    active = op.inValueBool("Active", true),

    allowPanning = op.inValueBool("Allow Panning", true),
    allowZooming = op.inValueBool("Allow Zooming", true),
    allowRotation = op.inValueBool("Allow Rotation", true),
    restricted = op.inValueBool("restricted", true),

    trigger = op.outTrigger("trigger"),
    outRadius = op.outNumber("radius"),
    outXDeg = op.outNumber("Rot X"),
    outYDeg = op.outNumber("Rot Y"),

    inReset = op.inTriggerButton("Reset");

op.setPortGroup("Initial Values", [initialAxis, initialX, initialRadius]);
op.setPortGroup("Interaction", [mul, smoothness, speedX, speedY]);
op.setPortGroup("Boundaries", [minRotY, maxRotY, minDist, maxDist]);

mul.set(1);
minDist.set(0.05);
maxDist.set(99999);

inReset.onTriggered = reset;

let eye = vec3.create();
const vUp = vec3.create();
const vCenter = vec3.create();
const viewMatrix = mat4.create();
const tempViewMatrix = mat4.create();
const vOffset = vec3.create();
const finalEyeAbs = vec3.create();

initialAxis.set(0.5);

let mouseDown = false;
let radius = 5;
outRadius.set(radius);

let lastMouseX = 0, lastMouseY = 0;
let percX = 0, percY = 0;

vec3.set(vCenter, 0, 0, 0);
vec3.set(vUp, 0, 1, 0);

const tempEye = vec3.create();
const finalEye = vec3.create();
const tempCenter = vec3.create();
const finalCenter = vec3.create();

let px = 0;
let py = 0;

let divisor = 1;
let element = null;
updateSmoothness();

op.onDelete = unbind;

const halfCircle = Math.PI;
const fullCircle = Math.PI * 2;

function reset()
{
    let off = 0;

    if (px % fullCircle < -halfCircle)
    {
        off = -fullCircle;
        px %= -fullCircle;
    }
    else
    if (px % fullCircle > halfCircle)
    {
        off = fullCircle;
        px %= fullCircle;
    }
    else px %= fullCircle;

    py %= (Math.PI);

    vec3.set(vOffset, 0, 0, 0);
    vec3.set(vCenter, 0, 0, 0);
    vec3.set(vUp, 0, 1, 0);

    percX = (initialX.get() * Math.PI * 2 + off);
    percY = (initialAxis.get() - 0.5);

    radius = initialRadius.get();
    eye = circlePos(percY);
}

function updateSmoothness()
{
    divisor = smoothness.get() * 10 + 1.0;
}

smoothness.onChange = updateSmoothness;

let initializing = true;

function ip(val, goal)
{
    if (initializing) return goal;
    return val + (goal - val) / divisor;
}

let lastPy = 0;
const lastPx = 0;

render.onTriggered = function ()
{
    const cgl = op.patch.cg;

    if (!element)
    {
        setElement(cgl.canvas);
        bind();
    }

    cgl.pushViewMatrix();

    px = ip(px, percX);
    py = ip(py, percY);

    let degY = (py + 0.5) * 180;

    if (minRotY.get() !== 0 && degY < minRotY.get())
    {
        degY = minRotY.get();
        py = lastPy;
    }
    else if (maxRotY.get() !== 0 && degY > maxRotY.get())
    {
        degY = maxRotY.get();
        py = lastPy;
    }
    else
    {
        lastPy = py;
    }

    const degX = (px) * CGL.RAD2DEG;

    outYDeg.set(degY);
    outXDeg.set(degX);

    circlePosi(eye, py);

    vec3.add(tempEye, eye, vOffset);
    vec3.add(tempCenter, vCenter, vOffset);

    finalEye[0] = ip(finalEye[0], tempEye[0]);
    finalEye[1] = ip(finalEye[1], tempEye[1]);
    finalEye[2] = ip(finalEye[2], tempEye[2]);

    finalCenter[0] = ip(finalCenter[0], tempCenter[0]);
    finalCenter[1] = ip(finalCenter[1], tempCenter[1]);
    finalCenter[2] = ip(finalCenter[2], tempCenter[2]);

    const empty = vec3.create();

    mat4.lookAt(viewMatrix, finalEye, finalCenter, vUp);
    mat4.rotate(viewMatrix, viewMatrix, px, vUp);

    // finaly multiply current scene viewmatrix
    mat4.multiply(cgl.vMatrix, cgl.vMatrix, viewMatrix);

    trigger.trigger();
    cgl.popViewMatrix();
    initializing = false;
};

function circlePosi(vec, perc)
{
    const mmul = mul.get();
    if (radius < minDist.get() * mmul) radius = minDist.get() * mmul;
    if (radius > maxDist.get() * mmul) radius = maxDist.get() * mmul;

    outRadius.set(radius * mmul);

    let i = 0, degInRad = 0;

    degInRad = 360 * perc / 2 * CGL.DEG2RAD;
    vec3.set(vec,
        Math.cos(degInRad) * radius * mmul,
        Math.sin(degInRad) * radius * mmul,
        0);
    return vec;
}

function circlePos(perc)
{
    const mmul = mul.get();
    if (radius < minDist.get() * mmul)radius = minDist.get() * mmul;
    if (radius > maxDist.get() * mmul)radius = maxDist.get() * mmul;

    outRadius.set(radius * mmul);

    let i = 0, degInRad = 0;
    const vec = vec3.create();
    degInRad = 360 * perc / 2 * CGL.DEG2RAD;
    vec3.set(vec,
        Math.cos(degInRad) * radius * mmul,
        Math.sin(degInRad) * radius * mmul,
        0);
    return vec;
}

function onmousemove(event)
{
    if (!mouseDown) return;

    const x = event.clientX;
    const y = event.clientY;

    let movementX = (x - lastMouseX);
    let movementY = (y - lastMouseY);

    movementX *= speedX.get();
    movementY *= speedY.get();

    if (event.buttons == 2 && allowPanning.get())
    {
        vOffset[2] += movementX * 0.01 * mul.get();
        vOffset[1] += movementY * 0.01 * mul.get();
    }
    else
    if (event.buttons == 4 && allowZooming.get())
    {
        radius += movementY * 0.05;
        eye = circlePos(percY);
    }
    else
    {
        if (allowRotation.get())
        {
            percX += movementX * 0.003;
            percY += movementY * 0.002;

            if (restricted.get())
            {
                if (percY > 0.5)percY = 0.5;
                if (percY < -0.5)percY = -0.5;
            }
        }
    }

    lastMouseX = x;
    lastMouseY = y;
}

function onMouseDown(event)
{
    lastMouseX = event.clientX;
    lastMouseY = event.clientY;
    mouseDown = true;

    try { element.setPointerCapture(event.pointerId); }
    catch (e) {}
}

function onMouseUp(e)
{
    mouseDown = false;
    // cgl.canvas.style.cursor='url(/ui/img/rotate.png),pointer';

    try { element.releasePointerCapture(e.pointerId); }
    catch (e) {}
}

function lockChange()
{
    const el = op.patch.cg.canvas;

    if (document.pointerLockElement === el || document.mozPointerLockElement === el || document.webkitPointerLockElement === el)
    {
        document.addEventListener("mousemove", onmousemove, false);
    }
}

function onMouseEnter(e)
{
    // cgl.canvas.style.cursor='url(/ui/img/rotate.png),pointer';
}

initialRadius.onChange = function ()
{
    radius = initialRadius.get();
    reset();
};

initialX.onChange = function ()
{
    px = percX = (initialX.get() * Math.PI * 2);
};

initialAxis.onChange = function ()
{
    py = percY = (initialAxis.get() - 0.5);
    eye = circlePos(percY);
};

const onMouseWheel = function (event)
{
    if (allowZooming.get())
    {
        const delta = CGL.getWheelSpeed(event) * 0.06;
        radius += (parseFloat(delta)) * 1.2;

        eye = circlePos(percY);
    }
};

const ontouchstart = function (event)
{
    if (event.touches && event.touches.length > 0) onMouseDown(event.touches[0]);
};

const ontouchend = function (event)
{
    onMouseUp();
};

const ontouchmove = function (event)
{
    if (event.touches && event.touches.length > 0) onmousemove(event.touches[0]);
};

active.onChange = function ()
{
    if (active.get())bind();
    else unbind();
};

function setElement(ele)
{
    unbind();
    element = ele;
    bind();
}

function bind()
{
    if (!element) return;

    element.addEventListener("pointermove", onmousemove);
    element.addEventListener("pointerdown", onMouseDown);
    element.addEventListener("pointerup", onMouseUp);
    element.addEventListener("pointerleave", onMouseUp);
    element.addEventListener("pointerenter", onMouseEnter);
    element.addEventListener("contextmenu", function (e) { e.preventDefault(); });
    element.addEventListener("wheel", onMouseWheel, { "passive": true });
}

function unbind()
{
    if (!element) return;

    element.removeEventListener("pointermove", onmousemove);
    element.removeEventListener("pointerdown", onMouseDown);
    element.removeEventListener("pointerup", onMouseUp);
    element.removeEventListener("pointerleave", onMouseUp);
    element.removeEventListener("pointerenter", onMouseUp);
    element.removeEventListener("wheel", onMouseWheel);
}

eye = circlePos(0);

initialX.set(0.25);
initialRadius.set(0.05);


};

Ops.Gl.Matrix.OrbitControls.prototype = new CABLES.Op();
CABLES.OPS["eaf4f7ce-08a3-4d1b-b9f4-ebc0b7b1cde1"]={f:Ops.Gl.Matrix.OrbitControls,objName:"Ops.Gl.Matrix.OrbitControls"};




// **************************************************************
// 
// Ops.Gl.Meshes.TextMesh_v2
// 
// **************************************************************

Ops.Gl.Meshes.TextMesh_v2 = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={"textmesh_frag":"UNI sampler2D tex;\n#ifdef DO_MULTEX\n    UNI sampler2D texMul;\n#endif\n#ifdef DO_MULTEX_MASK\n    UNI sampler2D texMulMask;\n#endif\nIN vec2 texCoord;\nIN vec2 texPos;\nUNI float r;\nUNI float g;\nUNI float b;\nUNI float a;\n\nvoid main()\n{\n    vec4 col=texture(tex,texCoord);\n    col.a=col.r;\n    col.r*=r;\n    col.g*=g;\n    col.b*=b;\n    col*=a;\n\n    if(col.a==0.0)discard;\n\n    #ifdef DO_MULTEX\n        col*=texture(texMul,texPos);\n    #endif\n\n    #ifdef DO_MULTEX_MASK\n        col*=texture(texMulMask,texPos).r;\n    #endif\n\n    outColor=col;\n}","textmesh_vert":"UNI sampler2D tex;\nUNI mat4 projMatrix;\nUNI mat4 modelMatrix;\nUNI mat4 viewMatrix;\nUNI float scale;\nIN vec3 vPosition;\nIN vec2 attrTexCoord;\nIN mat4 instMat;\nIN vec2 attrTexOffsets;\nIN vec2 attrTexSize;\nIN vec2 attrTexPos;\nOUT vec2 texPos;\n\nOUT vec2 texCoord;\n\nvoid main()\n{\n    texCoord=(attrTexCoord*(attrTexSize)) + attrTexOffsets;\n    mat4 instMVMat=instMat;\n    instMVMat[3][0]*=scale;\n\n    texPos=attrTexPos;\n\n    vec4 vert=vec4( vPosition.x*(attrTexSize.x/attrTexSize.y)*scale,vPosition.y*scale,vPosition.z*scale, 1. );\n\n    mat4 mvMatrix=viewMatrix * modelMatrix * instMVMat;\n\n    gl_Position = projMatrix * mvMatrix * vert;\n}\n",};
const
    render = op.inTrigger("Render"),
    str = op.inString("Text", "cables"),
    scale = op.inValueFloat("Scale", 1),
    inFont = op.inString("Font", "Arial"),
    align = op.inValueSelect("align", ["left", "center", "right"], "center"),
    valign = op.inValueSelect("vertical align", ["Top", "Middle", "Bottom"], "Middle"),
    lineHeight = op.inValueFloat("Line Height", 1),
    letterSpace = op.inValueFloat("Letter Spacing"),

    tfilter = op.inSwitch("filter", ["nearest", "linear", "mipmap"], "mipmap"),
    aniso = op.inSwitch("Anisotropic", [0, 1, 2, 4, 8, 16], 0),

    inMulTex = op.inTexture("Texture Color"),
    inMulTexMask = op.inTexture("Texture Mask"),
    next = op.outTrigger("Next"),
    textureOut = op.outTexture("texture"),
    outLines = op.outNumber("Total Lines", 0),
    outWidth = op.outNumber("Width", 0),
    loaded = op.outBoolNum("Font Available", 0);

const cgl = op.patch.cgl;

op.toWorkPortsNeedToBeLinked(render);

op.setPortGroup("Masking", [inMulTex, inMulTexMask]);

const textureSize = 1024;
let fontLoaded = false;
let needUpdate = true;

align.onChange =
    str.onChange =
    lineHeight.onChange = generateMeshLater;

function generateMeshLater()
{
    needUpdate = true;
}

let canvasid = null;
CABLES.OpTextureMeshCanvas = {};
let valignMode = 0;

const geom = null;
let mesh = null;

let createMesh = true;
let createTexture = true;

aniso.onChange =
tfilter.onChange = () =>
{
    getFont().texture = null;
    createTexture = true;
};

inMulTexMask.onChange =
inMulTex.onChange = function ()
{
    shader.toggleDefine("DO_MULTEX", inMulTex.get());
    shader.toggleDefine("DO_MULTEX_MASK", inMulTexMask.get());
};

textureOut.set(null);
inFont.onChange = function ()
{
    createTexture = true;
    createMesh = true;
    checkFont();
};

op.patch.on("fontLoaded", (fontName) =>
{
    if (fontName == inFont.get())
    {
        createTexture = true;
        createMesh = true;
    }
});

function checkFont()
{
    const oldFontLoaded = fontLoaded;
    try
    {
        fontLoaded = document.fonts.check("20px \"" + inFont.get() + "\"");
    }
    catch (ex)
    {
        op.logError(ex);
    }

    if (!oldFontLoaded && fontLoaded)
    {
        loaded.set(true);
        createTexture = true;
        createMesh = true;
    }

    if (!fontLoaded) setTimeout(checkFont, 250);
}

valign.onChange = function ()
{
    if (valign.get() == "Middle")valignMode = 0;
    else if (valign.get() == "Top")valignMode = 1;
    else if (valign.get() == "Bottom")valignMode = 2;
};

function getFont()
{
    canvasid = "" + inFont.get();
    if (CABLES.OpTextureMeshCanvas.hasOwnProperty(canvasid))
        return CABLES.OpTextureMeshCanvas[canvasid];

    const fontImage = document.createElement("canvas");
    fontImage.dataset.font = inFont.get();
    fontImage.id = "texturetext_" + CABLES.generateUUID();
    fontImage.style.display = "none";
    const body = document.getElementsByTagName("body")[0];
    body.appendChild(fontImage);
    const _ctx = fontImage.getContext("2d");
    CABLES.OpTextureMeshCanvas[canvasid] =
        {
            "ctx": _ctx,
            "canvas": fontImage,
            "chars": {},
            "characters": "",
            "fontSize": 320
        };
    return CABLES.OpTextureMeshCanvas[canvasid];
}

op.onDelete = function ()
{
    if (canvasid && CABLES.OpTextureMeshCanvas[canvasid])
        CABLES.OpTextureMeshCanvas[canvasid].canvas.remove();
};

const shader = new CGL.Shader(cgl, "TextMesh");
shader.setSource(attachments.textmesh_vert, attachments.textmesh_frag);
const uniTex = new CGL.Uniform(shader, "t", "tex", 0);
const uniTexMul = new CGL.Uniform(shader, "t", "texMul", 1);
const uniTexMulMask = new CGL.Uniform(shader, "t", "texMulMask", 2);
const uniScale = new CGL.Uniform(shader, "f", "scale", scale);

const
    r = op.inValueSlider("r", 1),
    g = op.inValueSlider("g", 1),
    b = op.inValueSlider("b", 1),
    a = op.inValueSlider("a", 1),
    runiform = new CGL.Uniform(shader, "f", "r", r),
    guniform = new CGL.Uniform(shader, "f", "g", g),
    buniform = new CGL.Uniform(shader, "f", "b", b),
    auniform = new CGL.Uniform(shader, "f", "a", a);
r.setUiAttribs({ "colorPick": true });

op.setPortGroup("Display", [scale, inFont]);
op.setPortGroup("Alignment", [align, valign]);
op.setPortGroup("Color", [r, g, b, a]);

let height = 0;
const vec = vec3.create();
let lastTextureChange = -1;
let disabled = false;

render.onTriggered = function ()
{
    if (needUpdate)
    {
        generateMesh();
        needUpdate = false;
    }
    const font = getFont();
    if (font.lastChange != lastTextureChange)
    {
        createMesh = true;
        lastTextureChange = font.lastChange;
    }

    if (createTexture) generateTexture();
    if (createMesh)generateMesh();

    if (mesh && mesh.numInstances > 0)
    {
        cgl.pushBlendMode(CGL.BLEND_NORMAL, true);
        cgl.pushShader(shader);
        cgl.setTexture(0, textureOut.get().tex);

        const mulTex = inMulTex.get();
        if (mulTex)cgl.setTexture(1, mulTex.tex);

        const mulTexMask = inMulTexMask.get();
        if (mulTexMask)cgl.setTexture(2, mulTexMask.tex);

        if (valignMode === 2) vec3.set(vec, 0, height, 0);
        else if (valignMode === 1) vec3.set(vec, 0, 0, 0);
        else if (valignMode === 0) vec3.set(vec, 0, height / 2, 0);

        vec[1] -= lineHeight.get();
        cgl.pushModelMatrix();
        mat4.translate(cgl.mMatrix, cgl.mMatrix, vec);
        if (!disabled)mesh.render(cgl.getShader());

        cgl.popModelMatrix();

        cgl.setTexture(0, null);
        cgl.popShader();
        cgl.popBlendMode();
    }

    next.trigger();
};

letterSpace.onChange = function ()
{
    createMesh = true;
};

function generateMesh()
{
    const theString = String(str.get() + "");
    if (!textureOut.get()) return;

    const font = getFont();
    if (!font.geom)
    {
        font.geom = new CGL.Geometry("textmesh");

        font.geom.vertices = [
            1.0, 1.0, 0.0,
            0.0, 1.0, 0.0,
            1.0, 0.0, 0.0,
            0.0, 0.0, 0.0
        ];

        font.geom.texCoords = new Float32Array([
            1.0, 1.0,
            0.0, 1.0,
            1.0, 0.0,
            0.0, 0.0
        ]);

        font.geom.verticesIndices = [
            0, 1, 2,
            2, 1, 3
        ];
    }

    if (!mesh)mesh = new CGL.Mesh(cgl, font.geom);

    const strings = (theString).split("\n");
    outLines.set(strings.length);

    const transformations = [];
    const tcOffsets = [];// new Float32Array(str.get().length*2);
    const tcSize = [];// new Float32Array(str.get().length*2);
    const texPos = [];
    let charCounter = 0;
    createTexture = false;
    const m = mat4.create();

    let maxWidth = 0;

    for (let s = 0; s < strings.length; s++)
    {
        const txt = strings[s];
        const numChars = txt.length;

        let pos = 0;
        let offX = 0;
        let width = 0;

        for (let i = 0; i < numChars; i++)
        {
            const chStr = txt.substring(i, i + 1);
            const char = font.chars[String(chStr)];
            if (char)
            {
                width += (char.texCoordWidth / char.texCoordHeight);
                width += letterSpace.get();
            }
        }

        width -= letterSpace.get();

        height = 0;

        if (align.get() == "left") offX = 0;
        else if (align.get() == "right") offX = width;
        else if (align.get() == "center") offX = width / 2;

        height = (s + 1) * lineHeight.get();

        for (let i = 0; i < numChars; i++)
        {
            const chStr = txt.substring(i, i + 1);
            const char = font.chars[String(chStr)];

            if (!char)
            {
                createTexture = true;
                return;
            }
            else
            {
                texPos.push(pos / width * 0.99 + 0.005, (1.0 - (s / (strings.length - 1))) * 0.99 + 0.005);
                tcOffsets.push(char.texCoordX, 1 - char.texCoordY - char.texCoordHeight);
                tcSize.push(char.texCoordWidth, char.texCoordHeight);

                mat4.identity(m);
                mat4.translate(m, m, [pos - offX, 0 - s * lineHeight.get(), 0]);

                pos += (char.texCoordWidth / char.texCoordHeight) + letterSpace.get();
                maxWidth = Math.max(maxWidth, pos - offX);

                transformations.push(Array.prototype.slice.call(m));

                charCounter++;
            }
        }
    }

    const transMats = [].concat.apply([], transformations);

    disabled = false;
    if (transMats.length == 0)disabled = true;

    mesh.numInstances = transMats.length / 16;

    if (mesh.numInstances == 0)
    {
        disabled = true;
        return;
    }

    outWidth.set(maxWidth * scale.get());
    mesh.setAttribute("instMat", new Float32Array(transMats), 16, { "instanced": true });
    mesh.setAttribute("attrTexOffsets", new Float32Array(tcOffsets), 2, { "instanced": true });
    mesh.setAttribute("attrTexSize", new Float32Array(tcSize), 2, { "instanced": true });
    mesh.setAttribute("attrTexPos", new Float32Array(texPos), 2, { "instanced": true });

    createMesh = false;

    if (createTexture) generateTexture();
}

function printChars(fontSize, simulate)
{
    const font = getFont();
    if (!simulate) font.chars = {};

    const ctx = font.ctx;

    ctx.font = fontSize + "px " + inFont.get();
    ctx.textAlign = "left";

    let posy = 0;
    let posx = 0;
    const lineHeight = fontSize * 1.4;
    const result =
        {
            "fits": true
        };

    for (let i = 0; i < font.characters.length; i++)
    {
        const chStr = String(font.characters.substring(i, i + 1));
        const chWidth = (ctx.measureText(chStr).width);

        if (posx + chWidth >= textureSize)
        {
            posy += lineHeight + 2;
            posx = 0;
        }

        if (!simulate)
        {
            font.chars[chStr] =
                {
                    "str": chStr,
                    "texCoordX": posx / textureSize,
                    "texCoordY": posy / textureSize,
                    "texCoordWidth": chWidth / textureSize,
                    "texCoordHeight": lineHeight / textureSize,
                };

            ctx.fillText(chStr, posx, posy + fontSize);
        }

        posx += chWidth + 12;
    }

    if (posy > textureSize - lineHeight)
    {
        result.fits = false;
    }

    result.spaceLeft = textureSize - posy;

    return result;
}

function generateTexture()
{
    let filter = CGL.Texture.FILTER_LINEAR;
    if (tfilter.get() == "nearest") filter = CGL.Texture.FILTER_NEAREST;
    if (tfilter.get() == "mipmap") filter = CGL.Texture.FILTER_MIPMAP;

    const font = getFont();
    let string = String(str.get());
    if (string == null || string == undefined)string = "";
    for (let i = 0; i < string.length; i++)
    {
        const ch = string.substring(i, i + 1);
        if (font.characters.indexOf(ch) == -1)
        {
            font.characters += ch;
            createTexture = true;
        }
    }

    const ctx = font.ctx;
    font.canvas.width = font.canvas.height = textureSize;

    if (!font.texture)
        font.texture = CGL.Texture.createFromImage(cgl, font.canvas,
            {
                "filter": filter,
                "anisotropic": parseFloat(aniso.get())
            });

    font.texture.setSize(textureSize, textureSize);

    ctx.fillStyle = "transparent";
    ctx.clearRect(0, 0, textureSize, textureSize);
    ctx.fillStyle = "rgba(255,255,255,255)";

    let fontSize = font.fontSize + 40;
    let simu = printChars(fontSize, true);

    while (!simu.fits)
    {
        fontSize -= 5;
        simu = printChars(fontSize, true);
    }

    printChars(fontSize, false);

    ctx.restore();

    font.texture.initTexture(font.canvas, filter);
    font.texture.unpackAlpha = true;
    textureOut.set(font.texture);

    font.lastChange = CABLES.now();

    createMesh = true;
    createTexture = false;
}


};

Ops.Gl.Meshes.TextMesh_v2.prototype = new CABLES.Op();
CABLES.OPS["2390f6b3-2122-412e-8c8d-5c2f574e8bd1"]={f:Ops.Gl.Meshes.TextMesh_v2,objName:"Ops.Gl.Meshes.TextMesh_v2"};




// **************************************************************
// 
// Ops.String.NumberToString_v2
// 
// **************************************************************

Ops.String.NumberToString_v2 = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    val = op.inValue("Number"),
    result = op.outString("Result");

val.onChange = update;
update();

function update()
{
    result.set(String(val.get() || 0));
}


};

Ops.String.NumberToString_v2.prototype = new CABLES.Op();
CABLES.OPS["5c6d375a-82db-4366-8013-93f56b4061a9"]={f:Ops.String.NumberToString_v2,objName:"Ops.String.NumberToString_v2"};




// **************************************************************
// 
// Ops.Trigger.Sequence
// 
// **************************************************************

Ops.Trigger.Sequence = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    exe = op.inTrigger("exe"),
    cleanup = op.inTriggerButton("Clean up connections");

const
    exes = [],
    triggers = [],
    num = 16;

let
    updateTimeout = null,
    connectedOuts = [];

exe.onTriggered = triggerAll;
cleanup.onTriggered = clean;
cleanup.setUiAttribs({ "hideParam": true, "hidePort": true });

for (let i = 0; i < num; i++)
{
    const p = op.outTrigger("trigger " + i);
    triggers.push(p);
    p.onLinkChanged = updateButton;

    if (i < num - 1)
    {
        let newExe = op.inTrigger("exe " + i);
        newExe.onTriggered = triggerAll;
        exes.push(newExe);
    }
}

updateConnected();

function updateConnected()
{
    connectedOuts.length = 0;
    for (let i = 0; i < triggers.length; i++)
        if (triggers[i].links.length > 0) connectedOuts.push(triggers[i]);
}

function updateButton()
{
    updateConnected();
    clearTimeout(updateTimeout);
    updateTimeout = setTimeout(() =>
    {
        let show = false;
        for (let i = 0; i < triggers.length; i++)
            if (triggers[i].links.length > 1) show = true;

        cleanup.setUiAttribs({ "hideParam": !show });

        if (op.isCurrentUiOp()) op.refreshParams();
    }, 60);
}

function triggerAll()
{
    // for (let i = 0; i < triggers.length; i++) triggers[i].trigger();
    for (let i = 0; i < connectedOuts.length; i++) connectedOuts[i].trigger();
}

function clean()
{
    let count = 0;
    for (let i = 0; i < triggers.length; i++)
    {
        let removeLinks = [];

        if (triggers[i].links.length > 1)
            for (let j = 1; j < triggers[i].links.length; j++)
            {
                while (triggers[count].links.length > 0) count++;

                removeLinks.push(triggers[i].links[j]);
                const otherPort = triggers[i].links[j].getOtherPort(triggers[i]);
                op.patch.link(op, "trigger " + count, otherPort.op, otherPort.name);
                count++;
            }

        for (let j = 0; j < removeLinks.length; j++) removeLinks[j].remove();
    }
    updateButton();
    updateConnected();
}


};

Ops.Trigger.Sequence.prototype = new CABLES.Op();
CABLES.OPS["a466bc1f-06e9-4595-8849-bffb9fe22f99"]={f:Ops.Trigger.Sequence,objName:"Ops.Trigger.Sequence"};




// **************************************************************
// 
// Ops.Math.MathExpression
// 
// **************************************************************

Ops.Math.MathExpression = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const inA = op.inFloat("A", 0);
const inB = op.inFloat("B", 1);
const inC = op.inFloat("C", 2);
const inD = op.inFloat("D", 3);
op.setPortGroup("Parameters", [inA, inB, inC, inD]);
const inExpression = op.inString("Expression", "a*(b+c+d)");
op.setPortGroup("Expression", [inExpression]);
const outResult = op.outNumber("Result");
const outExpressionIsValid = op.outBool("Expression Valid");

let currentFunction = inExpression.get();
let functionValid = false;

const createFunction = () =>
{
    try
    {
        currentFunction = new Function("m", "a", "b", "c", "d", `with(m) { return ${inExpression.get()} }`);
        functionValid = true;
        evaluateFunction();
        outExpressionIsValid.set(functionValid);
    }
    catch (e)
    {
        functionValid = false;
        outExpressionIsValid.set(functionValid);
        if (e instanceof ReferenceError || e instanceof SyntaxError) return;
    }
};

const evaluateFunction = () =>
{
    if (functionValid)
    {
        outResult.set(currentFunction(Math, inA.get(), inB.get(), inC.get(), inD.get()));
        if (!inExpression.get()) outResult.set(0);
    }

    outExpressionIsValid.set(functionValid);
};


inA.onChange = inB.onChange = inC.onChange = inD.onChange = evaluateFunction;
inExpression.onChange = createFunction;
createFunction();


};

Ops.Math.MathExpression.prototype = new CABLES.Op();
CABLES.OPS["d2343a1e-64ea-45b2-99ed-46e167bbdcd3"]={f:Ops.Math.MathExpression,objName:"Ops.Math.MathExpression"};




// **************************************************************
// 
// Ops.User.cristianvogel.PickingMaterialExtra
// 
// **************************************************************

Ops.User.cristianvogel.PickingMaterialExtra = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={"pick_frag":"UNI float r;\n\nvoid main()\n{\n   outColor= vec4(r,1.0,r,1.0);\n}","pick_vert":"IN vec3 vPosition;\nUNI mat4 projMatrix;\n// UNI mat4 mvMatrix;\nUNI mat4 modelMatrix;\nUNI mat4 viewMatrix;\n{{MODULES_HEAD}}\n\nvoid main()\n{\n    vec4 pos = vec4( vPosition, 1. );\n    mat4 mMatrix=modelMatrix;\n\n    #ifdef BILLBOARD\n       mat4 mvMatrix=viewMatrix*mMatrix;\n\n        vec3 position=vPosition;\n        gl_Position = projMatrix * mvMatrix * vec4((\n           position.x * vec3(\n               mvMatrix[0][0],\n               mvMatrix[1][0],\n               mvMatrix[2][0] ) +\n           position.y * vec3(\n               mvMatrix[0][1],\n               mvMatrix[1][1],\n               mvMatrix[2][1]) ), 1.0);\n   #endif\n\n\n    {{MODULE_VERTEX_POSITION}}\n\n\n   #ifndef BILLBOARD\n\n       mat4 mvMatrix=viewMatrix*mMatrix;\n       gl_Position = projMatrix * mvMatrix * vec4(vPosition,  1.0);\n   #endif\n}",};
const cgl = op.patch.cgl;

const render = op.inTrigger("render");

const active = op.inBool("active", true);

const next = op.outTrigger("trigger");

const isPicked = op.outBool("is picked");

const pickedTrigger = op.outTrigger("On Picked");

const pickedID = op.outNumber("pickedID")

const doBillboard = op.inBool("billboard", false); // op.addInPort(new CABLES.Port(op, "billboard", CABLES.OP_PORT_TYPE_VALUE, { "display": "bool" }));
doBillboard.set(false);

doBillboard.onChange = function ()
{
    if (doBillboard.get()) shader.define("BILLBOARD");
    else shader.removeDefine("BILLBOARD");
};

const cursor = op.inDropDown("cursor", ["pointer", "auto", "default", "crosshair", "move", "n-resize", "ne-resize", "e-resize", "se-resize", "s-resize", "sw-resize", "w-resize", "nw-resize", "text", "wait", "help"]);

cursor.set("pointer");


function doRender()
{


    cgl.frameStore.pickingpassNum += 2;
    const currentPickingColor = cgl.frameStore.pickingpassNum;

    if (cgl.frameStore.pickingpass)
    {
        // isPicked.set(false);

        if (active.get()) {
            pickColorUniformR.setValue( currentPickingColor / 511);

        }
        else {
            pickColorUniformR.setValue( pickColorUniformR.getValue() * 511  );
        }

        cgl.pushShader(shader);
        next.trigger();
        cgl.popShader();

    }
    else
    {
        isPicked.set(cgl.frameStore.pickedColor == currentPickingColor);

        if (cgl.frameStore.pickedColor == currentPickingColor)
        {
            if (cursor.get().length > 0 && cgl.canvas.style.cursor != cursor.get())
            {
                cgl.canvas.style.cursor =  cursor.get();
            }
            pickedTrigger.trigger();
            pickedID.set(currentPickingColor)
        }
        else
        {
        }

        next.trigger();
    }
}

const srcVert = attachments.pick_vert;
const srcFrag =  attachments.pick_frag  ;

var shader = new CGL.Shader(cgl, "PickingMaterial");
shader.offScreenPass = true;
shader.setSource(srcVert, srcFrag);
let pickColorUniformR = null;
 pickColorUniformR = new CGL.Uniform(shader, "f", "r", 0);

render.onTriggered = doRender;
doRender();


};

Ops.User.cristianvogel.PickingMaterialExtra.prototype = new CABLES.Op();
CABLES.OPS["f4f2023c-2b5f-4c15-8018-c00949f4ab45"]={f:Ops.User.cristianvogel.PickingMaterialExtra,objName:"Ops.User.cristianvogel.PickingMaterialExtra"};




// **************************************************************
// 
// Ops.Math.Sum
// 
// **************************************************************

Ops.Math.Sum = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    number1 = op.inValueFloat("number1", 1),
    number2 = op.inValueFloat("number2", 1),
    result = op.outNumber("result");

op.setTitle("+");

number1.onChange =
number2.onChange = exec;
exec();

function exec()
{
    const v = number1.get() + number2.get();
    if (!isNaN(v))
        result.set(v);
}


};

Ops.Math.Sum.prototype = new CABLES.Op();
CABLES.OPS["c8fb181e-0b03-4b41-9e55-06b6267bc634"]={f:Ops.Math.Sum,objName:"Ops.Math.Sum"};




// **************************************************************
// 
// Ops.User.cristianvogel.PickerOutputsCoords
// 
// **************************************************************

Ops.User.cristianvogel.PickerOutputsCoords = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};

op.render = op.inTrigger("render");

const useMouseCoords = op.inBool("Use Mouse Coordinates", true);

op.x = op.inFloat("x");
op.y = op.inFloat("y");
op.enabled = op.inBool("enabled");
op.enabled.set(true);

op.trigger = op.outTrigger("trigger");
const somethingPicked = op.outBool("Something Picked");

const cursor = op.inDropDown("cursor", ["", "pointer", "auto", "default", "crosshair", "move", "n-resize", "ne-resize", "e-resize", "se-resize", "s-resize", "sw-resize", "w-resize", "nw-resize", "text", "wait", "help"]);

const xOut =    op.outNumber("X");
const yOut = op.outNumber("Y");

// inValueSelect
cursor.set("default");

const pixelRGB = new Uint8Array(4);
let fb = null;
const cgl = op.patch.cgl;
let lastReadPixel = 0;
let canceledTouch = false;
if (cgl.glVersion == 1) fb = new CGL.Framebuffer(cgl, 4, 4);
else
{
    fb = new CGL.Framebuffer2(cgl, 4, 4, { "multisampling": false });
}

const tex = op.outTexture("pick texture");
tex.set(fb.getTextureColor());
useMouseCoords.onChange = updateListeners;
updateListeners();

function renderPickingPass()
{
    cgl.frameStore.renderOffscreen = true;
    cgl.frameStore.pickingpass = true;
    cgl.frameStore.pickingpassNum = 0;
    op.trigger.trigger();
    cgl.frameStore.pickingpass = false;
    cgl.frameStore.renderOffscreen = false;
}
// needed to check if hidpi is set in op.patch.cgl.pixelDensity to make this work
// window.devicePixelRatio is always the hardware, not affected
// by CABLES.main hidpi flag

function mouseMove(e)
{
    if (e && e.hasOwnProperty("offsetX") >= 0)
    {
        op.x.set(e.offsetX * op.patch.cgl.pixelDensity * (window.devicePixelRatio || 1));
        op.y.set(e.offsetY * op.patch.cgl.pixelDensity * (window.devicePixelRatio || 1));
    }
}

function updateListeners()
{
    cgl.canvas.removeEventListener("mouseleave", mouseleave);
    cgl.canvas.removeEventListener("mousemove", mouseMove);
    cgl.canvas.removeEventListener("touchmove", ontouchmove);
    cgl.canvas.removeEventListener("touchstart", ontouchstart);
    cgl.canvas.removeEventListener("touchend", ontouchend);
    cgl.canvas.removeEventListener("touchcancel", ontouchend);

    if (useMouseCoords.get())
    {
        cgl.canvas.addEventListener("mouseleave", mouseleave);
        cgl.canvas.addEventListener("mousemove", mouseMove);
        cgl.canvas.addEventListener("touchmove", ontouchmove);
        cgl.canvas.addEventListener("touchstart", ontouchstart);
        cgl.canvas.addEventListener("touchend", ontouchend);
        cgl.canvas.addEventListener("touchcancel", ontouchend);
    }
}

function fixTouchEvent(touchEvent)
{
    if (touchEvent)
    {
        touchEvent.offsetX = touchEvent.pageX - touchEvent.target.offsetLeft;
        touchEvent.offsetY = touchEvent.pageY - touchEvent.target.offsetTop;

        if (!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))
        {
            touchEvent.offsetX *= (window.devicePixelRatio || 1);
            touchEvent.offsetY *= (window.devicePixelRatio || 1);
        }

        return touchEvent;
    }
}

function ontouchstart(event)
{
    canceledTouch = false;
    if (event.touches && event.touches.length > 0)
    {
        ontouchmove(event);
    }
}

function mouseleave(event)
{
    op.x.set(-1000);
    op.y.set(-1000);
}

function ontouchend(event)
{
    canceledTouch = true;
    op.x.set(-1000);
    op.y.set(-1000);
}

function ontouchmove(event)
{
    if (event.touches && event.touches.length > 0)
    {
        mouseMove(fixTouchEvent(event.touches[0]));
    }
}

const doRender = function ()
{
    if (cursor.get() != cgl.canvas.style.cursor)
    {
        cgl.canvas.style.cursor = cursor.get();
    }

    if ( op.x.get() >= 0 && !canceledTouch)
    {
        if (CABLES.now() - lastReadPixel >= 50)
        {
            const minimizeFB = 2;
            cgl.resetViewPort();

            const vpW = Math.floor(cgl.canvasWidth / minimizeFB);
            const vpH = Math.floor(cgl.canvasHeight / minimizeFB);

            if (vpW != fb.getWidth() || vpH != fb.getHeight())
            {
                tex.set(null);
                fb.setSize(vpW, vpH);
                tex.set(fb.getTextureColor());
            }

            cgl.pushModelMatrix();
            fb.renderStart();

            renderPickingPass();


            let x = Math.floor(op.x.get() / minimizeFB / window.devicePixelRatio);
            let y = Math.floor(vpH - op.y.get() / minimizeFB / window.devicePixelRatio);
            if (x < 0)x = 0;
            if (y < 0)y = 0;

            if (somethingPicked.get())
                {
                    xOut.set(x);
                    yOut.set(y);
                }

          if ( op.enabled.get()) {
            cgl.gl.readPixels(x, y, 1, 1, cgl.gl.RGBA, cgl.gl.UNSIGNED_BYTE, pixelRGB);
}
            lastReadPixel = CABLES.now();

            fb.renderEnd();
            cgl.popModelMatrix();
        }


        cgl.frameStore.pickedColor = pixelRGB[0] + pixelRGB[2];


        if (cgl.frameStore.pickedColor)somethingPicked.set(true);
        else somethingPicked.set(false);

        cgl.frameStore.pickingpassNum = 0;
        op.trigger.trigger();
    }
    else
    {
        cgl.frameStore.pickedColor = -1000;
        op.trigger.trigger();
        somethingPicked.set(false);
    }
};

function preview()
{

    render();
    tex.get().preview();

}

// tex.onPreviewChanged = function ()
// {
//     if (tex.showPreview) op.render.onTriggered = doRender;
//     else op.render.onTriggered = doRender;
// };

op.render.onTriggered = doRender;




};

Ops.User.cristianvogel.PickerOutputsCoords.prototype = new CABLES.Op();
CABLES.OPS["07da8c67-39f4-4246-ae82-cbf939b66636"]={f:Ops.User.cristianvogel.PickerOutputsCoords,objName:"Ops.User.cristianvogel.PickerOutputsCoords"};




// **************************************************************
// 
// Ops.Html.DivElement_v3
// 
// **************************************************************

Ops.Html.DivElement_v3 = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    inText = op.inString("Text", "Hello Div"),
    inId = op.inString("Id"),
    inClass = op.inString("Class"),
    inStyle = op.inStringEditor("Style", "position:absolute;\nz-index:100;", "inline-css"),
    inInteractive = op.inValueBool("Interactive", false),
    inVisible = op.inValueBool("Visible", true),
    inBreaks = op.inValueBool("Convert Line Breaks", false),
    inPropagation = op.inValueBool("Propagate Click-Events", true),
    outElement = op.outObject("DOM Element", null, "element"),
    outHover = op.outBoolNum("Hover"),
    outClicked = op.outTrigger("Clicked");

let listenerElement = null;
let oldStr = null;
let prevDisplay = "block";
let div = null;

const canvas = op.patch.cgl.canvas.parentElement;

createElement();

inClass.onChange = updateClass;
inBreaks.onChange = inText.onChange = updateText;
inStyle.onChange = updateStyle;
inInteractive.onChange = updateInteractive;
inVisible.onChange = updateVisibility;

updateText();
updateStyle();
warning();
updateInteractive();

op.onDelete = removeElement;

outElement.onLinkChanged = updateStyle;

function createElement()
{
    div = op.patch.getDocument().createElement("div");
    div.dataset.op = op.id;
    div.classList.add("cablesEle");

    if (inId.get()) div.id = inId.get();

    canvas.appendChild(div);
    outElement.set(div);
}

function removeElement()
{
    if (div) removeClasses();
    if (div && div.parentNode) div.parentNode.removeChild(div);
    oldStr = null;
    div = null;
}

function setCSSVisible(visible)
{
    if (!visible)
    {
        div.style.visibility = "hidden";
        prevDisplay = div.style.display || "block";
        div.style.display = "none";
    }
    else
    {
        // prevDisplay=div.style.display||'block';
        if (prevDisplay == "none") prevDisplay = "block";
        div.style.visibility = "visible";
        div.style.display = prevDisplay;
    }
}

function updateVisibility()
{
    setCSSVisible(inVisible.get());
}

function updateText()
{
    let str = inText.get();

    if (oldStr === str) return;
    oldStr = str;

    if (str && inBreaks.get()) str = str.replace(/(?:\r\n|\r|\n)/g, "<br>");

    if (div.innerHTML != str) div.innerHTML = str;
    outElement.set(null);
    outElement.set(div);
}

// inline css inisde div
function updateStyle()
{
    if (!div) return;
    // if (inStyle.get() != div.style)
    // {
    div.setAttribute("style", inStyle.get());
    updateVisibility();
    outElement.set(null);
    outElement.set(div);
    // }

    if (!div.parentElement)
    {
        canvas.appendChild(div);
    }

    warning();
}

let oldClassesStr = "";

function removeClasses()
{
    if (!div) return;

    const classes = (inClass.get() || "").split(" ");
    for (let i = 0; i < classes.length; i++)
    {
        if (classes[i]) div.classList.remove(classes[i]);
    }
    oldClassesStr = "";
}

function updateClass()
{
    const classes = (inClass.get() || "").split(" ");
    const oldClasses = (oldClassesStr || "").split(" ");

    let found = false;

    for (let i = 0; i < oldClasses.length; i++)
    {
        if (
            oldClasses[i] &&
            classes.indexOf(oldClasses[i].trim()) == -1)
        {
            found = true;
            div.classList.remove(oldClasses[i]);
        }
    }

    for (let i = 0; i < classes.length; i++)
    {
        if (classes[i])
        {
            div.classList.add(classes[i].trim());
        }
    }

    oldClassesStr = inClass.get();
    warning();
}

function onMouseEnter(e)
{
    outHover.set(true);
}

function onMouseLeave(e)
{
    outHover.set(false);
}

function onMouseClick(e)
{
    if (!inPropagation.get())
    {
        e.stopPropagation();
    }
    outClicked.trigger();
}

function updateInteractive()
{
    removeListeners();
    if (inInteractive.get()) addListeners();
}

inId.onChange = function ()
{
    div.id = inId.get();
};

function removeListeners()
{
    if (listenerElement)
    {
        listenerElement.removeEventListener("pointerdown", onMouseClick);
        listenerElement.removeEventListener("pointerleave", onMouseLeave);
        listenerElement.removeEventListener("pointerenter", onMouseEnter);
        listenerElement = null;
    }
}

function addListeners()
{
    if (listenerElement)removeListeners();

    listenerElement = div;

    if (listenerElement)
    {
        listenerElement.addEventListener("pointerdown", onMouseClick);
        listenerElement.addEventListener("pointerleave", onMouseLeave);
        listenerElement.addEventListener("pointerenter", onMouseEnter);
    }
}

op.addEventListener("onEnabledChange", function (enabled)
{
    removeElement();
    if (enabled)
    {
        createElement();
        updateStyle();
        updateClass();
        updateText();
        updateInteractive();
    }
    // if(enabled) updateVisibility();
    // else setCSSVisible(false);
});

function warning()
{
    if (inClass.get() && inStyle.get())
    {
        op.setUiError("error", "Element uses external and inline CSS", 1);
    }
    else
    {
        op.setUiError("error", null);
    }
}


};

Ops.Html.DivElement_v3.prototype = new CABLES.Op();
CABLES.OPS["d55d398c-e68e-486b-b0ce-d9c4bdf7df05"]={f:Ops.Html.DivElement_v3,objName:"Ops.Html.DivElement_v3"};




// **************************************************************
// 
// Ops.String.StringCompose_v3
// 
// **************************************************************

Ops.String.StringCompose_v3 = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    format=op.inString('Format',"hello $a, $b $c und $d"),
    a=op.inString('String A','world'),
    b=op.inString('String B',1),
    c=op.inString('String C',2),
    d=op.inString('String D',3),
    e=op.inString('String E'),
    f=op.inString('String F'),
    result=op.outString("Result");

format.onChange=
    a.onChange=
    b.onChange=
    c.onChange=
    d.onChange=
    e.onChange=
    f.onChange=update;

update();

function update()
{
    var str=format.get()||'';
    if(typeof str!='string')
        str='';

    str = str.replace(/\$a/g, a.get());
    str = str.replace(/\$b/g, b.get());
    str = str.replace(/\$c/g, c.get());
    str = str.replace(/\$d/g, d.get());
    str = str.replace(/\$e/g, e.get());
    str = str.replace(/\$f/g, f.get());

    result.set(str);
}

};

Ops.String.StringCompose_v3.prototype = new CABLES.Op();
CABLES.OPS["6afea9f4-728d-4f3c-9e75-62ddc1448bf0"]={f:Ops.String.StringCompose_v3,objName:"Ops.String.StringCompose_v3"};




// **************************************************************
// 
// Ops.Gl.Matrix.Translate
// 
// **************************************************************

Ops.Gl.Matrix.Translate = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    render = op.inTrigger("render"),
    trigger = op.outTrigger("trigger"),
    x = op.inValue("x"),
    y = op.inValue("y"),
    z = op.inValue("z");

const vec = vec3.create();

render.onTriggered = function ()
{
    const cgl = op.patch.cg;

    vec3.set(vec, x.get(), y.get(), z.get());
    cgl.pushModelMatrix();
    mat4.translate(cgl.mMatrix, cgl.mMatrix, vec);
    trigger.trigger();
    cgl.popModelMatrix();
};


};

Ops.Gl.Matrix.Translate.prototype = new CABLES.Op();
CABLES.OPS["1f89ba0e-e7eb-46d7-8c66-7814b7c528b9"]={f:Ops.Gl.Matrix.Translate,objName:"Ops.Gl.Matrix.Translate"};




// **************************************************************
// 
// Ops.Gl.Meshes.Cube_v2
// 
// **************************************************************

Ops.Gl.Meshes.Cube_v2 = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const
    render = op.inTrigger("Render"),
    active = op.inValueBool("Render Mesh", true),
    width = op.inValue("Width", 1),
    len = op.inValue("Length", 1),
    height = op.inValue("Height", 1),
    center = op.inValueBool("Center", true),
    mapping = op.inSwitch("Mapping", ["Side", "Cube +-", "SideWrap"], "Side"),
    mappingBias = op.inValue("Bias", 0),
    inFlipX = op.inValueBool("Flip X", true),
    sideTop = op.inValueBool("Top", true),
    sideBottom = op.inValueBool("Bottom", true),
    sideLeft = op.inValueBool("Left", true),
    sideRight = op.inValueBool("Right", true),
    sideFront = op.inValueBool("Front", true),
    sideBack = op.inValueBool("Back", true),
    trigger = op.outTrigger("Next"),
    geomOut = op.outObject("geometry", null, "geometry");

const cgl = op.patch.cgl;
op.toWorkPortsNeedToBeLinked(render);
op.toWorkShouldNotBeChild("Ops.Gl.TextureEffects.ImageCompose", CABLES.OP_PORT_TYPE_FUNCTION);

op.setPortGroup("Mapping", [mapping, mappingBias, inFlipX]);
op.setPortGroup("Geometry", [width, height, len, center]);
op.setPortGroup("Sides", [sideTop, sideBottom, sideLeft, sideRight, sideFront, sideBack]);

let geom = null,
    mesh = null,
    meshvalid = true,
    needsRebuild = true;

mappingBias.onChange =
    inFlipX.onChange =
    sideTop.onChange =
    sideBottom.onChange =
    sideLeft.onChange =
    sideRight.onChange =
    sideFront.onChange =
    sideBack.onChange =
    mapping.onChange =
    width.onChange =
    height.onChange =
    len.onChange =
    center.onChange = buildMeshLater;

function buildMeshLater()
{
    needsRebuild = true;
}

render.onLinkChanged = function ()
{
    if (!render.isLinked()) geomOut.set(null);
    else geomOut.setRef(geom);
};

render.onTriggered = function ()
{
    if (needsRebuild)buildMesh();
    if (active.get() && mesh && meshvalid) mesh.render(cgl.getShader());
    trigger.trigger();
};

op.preRender = function ()
{
    buildMesh();
    mesh.render(cgl.getShader());
};

function buildMesh()
{
    if (!geom)geom = new CGL.Geometry("cubemesh");
    geom.clear();

    let x = width.get();
    let nx = -1 * width.get();
    let y = height.get();
    let ny = -1 * height.get();
    let z = len.get();
    let nz = -1 * len.get();

    if (!center.get())
    {
        nx = 0;
        ny = 0;
        nz = 0;
    }
    else
    {
        x *= 0.5;
        nx *= 0.5;
        y *= 0.5;
        ny *= 0.5;
        z *= 0.5;
        nz *= 0.5;
    }

    addAttribs(geom, x, y, z, nx, ny, nz);
    if (mapping.get() == "Side") sideMappedCube(geom,1,1,1);
    else if (mapping.get() == "SideWrap") sideMappedCube(geom,x,y,z);
    else cubeMappedCube(geom);

    geom.verticesIndices = [];
    if (sideTop.get()) geom.verticesIndices.push(8, 9, 10, 8, 10, 11); // Top face
    if (sideBottom.get()) geom.verticesIndices.push(12, 13, 14, 12, 14, 15); // Bottom face
    if (sideLeft.get()) geom.verticesIndices.push(20, 21, 22, 20, 22, 23); // Left face
    if (sideRight.get()) geom.verticesIndices.push(16, 17, 18, 16, 18, 19); // Right face
    if (sideBack.get()) geom.verticesIndices.push(4, 5, 6, 4, 6, 7); // Back face
    if (sideFront.get()) geom.verticesIndices.push(0, 1, 2, 0, 2, 3); // Front face

    if (geom.verticesIndices.length === 0) meshvalid = false;
    else meshvalid = true;

    if (mesh)mesh.dispose();
    mesh = op.patch.cg.createMesh(geom);

    geomOut.setRef(geom);

    needsRebuild = false;
}

op.onDelete = function ()
{
    if (mesh)mesh.dispose();
};

function sideMappedCube(geom,x,y,z)
{
    const bias = mappingBias.get();

    let u1 = 1.0 - bias;
    let u0 = 0.0 + bias;
    if (inFlipX.get())
    {
        [u1, u0] = [u0,u1]
    }

    let v1 = 1.0 - bias;
    let v0 = 0.0 + bias;

    geom.setTexCoords([
        // Front face
        x*u0, y*v1,
        x*u1, y*v1,
        x*u1, y*v0,
        x*u0, y*v0,
        // Back face
        x*u1, y*v1,
        x*u1, y*v0,
        x*u0, y*v0,
        x*u0, y*v1,
        // Top face
        x*u0, z*v0,
        x*u0, z*v1,
        x*u1, z*v1,
        x*u1, z*v0,
        // Bottom face
        x*u1, y*v0,
        x*u0, y*v0,
        x*u0, y*v1,
        x*u1, y*v1,
        // Right face
        z*u1, y*v1,
        z*u1, y*v0,
        z*u0, y*v0,
        z*u0, y*v1,
        // Left face
        z*u0, y*v1,
        z*u1, y*v1,
        z*u1, y*v0,
        z*u0, y*v0,
    ]);
}

function cubeMappedCube(geom, x, y, z, nx, ny, nz)
{
    const sx = 0.25;
    const sy = 1 / 3;
    const bias = mappingBias.get();

    let flipx = 0.0;
    if (inFlipX.get()) flipx = 1.0;

    const tc = [];
    tc.push(
        // Front face   Z+
        flipx + sx + bias, sy * 2 - bias,
        flipx + sx * 2 - bias, sy * 2 - bias,
        flipx + sx * 2 - bias, sy + bias,
        flipx + sx + bias, sy + bias,
        // Back face Z-
        flipx + sx * 4 - bias, sy * 2 - bias,
        flipx + sx * 4 - bias, sy + bias,
        flipx + sx * 3 + bias, sy + bias,
        flipx + sx * 3 + bias, sy * 2 - bias);

    if (inFlipX.get())
        tc.push(
            // Top face
            sx + bias, 0 - bias,
            sx * 2 - bias, 0 - bias,
            sx * 2 - bias, sy * 1 + bias,
            sx + bias, sy * 1 + bias,
            // Bottom face
            sx + bias, sy * 3 + bias,
            sx + bias, sy * 2 - bias,
            sx * 2 - bias, sy * 2 - bias,
            sx * 2 - bias, sy * 3 + bias
        );

    else
        tc.push(
            // Top face
            sx + bias, 0 + bias,
            sx + bias, sy * 1 - bias,
            sx * 2 - bias, sy * 1 - bias,
            sx * 2 - bias, 0 + bias,
            // Bottom face
            sx + bias, sy * 3 - bias,
            sx * 2 - bias, sy * 3 - bias,
            sx * 2 - bias, sy * 2 + bias,
            sx + bias, sy * 2 + bias);

    tc.push(
        // Right face
        flipx + sx * 3 - bias, 1.0 - sy - bias,
        flipx + sx * 3 - bias, 1.0 - sy * 2 + bias,
        flipx + sx * 2 + bias, 1.0 - sy * 2 + bias,
        flipx + sx * 2 + bias, 1.0 - sy - bias,
        // Left face
        flipx + sx * 0 + bias, 1.0 - sy - bias,
        flipx + sx * 1 - bias, 1.0 - sy - bias,
        flipx + sx * 1 - bias, 1.0 - sy * 2 + bias,
        flipx + sx * 0 + bias, 1.0 - sy * 2 + bias);

    geom.setTexCoords(tc);
}

function addAttribs(geom, x, y, z, nx, ny, nz)
{
    geom.vertices = [
        // Front face
        nx, ny, z,
        x, ny, z,
        x, y, z,
        nx, y, z,
        // Back face
        nx, ny, nz,
        nx, y, nz,
        x, y, nz,
        x, ny, nz,
        // Top face
        nx, y, nz,
        nx, y, z,
        x, y, z,
        x, y, nz,
        // Bottom face
        nx, ny, nz,
        x, ny, nz,
        x, ny, z,
        nx, ny, z,
        // Right face
        x, ny, nz,
        x, y, nz,
        x, y, z,
        x, ny, z,
        // zeft face
        nx, ny, nz,
        nx, ny, z,
        nx, y, z,
        nx, y, nz
    ];

    geom.vertexNormals = new Float32Array([
        // Front face
        0.0, 0.0, 1.0,
        0.0, 0.0, 1.0,
        0.0, 0.0, 1.0,
        0.0, 0.0, 1.0,

        // Back face
        0.0, 0.0, -1.0,
        0.0, 0.0, -1.0,
        0.0, 0.0, -1.0,
        0.0, 0.0, -1.0,

        // Top face
        0.0, 1.0, 0.0,
        0.0, 1.0, 0.0,
        0.0, 1.0, 0.0,
        0.0, 1.0, 0.0,

        // Bottom face
        0.0, -1.0, 0.0,
        0.0, -1.0, 0.0,
        0.0, -1.0, 0.0,
        0.0, -1.0, 0.0,

        // Right face
        1.0, 0.0, 0.0,
        1.0, 0.0, 0.0,
        1.0, 0.0, 0.0,
        1.0, 0.0, 0.0,

        // Left face
        -1.0, 0.0, 0.0,
        -1.0, 0.0, 0.0,
        -1.0, 0.0, 0.0,
        -1.0, 0.0, 0.0
    ]);
    geom.tangents = new Float32Array([
        // front face
        0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,
        // back face
        1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,
        // top face
        -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0,
        // bottom face
        1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,
        // right face
        0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1,
        // left face
        0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1
    ]);
    geom.biTangents = new Float32Array([
        // front face
        -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0,
        // back face
        1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,
        // top face
        0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
        // bottom face
        0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1,
        // right face
        0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
        // left face
        0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1
    ]);
}


};

Ops.Gl.Meshes.Cube_v2.prototype = new CABLES.Op();
CABLES.OPS["37b92ba4-cea5-42ae-bf28-a513ca28549c"]={f:Ops.Gl.Meshes.Cube_v2,objName:"Ops.Gl.Meshes.Cube_v2"};




// **************************************************************
// 
// Ops.Vars.VarSetString_v2
// 
// **************************************************************

Ops.Vars.VarSetString_v2 = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
const val=op.inString("Value","New String");
op.varName=op.inDropDown("Variable",[],"",true);

new CABLES.VarSetOpWrapper(op,"string",val,op.varName);




};

Ops.Vars.VarSetString_v2.prototype = new CABLES.Op();
CABLES.OPS["0b4d9229-8024-4a30-9cc0-f6653942c2e4"]={f:Ops.Vars.VarSetString_v2,objName:"Ops.Vars.VarSetString_v2"};




// **************************************************************
// 
// Ops.Vars.VarGetString
// 
// **************************************************************

Ops.Vars.VarGetString = function()
{
CABLES.Op.apply(this,arguments);
const op=this;
const attachments=op.attachments={};
var val=op.outString("Value");
op.varName=op.inValueSelect("Variable",[],"",true);

new CABLES.VarGetOpWrapper(op,"string",op.varName,val);


};

Ops.Vars.VarGetString.prototype = new CABLES.Op();
CABLES.OPS["3ad08cfc-bce6-4175-9746-fef2817a3b12"]={f:Ops.Vars.VarGetString,objName:"Ops.Vars.VarGetString"};



window.addEventListener('load', function(event) {
CABLES.jsLoaded=new Event('CABLES.jsLoaded');
document.dispatchEvent(CABLES.jsLoaded);
});
// start js/vargetset.js
(()=>{"use strict";const t=0,e=2,i=2,s=3,a=5;CABLES.VarSetOpWrapper=class{constructor(r,h,_,o,n,p){this._valuePort=_,this._varNamePort=o,this._op=r,this._type=h,this._typeId=-1,this._triggerPort=n,this._nextPort=p,this._btnCreate=r.inTriggerButton("Create new variable"),this._btnCreate.setUiAttribs({hidePort:!0}),this._btnCreate.onTriggered=this._createVar.bind(this),this._helper=r.inUiTriggerButtons("",["Rename"]),this._helper.setUiAttribs({hidePort:!0}),this._helper.onTriggered=t=>{"Rename"==t&&CABLES.CMD.PATCH.renameVariable(r.varName.get())},this._op.setPortGroup("Variable",[this._helper,this._varNamePort,this._btnCreate]),this._op.on("uiParamPanel",this._updateVarNamesDropdown.bind(this)),this._op.patch.addEventListener("variablesChanged",this._updateName.bind(this)),this._op.patch.addEventListener("variableRename",this._renameVar.bind(this)),this._varNamePort.onChange=this._updateName.bind(this),this._isTexture="texture"===this._valuePort.uiAttribs.objType,this._valuePort.changeAlways=!0,this._triggerPort?this._triggerPort.onTriggered=()=>{this._setVarValue(!0)}:this._valuePort.onChange=this._setVarValue.bind(this),this._op.init=()=>{this._updateName(),this._triggerPort||this._setVarValue(),this._updateErrorUi()},this._typeId="array"==h?s:"object"==h?e:"string"==h?a:"texture"==h?i:t}_updateErrorUi(){CABLES.UI&&(this._varNamePort.get()?this._op.hasUiErrors&&this._op.setUiError("novarname",null):this._op.setUiError("novarname","no variable selected"))}_updateName(){const t=this._varNamePort.get();this._op.setTitle("var set"),this._op.setUiAttrib({extendTitle:"#"+t}),this._updateErrorUi();const e=this._op.patch.getVar(t);e&&!e.type&&(e.type=this._type),this._op.patch.hasVar(t)||0==t||this._triggerPort||this._setVarValue(),!this._op.patch.hasVar(t)&&0!=t&&this._triggerPort&&("string"==this._type||"number"==this._type?this._op.patch.setVarValue(t,""):this._op.patch.setVarValue(t,null)),this._op.isCurrentUiOp()&&(this._updateVarNamesDropdown(),this._op.refreshParams()),this._updateDisplay(),this._op.patch.emitEvent("opVariableNameChanged",this._op,this._varNamePort.get())}_createVar(){CABLES.CMD.PATCH.createVariable(this._op,this._type,(()=>{this._updateName()}))}_updateDisplay(){this._valuePort.setUiAttribs({greyout:!this._varNamePort.get()})}_updateVarNamesDropdown(){if(CABLES.UI&&CABLES.UI.loaded&&CABLES.UI.loaded){const t=[],e=this._op.patch.getVars();for(const i in e)e[i].type==this._type&&"0"!=i&&t.push(i);this._varNamePort.uiAttribs.values=t}}_renameVar(t,e){t==this._varNamePort.get()&&(this._varNamePort.set(e),this._updateName())}_setVarValue(i){const r=this._varNamePort.get();if(!r)return;const h=this._valuePort.get();this._typeId==t||this._typeId==a?this._op.patch.setVarValue(r,h):this._typeId==s?(this._arr=[],CABLES.copyArray(h,this._arr),this._op.patch.setVarValue(r,this._arr)):(this._typeId==e&&(this._isTexture?this._op.patch.setVarValue(r,CGL.Texture.getEmptyTexture(this._op.patch.cgl)):this._op.patch.setVarValue(r,null),h&&h.tex&&h._cgl&&!this._isTexture?this._op.setUiError("texobj","Dont use object variables for textures, use varSetTexture"):this._op.setUiError("texobj",null)),this._op.patch.setVarValue(r,h)),i&&this._nextPort&&this._nextPort.trigger()}},CABLES.VarGetOpWrapper=class{constructor(t,e,i,s){this._op=t,this._type=e,this._varnamePort=i,this._variable=null,this._valueOutPort=s,this._listenerId=null,this._op.on("uiParamPanel",this._updateVarNamesDropdown.bind(this)),this._op.on("uiErrorChange",this._updateTitle.bind(this)),this._op.patch.on("variableRename",this._renameVar.bind(this)),this._op.patch.on("variableDeleted",(t=>{this._op.isCurrentUiOp()&&this._op.refreshParams()})),this._varnamePort.onChange=this._changeVar.bind(this),this._op.patch.addEventListener("variablesChanged",this._init.bind(this)),this._op.onDelete=()=>{this._variable&&this._listenerId&&this._variable.off(this._listenerId)},this._op.init=()=>{this._init()}}get variable(){return this._variable}_changeVar(){this._variable&&this._listenerId&&this._variable.off(this._listenerId),this._init()}_renameVar(t,e){t==this._varnamePort.get()&&(this._varnamePort.set(e),this._updateVarNamesDropdown(),this._updateTitle(),this._listenerId=this._variable.on("change",this._setValueOut.bind(this)))}_updateVarNamesDropdown(){if(CABLES.UI&&CABLES.UI.loaded){const t=[],e=this._op.patch.getVars();for(const i in e)e[i].type==this._type&&"0"!=i&&t.push(i);this._op.varName.uiAttribs.values=t}}_setValueOut(t){this._valueOutPort&&this._valueOutPort.set(t)}_updateTitle(){this._variable?(this._op.setUiError("unknownvar",null),this._op.setTitle("var get"),this._op.setUiAttrib({extendTitle:"#"+this._varnamePort.get()}),this._valueOutPort&&this._valueOutPort.set(this._variable.getValue())):(this._op.setUiError("unknownvar","unknown variable! - there is no setVariable with this name ("+this._varnamePort.get()+")"),this._op.setUiAttrib({extendTitle:"#invalid"}),this._valueOutPort&&this._valueOutPort.set(0))}_init(){this._updateVarNamesDropdown(),this._variable&&this._listenerId&&this._variable.off(this._listenerId),this._variable=this._op.patch.getVar(this._op.varName.get()),this._variable&&(this._listenerId=this._variable.on("change",this._setValueOut.bind(this))),this._updateTitle(),this._op.patch.emitEvent("opVariableNameChanged",this._op,this._varnamePort.get())}},((this.CABLES=this.CABLES||{}).COREMODULES=this.CABLES.COREMODULES||{}).Vargetset={}.Cables})();// end js/vargetset.js
